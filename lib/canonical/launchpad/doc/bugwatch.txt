Bug Watches
===========

Malone is a bug tracker that understands the structure of the Open
Source world. It's there for people who want to use it, and take
advantage of this infrastructure.

But realistically, not everyone is going to switch to using Malone. To
workaround that in Malone, we have bug watches.

Bug watches watch bugs. More specifically, a bug watch watches a bug
in a bugtracker outside of Malone. By doing this, we can be kept aware
of the status of a bug that lives outside Malone for the benefit of
users and maintainers that are using Malone.

Retrieving Bug Watches
----------------------

Bug watches are accessed via a utility that provides IBugWatchSet.

    >>> from zope.component import getUtility
    >>> from canonical.launchpad.interfaces import IBugWatchSet
    >>> bugwatch = getUtility(IBugWatchSet).get(2)
    >>> bugwatch.remotebug
    u'2000'
    >>> bugwatch.url
    u'https://bugzilla.mozilla.org//show_bug.cgi?id=2000'
    >>> getUtility(IBugWatchSet).get(98765)
    Traceback (most recent call last):
    ...
    NotFoundError: 98765
    >>> getUtility(IBugWatchSet)[98765]
    Traceback (most recent call last):
    ...
    NotFoundError: 98765

Bug watches can also be accessed as a property of a bug tracker, with
the .watches attribute.

    >>> from canonical.launchpad.interfaces import IBugTrackerSet
    >>> bugtrackerset = getUtility(IBugTrackerSet)
    >>> debbugs = bugtrackerset['debbugs']
    >>> list(debbugs.watches)
    []
    >>> mozilla_bugtracker = bugtrackerset['mozilla.org']
    >>> sorted([(watch.bug.id, watch.remotebug) for watch in
    ...     mozilla_bugtracker.watches])
    [(1, u'123543'), (1, u'2000'), (1, u'42'), (2, u'42'), (9, u'1234')]

To get the latest 10 watches, use IBugTracker.latestwatches:

    >>> [(watch.bug.id, watch.remotebug) for watch in
    ...     mozilla_bugtracker.latestwatches]
    [(9, u'1234'), (1, u'2000'), (1, u'123543'), (1, u'42'), (2, u'42')]

We can retrieve the list of Launchpad bugs watching a particular
remote bug using getBugsWatching():

    >>> [bug.id for bug in mozilla_bugtracker.getBugsWatching('42')]
    [1, 2]


Creating Bug Watches
--------------------

To create a bugwatch, use IBugWatchSet.createBugWatch:

    >>> from canonical.launchpad.interfaces import (
    ...     IPersonSet, IBugSet)

    >>> sample_person = getUtility(IPersonSet).get(12)
    >>> bug_one = getUtility(IBugSet).get(1)
    >>> bugwatch = getUtility(IBugWatchSet).createBugWatch(
    ...     bug=bug_one, owner=sample_person, bugtracker=mozilla_bugtracker,
    ...     remotebug='1234')
    >>> bugwatch.url
    u'https://bugzilla.mozilla.org//show_bug.cgi?id=1234'
    >>> bugwatch.lastchecked is None
    True


Creating a SF.net Bugtracker
----------------------------

    >>> from canonical.lp.dbschema import BugTrackerType
    >>> sf = ("http://sourceforge.net/tracker/?atid=737291"
    ...       "&group_id=136955&func=browse")
    >>> bugtrackerset.ensureBugTracker(sf, sample_person,
    ...     BugTrackerType.SOURCEFORGE, "GNUTelephony BTS", "My summary",
    ...     "My contact details", "gnutelephony-bugs")
    <BugTracker at 0x...>
    >>> gtb = bugtrackerset['gnutelephony-bugs']

Creating SF.net Bug Watches
---------------------------

The URLifier for these bug watches deals with SF.net's horrible URLs.

    >>> sample_person = getUtility(IPersonSet).get(12)
    >>> bug_one = getUtility(IBugSet).get(1)
    >>> bugwatch = getUtility(IBugWatchSet).createBugWatch(
    ...     bug=bug_one, owner=sample_person, bugtracker=gtb,
    ...     remotebug='1337833')
    >>> bugwatch.url
    u'http://sourceforge.net/tracker/?aid=1337833&group_id=136955&atid=737291&func=detail'

