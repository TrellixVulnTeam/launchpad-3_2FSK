= Logging and OOPS reporting =

The Mailman XMLRPCRunner logs errors and reports OOPSes.


= MailmanErrorUtility =

The MailmanErrorUtility is a ErrorReportingUtility that is configured
in the [mailman] section of config.

    >>> from canonical.config import config
    >>> from canonical.launchpad.mailman.monkeypatches.xmlrpcrunner import (
    ...     MailmanErrorUtility)

    >>> error_utility = MailmanErrorUtility()
    >>> error_utility._default_config_section
    'mailman'

    >>> error_utility.prefix
    'TMMX'
    >>> config.mailman.oops_prefix
    'TMMX'

    >>> error_utility.error_dir
    '/var/tmp/mailman-xmlrpc.test'
    >>> config.mailman.error_dir
    '/var/tmp/mailman-xmlrpc.test'


= Error logging =

The log_exception() function is used by XMLRPCRunner to report known
exceptions. It reports the OOPS.

    >>> from canonical.launchpad.mailman.monkeypatches.xmlrpcrunner import (
    ...     log_exception)

    >>> def test_log_exception():
    ...     """Raise an error to test log_exception."""
    ...     try:
    ...         raise AssertionError("There is an OOPS in progress.")
    ...     except AssertionError, error:
    ...         log_exception('Generated Error: %s', error)

    >>> test_log_exception()
    >>> oops = error_utility.getLastOopsReport()
    >>> oops.id
    'OOPS-...TMMX...'
    >>> oops.type
    'AssertionError'
    >>> oops.value
    'There is an OOPS in progress.'
    >>> print oops.tb_text
    Traceback (innermost last):
    ...
    AssertionError: There is an OOPS in progress.

The message was written to the XMLRPCRunner's log.

    >>> xmlrpc_watcher.wait('Generated')
    >>> print 'log:', xmlrpc_watcher.last_lines_read[-1]
    log: ... Generated Error: There is an OOPS in progress.

Unknown exceptions are reported though the _log() method. It is
unreachable because XMLRPCRunner redefines _oneloop(), the only method
that calls it. It was tested by sabotaging the code to force a call
to _log().


