= Mass processing of requests =

Some people will always try to get more CDs from ShipIt just because it's
easy and free of charge.  To alleviate this problem we'll automatically
flag some requests with special statuses meaning that we'll likely want to
deny them. Note that we don't deny them automatically because we want
these people to feel that there's somebody checking all the requests rather
than just a system that they can easily game.

== Pending Special Consideration ==

All requests made by a given person when that person has at least two
other requests for that same distroseries and flavour already shipped will
be flagged with the PENDINGSPECIAL status. By default, they won't show up
on the list of pending requests seen by shipit admins.  Then, from time to
time, if we have too many of these requests we'll run a script to either
approve or deny them all at once.

== Duplicated address ==

When somebody makes a request for CDs of a given distroseries we check our
records to see if the shipping address has already been used by another user.
If it has, the request is marked with the DUPLICATEDADDRESS so that we can
process them all as a batch later.

== Processing requests with a given status ==

This is done by a script called shipit-process-requests, which simply calls
the processRequests() method of ShippingRequestSet, passing the status of the
requests we want to process and the new status of these requests.

    >>> from canonical.launchpad.interfaces import (
    ...     IShippingRequestSet, ShippingRequestStatus)
    >>> from canonical.launchpad.database import ShippingRequest
    >>> from canonical.database.sqlbase import (
    ...     flush_database_updates, flush_database_caches)
    >>> from zope.component import getUtility
    >>> pendingspecial = ShippingRequestStatus.PENDINGSPECIAL
    >>> pending = ShippingRequestStatus.PENDING
    >>> denied = ShippingRequestStatus.DENIED

    >>> ShippingRequest.selectBy(status=pendingspecial).count()
    0
    >>> pending_request = ShippingRequest.selectFirstBy(
    ...     status=pending, orderBy='id')
    >>> pending_request.status = pendingspecial
    >>> flush_database_updates()
    >>> ShippingRequest.selectBy(status=pendingspecial).count()
    1

    >>> getUtility(IShippingRequestSet).processRequests(
    ...     pendingspecial, denied)
    >>> from canonical.launchpad.mail import stub
    >>> import transaction
    >>> transaction.commit()
    >>> len(stub.test_emails)
    1
    >>> from_addr, to_addr, raw_message = stub.test_emails.pop()
    >>> to_addr
    ['info@shipit.ubuntu.com']
    >>> import email
    >>> print email.message_from_string(raw_message).get_payload(decode=True)
    Hello,
    ...
    Request #12, made by 'Jeff Waugh' containing 10 CDs
    ...

    >>> flush_database_updates()
    >>> ShippingRequest.selectBy(status=pendingspecial).count()
    0
    >>> pending_request.status == denied
    True


Now, let's run the script as a subprocess, to make sure it denies the
requests with duplicated address, as we expect it to.

    >>> pending_request.status = ShippingRequestStatus.DUPLICATEDADDRESS
    >>> flush_database_updates()
    >>> transaction.commit()

    >>> from subprocess import Popen, PIPE
    >>> process = Popen(
    ...     'scripts/shipit-process-requests.py -q --status=dupe',
    ...     shell=True, stdin=PIPE, stdout=PIPE, stderr=PIPE)
    >>> (out, err) = process.communicate()
    >>> out, err
    ('', '')
    >>> process.returncode
    0

    # Flush the caches because pending_request was changed in another
    # transaction.
    >>> flush_database_caches()
    >>> pending_request.status == denied
    True
