= Adding attachments when filing a bug =

It is possible to add attachments when filing a bug. The tests in this
file will cover this functionality for both the guided and advanced
filebug forms.


== Guided filebug form ==

Adding an attachment to a new bug is part of the second step of the
guided filebug form.

    >>> user_browser.open('http://bugs.launchpad.dev/firefox/+filebug')
    >>> user_browser.getControl('Summary').value = ('A totally new '
    ...     'bug with attachments')
    >>> user_browser.getControl('Continue').click()
    >>> user_browser.getControl('Further information').value = (
    ...     'We can now add attachments!')

The user can now choose to add an attachment to the bug. We create a
file-like object to demonstrate this.

    >>> from cStringIO import StringIO
    >>> example_file = StringIO('Traceback...')
    >>> example_file.seek(0)

    >>> user_browser.getControl('Attachment').add_file(
    ...   example_file, 'text/plain', 'example.txt')
    >>> user_browser.getControl('Description').value = ("A description "
    ...     "of the attachment")
    >>> user_browser.getControl('Submit Bug Report').click()
    >>> user_browser.url
    'http://bugs.launchpad.dev/firefox/+bug/...'

A notice on the bug page will tell us that the file has been attached:

    >>> for tag in find_tags_by_class(user_browser.contents,
    ...     'informational message'):
    ...     print tag.renderContents()
    Thank you for your bug report.
    The file "example.txt" was attached to the bug report.

We can check that the attachment is there and that its URL points to the
right place:

    >>> attachments = find_portlet(user_browser.contents, 'Bug attachments')
    >>> for li_tag in attachments.findAll('li', 'download'):
    ...     print li_tag.a.renderContents()
    A description of the attachment

    >>> user_browser.getLink('A description of the attachment').url
    'http://localhost:58000/.../example.txt'


== Advanced filebug form ==

Attachments can also be added using the advanced filebug form. In order
to demonstrate this we will create another example attachment for the
new bug:

    >>> from cStringIO import StringIO
    >>> example_file = StringIO('Traceback...')
    >>> example_file.seek(0)

We can then file another bug on Firefox using the advanced bug reporting
form.

    >>> user_browser.open(
    ...     'http://bugs.launchpad.dev/firefox/+filebug-advanced')
    >>> user_browser.getControl('Summary').value = ('Yet another new '
    ...     'bug with attachments, advanced version')
    >>> user_browser.getControl('Further information').value = ('Using'
    ...     ' the advanced bug filing form is just as worthwhile.')
    >>> user_browser.getControl('Attachment').add_file(
    ...   example_file, 'text/plain', 'example-2.txt')
    >>> user_browser.getControl('Description').value = ("Another "
    ...     "attachment")
    >>> user_browser.getControl('Submit Bug Report').click()
    >>> user_browser.url
    'http://bugs.launchpad.dev/firefox/+bug/...'

Again, a notice will acknowledge the new attachment.

    >>> for tag in find_tags_by_class(user_browser.contents, 'message'):
    ...     print tag.renderContents()
    Thank you for your bug report.
    The file "example-2.txt" was attached to the bug report.

The attachment will be included with the bug as before:

    >>> attachments = find_portlet(user_browser.contents, 'Bug attachments')
    >>> for li_tag in attachments.findAll('li', 'download'):
    ...     print li_tag.a.renderContents()
    Another attachment

    >>> user_browser.getLink('Another attachment').url
    'http://localhost:58000/.../example-2.txt'
