= Person Packages =

All packages maintained or uploaded by a given person can be seen on that
person's +packages page, which is linked to from the person's home page.

    >>> browser.open("http://launchpad.dev/~name16/+packages")
    >>> browser.title
    'Packages maintained by Foo Bar'

name16, aka the esteemed Foo Bar, has 9 maintained packages in the sample
data.  The page lists columns of data, "Name", "Uploaded To" and "Version"
that link to a distributionsourcepackage, distroseriessourcepackage and
distrosourcepackagerelease respectively.

Following a link on any item in the name column will take us to a
distribution source package page.  We'll use "foobar" on the second line here
as it has working links in the sample data:

    >>> link = browser.getLink("foobar")
    >>> print link
    <Link text='foobar' url='http://launchpad.dev/ubuntu/+source/foobar'>
    >>> link.click()
    >>> browser.title
    'Source Package "foobar" in Ubuntu Linux'

Same process for the second column should take us to a distribution series 
source package page:

    >>> browser.open("http://launchpad.dev/~name16/+packages")
    >>> link = browser.getLink(url="/ubuntu/breezy-autotest/+source/foobar")
    >>> print link
    <Link text='Ubuntu Breezy-autotest' url='http://launchpad.dev/ubuntu/breezy-autotest/+source/foobar'>
    >>> link.click()
    >>> browser.title
    'Breezy Badger Autotest source packages'

Same again for the third column should take us to a distribution source 
package release page:

    >>> browser.open("http://launchpad.dev/~name16/+packages")
    >>> link = browser.getLink(url="/ubuntu/+source/foobar/1.0")
    >>> print link
    <Link text='1.0' url='http://launchpad.dev/ubuntu/+source/foobar/1.0'>
    >>> link.click()
    >>> browser.title
    'foobar 1.0 (source) in Ubuntu'


== Private PPA packages ==

Packages listed in the PPA section of this page are filtered so that
if the user is not allowed to see a private package they are not present
in the list.  Private packages are defined as those which are only
published in a private archive; if they are published in a private
archive *and* a non-private archive, they are deemed to be non-private.

Let's make a helper function to print the PPA packages from the page:

    >>> def print_ppa_rows(browser):
    ...     rows = find_tags_by_class(browser.contents, "ppa_row")
    ...     for row in rows:
    ...         print extract_text(row)

And another helper function to set the private flag on a PPA:

    >>> def set_private(name, private=True):
    ...     admin_browser.open("http://launchpad.dev/~%s/+archive" % (
    ...         name))
    ...     admin_browser.getLink("Administer archive").click()
    ...     admin_browser.getControl(name="field.private").value = private
    ...     admin_browser.getControl("Save").click()

We will also amend some packages so that they belong to "cprov" and will
appear in his +packages page.  There are two "iceweasel" packages in the
sample data that will do nicely:

    >>> from zope.component import getUtility
    >>> from canonical.launchpad.ftests import login, logout
    >>> from canonical.database.sqlbase import flush_database_updates
    >>> from canonical.launchpad.interfaces import (
    ...     IPersonSet, ISourcePackageNameSet)
    >>> from canonical.launchpad.database.sourcepackagerelease import (
    ...     SourcePackageRelease)
    >>> login("foo.bar@canonical.com")
    >>> iceweasel = getUtility(ISourcePackageNameSet)['iceweasel']
    >>> packages = SourcePackageRelease.selectBy(sourcepackagename=iceweasel)
    >>> packages.count()
    2
    >>> cprov = getUtility(IPersonSet).getByName('cprov')
    >>> for package in packages:
    ...     package.creator = cprov
    >>> flush_database_updates()
    >>> logout()

Make user_browser a known user that does not conflict with "no-priv":

    >>> user_browser = setupBrowser(auth='Basic test@canonical.com:test')

=== Cprov's +packages page ===

So let's look at cprov's +packages page which has two entries in the
PPA section:

    >>> user_browser.open("http://launchpad.dev/~cprov/+packages")
    >>> print_ppa_rows(user_browser)
    iceweasel   PPA for Mark Shuttleworth - Ubuntu Warty 1.0
        2006-04-11 None - -
    iceweasel   PPA for No Privileges Person - Ubuntu Warty 1.0
        2006-04-11 None - -

Now, let's make the PPA for "No Privileges Person" private:

    >>> set_private("no-priv")

For unprivileged users, cprov's displayed PPA packages are now reduced
to the one in his own PPA because the other iceweasel is only published
in the newly-private PPA of the "no-priv" user.

The logged-in user's case:

    >>> user_browser.open("http://launchpad.dev/~cprov/+packages")
    >>> print_ppa_rows(user_browser)
    iceweasel   PPA for Mark Shuttleworth - Ubuntu Warty 1.0
        2006-04-11 None - -

The not logged-in (anonymous) user's case:

    >>> anon_browser.open("http://launchpad.dev/~cprov/+packages")
    >>> print_ppa_rows(anon_browser)
    iceweasel   PPA for Mark Shuttleworth - Ubuntu Warty 1.0
        2006-04-11 None - -

However no-priv himself and any Launchpad Administrator can still see
both packages:

    >>> nopriv_browser = setupBrowser(auth="Basic no-priv@canonical.com:test")
    >>> nopriv_browser.open("http://launchpad.dev/~cprov/+packages")
    >>> print_ppa_rows(nopriv_browser)
    iceweasel   PPA for Mark Shuttleworth - Ubuntu Warty 1.0
        2006-04-11 None - -
    iceweasel   PPA for No Privileges Person - Ubuntu Warty 1.0
        2006-04-11 None - -

    >>> admin_browser.open("http://launchpad.dev/~cprov/+packages")
    >>> print_ppa_rows(admin_browser)
    iceweasel   PPA for Mark Shuttleworth - Ubuntu Warty 1.0
        2006-04-11 None - -
    iceweasel   PPA for No Privileges Person - Ubuntu Warty 1.0
        2006-04-11 None - -

Let's make sabdfl's archive private and check the page again.

    >>> set_private("sabdfl")

    >>> user_browser.open("http://launchpad.dev/~cprov/+packages")
    >>> print_ppa_rows(user_browser)
    iceweasel   PPA for Mark Shuttleworth - Ubuntu Warty 1.0
        2006-04-11 None - -

    >>> anon_browser.open("http://launchpad.dev/~cprov/+packages")
    >>> print_ppa_rows(anon_browser)
    iceweasel   PPA for Mark Shuttleworth - Ubuntu Warty 1.0
        2006-04-11 None - -

Notice that this iceweasel package in sabdfl's PPA is still appearing
because it is also published in some non-private archives, which
override the private nature of sabdfl's archive.

The two other archives are cprov's PPA and the primary archive.  Let's
make cprov's archive private.

    >>> set_private("cprov")

It still shows up:

    >>> user_browser.open("http://launchpad.dev/~cprov/+packages")
    >>> print_ppa_rows(user_browser)
    iceweasel   PPA for Mark Shuttleworth - Ubuntu Warty 1.0
        2006-04-11 None - -

Now we'll unpublish it in the primary archive.

    >>> login("foo.bar@canonical.com")
    >>> from canonical.launchpad.interfaces import (
    ...     ArchivePurpose, IArchiveSet, IDistributionSet)
    >>> ubuntu = getUtility(IDistributionSet)['ubuntu']
    >>> primary = getUtility(IArchiveSet).getByDistroPurpose(ubuntu,
    ...     ArchivePurpose.PRIMARY)
    >>> [iceweasel_pub] = primary.getPublishedSources(
    ...     name='iceweasel', exact_match=True)
    >>> discard = iceweasel_pub.supersede()
    >>> flush_database_updates()
    >>> logout()

Now that the packages are not publicly published anywhere, +packages
will not show them.

    >>> user_browser.open("http://launchpad.dev/~cprov/+packages")
    >>> print_ppa_rows(user_browser)

    >>> anon_browser.open("http://launchpad.dev/~cprov/+packages")
    >>> print_ppa_rows(anon_browser)

However they will still be available to "no-priv" and administrators as
applicable:

    >>> nopriv_browser.open("http://launchpad.dev/~cprov/+packages")
    >>> print_ppa_rows(nopriv_browser)
    iceweasel   PPA for No Privileges Person - Ubuntu Warty 1.0
        2006-04-11 None - -

    >>> admin_browser.open("http://launchpad.dev/~cprov/+packages")
    >>> print_ppa_rows(admin_browser)
    iceweasel   PPA for Mark Shuttleworth - Ubuntu Warty 1.0
        2006-04-11 None - -
    iceweasel   PPA for No Privileges Person - Ubuntu Warty 1.0
        2006-04-11 None - -
