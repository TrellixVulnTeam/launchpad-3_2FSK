= DistroArchRelease Binary Package Pages =

In Launchpad, BinaryPackageReleases are directly attached to a
DistroArchRelease by a publication record (see
doc/publishedpackages.txt).

A DistroArchReleaseBinaryPackage, is a collection of
BinaryPackageReleases once published in a given DistroArchRelease.

Web UI exposes DistroArchReleaseBinaryPackage after obtain a valid
pair DistroArchRelease (tag) + BinaryName, and the url schema is:

$LP/distros/ubuntu/$DISTRORELEASE/$ARCHTAG/$BINARYNAME

A BinaryPackageRelease once published in a DistroArchRelease is
represented by a DistroArchReleaseBinaryPackageRelease and easily
reached by traversing a DistroArchReleaseBinaryPackage instance with a
valid version, like:

$LP/distros/ubuntu/$DISTRORELEASE/$ARCHTAG/$BINARYNAME/$VERSION

We'll just go straight to the page this time, as the path to click
here is a bit involved.

  >>> browser.open(
  ...     "http://localhost/distros/ubuntu/warty/i386/mozilla-firefox")

This page provides the publishing history of this BinaryPackage within
this architecture:

  >>> print find_tag_by_id(browser.contents, 'publishings')
  <div id="publishings">
  <b>
  warty
  i386
  Release</b>:
  Published
  version 0.9
  in component main
  and section base
  <BLANKLINE>
  on 2005-06-18 00:00:00 UTC
  <BLANKLINE>
  <BLANKLINE>
  <BLANKLINE>
  <BLANKLINE>
  <BLANKLINE>
  <hr />
  </div>


It also provides a link to the currently published version:

  >>> browser.getLink("0.9").click()
  >>> browser.url
  'http://localhost/distros/ubuntu/warty/i386/mozilla-firefox/0.9'

This page represents an IDistroArchReleaseBinaryPackageRelease and is
able to point the user to the IDistroReleaseSourcePackageRelease which
originated itself:

  >>> print find_tag_by_id(browser.contents, 'source')
  <div id="source">
  <ul>
  <li class="packages">
  <a href="http://localhost/distros/ubuntu/+source/mozilla-firefox/0.9">mozilla-firefox 0.9 (source) in Test Distro</a>
  </li>
  </ul>
  </div>

Also provide a section with the contained files, including respective
librarian URL and size:

  >>> print find_tag_by_id(browser.contents, 'files')
  <div id="files">
  <ul class="packages">
  <li>
  <a href="http://localhost:58000/40/mozilla-firefox_0.9_i386.deb">mozilla-firefox_0.9_i386.deb</a>
  (3 bytes)
  </li>
  </ul>
  </div>
