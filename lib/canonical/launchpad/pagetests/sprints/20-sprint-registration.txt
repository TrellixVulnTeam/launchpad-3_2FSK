It should be possible to register yourself to attend the sprint:

  >>> user_browser.open('http://launchpad.dev/sprints/ubz/')

  >>> user_browser.getLink('Register Yourself').click()
  >>> user_browser.url
  'http://launchpad.dev/sprints/ubz/+attend'

  >>> user_browser.title
  'Register your attendance at Ubuntu Below Zero'

Entering dates before the start of the meeting isn't allowed, so we get
a nice error message.

  >>> user_browser.getControl(
  ...     'Starting At').value = '2005-10-07 23:30:00+00:00'
  >>> user_browser.getControl(
  ...     'Finishing At').value = '2005-11-16 00:11:00+00:00'
  >>> user_browser.getControl('Continue').click()

  >>> message = "Choose an ending date after the start of the meeting."
  >>> message in user_browser.contents
  True

Dates after the ending of the meeting also don't work.

  >>> user_browser.getControl(
  ...     'Starting At').value = '2006-10-07 23:30:00+00:00'
  >>> user_browser.getControl(
  ...     'Finishing At').value = '2006-11-16 00:11:00+00:00'
  >>> user_browser.getControl('Continue').click()

  >>> message = "Choose an arrival time before the end of the meeting."
  >>> message in user_browser.contents
  True

Attend before even going doesn't work either.

  >>> user_browser.getControl(
  ...     'Starting At').value = '2006-11-07 23:30:00+00:00'
  >>> user_browser.getControl(
  ...     'Finishing At').value = '2006-10-16 00:11:00+00:00'
  >>> user_browser.getControl('Continue').click()

  >>> message = "Attendee should come before going!"
  >>> message in user_browser.contents
  True

Entering a starting date before the meeting's start date and a finishing
date after the meeting's end date works because we assume you wanted the
meeting's start and end date respectivelly.

  >>> user_browser.getControl(
  ...     'Starting At').value = '2005-11-07 23:30:00+00:00'
  >>> user_browser.getControl(
  ...     'Finishing At').value = '2006-10-16 00:11:00+00:00'
  >>> user_browser.getControl('Continue').click()

  >>> user_browser.url
  'http://launchpad.dev/sprints/ubz'

Now, Sample Person should be listed as an attendee.

  >>> from BeautifulSoup import BeautifulSoup
  >>> def print_attendees(sprint_page):
  ...     """Print the attendees listed in the attendees portlet."""
  ...     soup = BeautifulSoup(sprint_page)
  ...     attendees_portlet_headers = soup.fetchText(
  ...        'Attendees:')
  ...     assert len(attendees_portlet_headers) == 1
  ...     attendees_portlet = attendees_portlet_headers[0].parent.parent
  ...     for li in attendees_portlet.fetch('ul')[0].fetch('li'):
  ...         print li.a.string

  >>> print_attendees(user_browser.contents)
  Sample Person

Also, it should be possible to register someone else. Let's register Carlos.

  >>> user_browser.getLink('Register Someone').click()
  >>> user_browser.url
  'http://launchpad.dev/sprints/ubz/+register'

  >>> user_browser.getControl('Attendee').value = 'carlos@canonical.com'
  >>> user_browser.getControl(
  ...     'Starting At').value = '2006-01-10 23:30:00+00:00'
  >>> user_browser.getControl(
  ...     'Finishing At').value = '2006-02-12 00:11:00+00:00'
  >>> user_browser.getControl('Continue').click()

  >>> user_browser.url
  'http://launchpad.dev/sprints/ubz'

And lets ensure Carlos is now listed:

  >>> print_attendees(user_browser.contents)
  Carlos Perelló Marín
  Sample Person

