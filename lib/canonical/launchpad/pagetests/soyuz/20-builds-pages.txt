
Those pages are based in the BuildRecordView class and
template/builds-list.pt. Basically they have a buildstate selector
action via HTTP GET and present a batched list of build records
according the selected buildstate, by default All

  >>> print http(r"""
  ... GET /distros/ubuntu/+builds HTTP/1.1
  ... """)
  HTTP/1.1 200 Ok
  Content-Length: ...
  ...i386 build of pmount 0.1-1 in ubuntu hoary...
  ...i386 build of mozilla-firefox 0.9 in ubuntu warty...


  >>> print http(r"""
  ... GET /distros/ubuntu/+builds?build_state=built HTTP/1.1
  ... Content-Type: application/x-www-form-urlencoded
  ... """)
  HTTP/1.1 200 Ok
  Content-Length: ...
  ...i386 build of pmount 0.1-1 in ubuntu hoary...
  ...i386 build of mozilla-firefox 0.9 in ubuntu warty...


  >>> print http(r"""
  ... GET /distros/ubuntu/+builds?build_state=depwait HTTP/1.1
  ... Content-Type: application/x-www-form-urlencoded
  ... """)
  HTTP/1.1 200 Ok
  Content-Length: ...
  ...i386 build of libstdc++ b8p in ubuntu hoary...


  >>> print http(r"""
  ... GET /distros/ubuntu/+builds?build_state=failed HTTP/1.1
  ... Content-Type: application/x-www-form-urlencoded
  ... """)
  HTTP/1.1 200 Ok
  Content-Length: ...
  ...i386 build of pmount 0.1-1 in ubuntu warty...


Since the other pages tends to present a similar result and use, in
fact, the same mechanisms, we simply check if they work with no
tracebacks:

  >>> print http(r"""
  ... GET /distros/ubuntu/hoary/+builds HTTP/1.1
  ... """)
  HTTP/1.1 200 Ok
  Content-Length: ...
  ...


  >>> print http(r"""
  ... GET /distros/ubuntu/hoary/i386/+builds HTTP/1.1
  ... """)
  HTTP/1.1 200 Ok
  Content-Length: ...
  ...


  >>> print http(r"""
  ... GET /distros/ubuntu/hoary/+source/pmount/+builds HTTP/1.1
  ... """)
  HTTP/1.1 200 Ok
  Content-Length: ...
  ...

Check Build home pages and friends:

  >>> print http(r"""
  ... GET /+builds/+build/7 HTTP/1.1
  ... """)
  HTTP/1.1 200 Ok
  Content-Length: ...
  ...

