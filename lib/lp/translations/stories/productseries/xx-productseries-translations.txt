ProductSeries translations
==========================

This page shows a list of available languages for user to translate to in
a single product series, or instructions on how to set up a series for
translation.

    >>> login('foo.bar@canonical.com')
    >>> frobnicator = factory.makeProduct(name='frobnicator')
    >>> frobnicator.official_rosetta = True
    >>> frobnicator_trunk = frobnicator.getSeries('trunk')
    >>> frobnicator_trunk_url = canonical_url(
    ...     frobnicator_trunk, rootsite='translations')
    >>> logout()

Listing languages with translations is best checked with a helper method.

    >>> def print_language_stats(browser):
    ...     table = find_tag_by_id(browser.contents, 'languagestats')
    ...     if table is None:
    ...         print "No translations."
    ...         return
    ...     language_rows = find_tags_by_class(str(table), 'stats')
    ...     print "%-25s %13s %13s %13s" % (
    ...         "Language", "Untranslated", "Unreviewed", "Changed")
    ...     for row in language_rows:
    ...         cols = row.findAll('td')
    ...         language = extract_text(cols[0])
    ...         untranslated = extract_text(cols[2])
    ...         unreviewed = extract_text(cols[3])
    ...         changed = extract_text(cols[4])
    ...         print "%-25s %13d %13d %13d" % (
    ...             language,
    ...             int(untranslated), int(unreviewed), int(changed))

When there are no translatable templates, series is considered as not
being set up for translation.

    >>> anon_browser.open(frobnicator_trunk_url)
    >>> print anon_browser.title
    Translations : Series trunk : Frobnicator

    >>> main_content = find_main_content(anon_browser.contents)
    >>> print extract_text(main_content.findAll('h1')[0])
    Translation status by language

    >>> print_language_stats(anon_browser)
    No translations.

Explanation is shown to indicate that there are no translations for
this series.

    >>> print extract_text(main_content.findAll('p')[0])
    There are no translations for this release series.

Administrator will also see instructions on how to set up a project for
translation.

    >>> admin_browser.open(frobnicator_trunk_url)
    >>> main_content = find_main_content(admin_browser.contents)
    >>> paragraphs = main_content.findAll('p')
    >>> print extract_text(main_content.findAll('p')[1])
    To start translating your project...

With one translatable template (with fake stats for 10 messages), a listing
of existing translations is shown.

    >>> login('foo.bar@canonical.com')
    >>> pot = factory.makePOTemplate(
    ...     productseries=frobnicator_trunk, name="template1")
    >>> from zope.security.proxy import removeSecurityProxy
    >>> removeSecurityProxy(pot).messagecount = 10
    >>> pofile = factory.makePOFile('sr', potemplate=pot)
    >>> naked_pofile = removeSecurityProxy(pofile)
    >>> naked_pofile.rosettacount = 4
    >>> naked_pofile.updatescount = 2
    >>> naked_pofile.unreviewed_count = 5
    >>> logout()

    >>> browser.open(frobnicator_trunk_url)
    >>> print_language_stats(browser)
    Language                   Untranslated    Unreviewed       Changed
    Serbian                               6             5             2

Since there is only one template, language link directly to PO file
pages.

    >>> serbian_row = find_tags_by_class(browser.contents, "language-sr")[0]
    >>> serbian_link = serbian_row.find('a')
    >>> serbian_link['href']
    u'/frobnicator/trunk/+pots/template1/sr/+translate'

A product series can have more than one translatable template.

    >>> login('foo.bar@canonical.com')
    >>> pot = factory.makePOTemplate(
    ...     productseries=frobnicator_trunk, name="template2")
    >>> from zope.security.proxy import removeSecurityProxy
    >>> removeSecurityProxy(pot).messagecount = 5
    >>> logout()

Statistics add up for untranslated messages.

    >>> browser.open(frobnicator_trunk_url)
    >>> print_language_stats(browser)
    Language                   Untranslated    Unreviewed       Changed
    Serbian                              11             5             2

With more than one template, link points to a product series per-language
translations page.

    >>> serbian_row = find_tags_by_class(browser.contents, "language-sr")[0]
    >>> serbian_link = serbian_row.find('a')
    >>> serbian_link['href']
    u'/frobnicator/trunk/+lang/sr'

Upload page and translations use
--------------------------------

If the product a series belongs to is not configured to use Launchpad
for Translations, the distroseries translations upload page will say so.
Otherwise, people may keep trying to upload their files rather than
finding and throwing the switch.

    >>> owner_browser = setupBrowser('Basic test@canonical.com:test')

Evolution is set up to use Launchpad Translations, so the notice does
not appear there.

    >>> owner_browser.open(
    ...     'http://translations.launchpad.dev/'
    ...     'evolution/trunk/+translations-upload')
    >>> print find_tag_by_id(
    ...     owner_browser.contents, 'not-translated-in-launchpad')
    None

Nor does it appear on the template upload pages.

    >>> owner_browser.open(
    ...     'http://translations.launchpad.dev/'
    ...     'evolution/trunk/+pots/evolution-2.2/+upload')
    >>> print find_tag_by_id(
    ...     owner_browser.contents, 'not-translated-in-launchpad')
    None

Now this is changed: Evolution's owner configures it not to use
Launchpad Translations.

    # Use the raw DB object to bypass the security proxy.
    >>> from lp.registry.model.product import Product
    >>> Product.byName('bazaar').official_rosetta = False

When the owner now visits the upload page for trunk, there's a notice.

    >>> owner_browser.open(
    ...     'http://translations.launchpad.dev/'
    ...     'bazaar/trunk/+translations-upload')
    >>> print extract_text(
    ...     find_tag_by_id(
    ...         owner_browser.contents, 'not-translated-in-launchpad'))
    This project is not using Launchpad for translations.
    Configure Launchpad Translations
    Getting started with translating your project in Launchpad

The notice links to the page for configuring translations on the project.

    >>> owner_browser.getLink('Configure Launchpad Translations').click()
    >>> print owner_browser.url
    http://.../bazaar/+configure-translations

An administrator also sees the notice.

    >>> admin_browser.open(
    ...     'http://translations.launchpad.dev/'
    ...     'bazaar/trunk/+translations-upload')
    >>> print extract_text(
    ...     find_tag_by_id(
    ...         admin_browser.contents, 'not-translated-in-launchpad'))
    This project is not using Launchpad for translations.
    Configure Launchpad Translations
    Getting started with translating your project in Launchpad

A Translations admin who is neither a Launchpad admin nor the project
owner (and so won't be able to change the project's settings) sees the
notice but not the link to the project's settings.

    >>> from zope.component import getUtility
    >>> from canonical.launchpad.interfaces import (
    ...     ILaunchpadCelebrities, IPersonSet, ITeamMembershipSet,
    ...     TeamMembershipStatus)

    # Log in so as to be able to create objects
    >>> admin_email = 'foo.bar@canonical.com'
    >>> login(admin_email)
    >>> admin_user = getUtility(IPersonSet).getByEmail(admin_email)

    >>> jtv = factory.makePerson(
    ...     email='jtv-sample@canonical.com', password='test')
    >>> celebs = getUtility(ILaunchpadCelebrities)
    >>> membership = getUtility(ITeamMembershipSet).new(
    ...     jtv, celebs.rosetta_experts, TeamMembershipStatus.APPROVED,
    ...     admin_user)
    >>> from storm.store import Store
    >>> Store.of(membership).flush()
    >>> logout()

    >>> jtv_browser = setupBrowser('Basic jtv-sample@canonical.com:test')
    >>> jtv_browser.open(
    ...     'http://translations.launchpad.dev/'
    ...     'bazaar/trunk/+translations-upload')

    >>> print extract_text(
    ...     find_tag_by_id(
    ...         jtv_browser.contents, 'not-translated-in-launchpad'))
    This project is not using Launchpad for translations.
    Getting started with translating your project in Launchpad


Branch synchronization options
------------------------------

If automatic import and export are set, but import branch is unset, we only
indicate that export is happening.

    >>> login('foo.bar@canonical.com')
    >>> from lp.translations.interfaces.translations import (
    ...     TranslationsBranchImportMode)
    >>> branch = factory.makeBranch(product=frobnicator)
    >>> branch_name = branch.name
    >>> frobnicator_trunk.branch = None
    >>> frobnicator_trunk.translations_autoimport_mode = (
    ...     TranslationsBranchImportMode.IMPORT_TEMPLATES)
    >>> frobnicator_trunk.translations_branch = branch
    >>> logout()

    >>> browser.open(frobnicator_trunk_url)
    >>> print extract_text(browser.contents)
    Translations...
    Translations are exported daily to branch
    ...


Translation focus
-----------------

If translation focus is not set, there is no recommendation of what
release series should be translated.

    >>> login('admin@canonical.com')
    >>> distribution = factory.makeDistribution(name='earthian')
    >>> distroseries = factory.makeDistroRelease(
    ...     name='1.4', distribution=distribution)
    >>> logout()
    >>> print distribution.translation_focus
    None
    >>> admin_browser.open('http://translations.launchpad.dev/earthian/1.4')
    >>> print find_tag_by_id(admin_browser.contents, 'translation-focus')
    None

If focus is set, nice explanatory text is displayed.

    >>> login('admin@canonical.com')
    >>> focus_series = factory.makeDistroRelease(
    ...     name='1.6', distribution=distribution)
    >>> distribution.translation_focus = focus_series
    >>> logout()
    >>> admin_browser.open('http://translations.launchpad.dev/earthian/1.4')
    >>> print extract_text(
    ...     find_tag_by_id(admin_browser.contents, 'translation-focus'))
    Launchpad currently recommends translating 1.6.


Setting up translations for series
----------------------------------

When visiting product translations main page, project developers sees
status for current series configured for translations.
Beside the "All translatable series" section, they will find the
"Set up translations for a series" section with links to other series
that can be configured for translations.

When projects have only one active series, and it is already configured,
project admin does not see the link for configuring other branches.

    >>> admin_browser.open(
    ...     'http://translations.launchpad.dev/evolution')
    >>> untranslatable = find_tag_by_id(
    ...     admin_browser.contents, 'portlet-untranslatable-branches')
    >>> untranslatable is None
    True

A new series is added.

    >>> from lp.registry.model.product import Product
    >>> from lp.registry.interfaces.series import SeriesStatus
    >>> login('foo.bar@canonical.com')
    >>> evolution = Product.byName('evolution')
    >>> series = factory.makeProductSeries(
    ...     product=evolution, name='evo-new')
    >>> series.status = SeriesStatus.EXPERIMENTAL
    >>> logout()

Project administrator will see links to configuring translations for
the new series.

    >>> admin_browser.open(
    ...     'http://translations.launchpad.dev/evolution')
    >>> untranslatable = find_tag_by_id(
    ...     admin_browser.contents, 'portlet-untranslatable-branches')
    >>> print extract_text(untranslatable)
    Set up translations for a series...
    evo-new series — manual or automatic...

For each series there is a link for accesing the series translations
page togheter with link for uploading a template from that series
(manual) and setting automatic imports.

    >>> print admin_browser.getLink('Evolution evo-new series').url
    http://translations.launchpad.dev/evolution/evo-new/+translations

    >>> print admin_browser.getLink(
    ... 'manual', url='/evolution/evo-new/+translations-upload').url
    http://translations.launchpad.dev/evolution/evo-new/+translations-upload

    >>> print admin_browser.getLink(
    ... 'automatic', url='/evolution/evo-new/+translations-settings').url
    http://translations.launchpad.dev/evolution/evo-new/+translations-settings
