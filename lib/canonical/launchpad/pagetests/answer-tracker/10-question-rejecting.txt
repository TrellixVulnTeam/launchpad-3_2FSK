= Rejecting Questions =

Answer contacts and administrators can reject a question.
This should be done when the question isn't an actual pertinent question
for the product. For example, if the question is a duplicate or spam.

No Privileges Pesron isn't an answer contact or administrator, so he
doesn't have access to that feature.

    # XXX flacoste 2006/10/19 Bug 52077 user_browser should be no-priv
    # We can't use user_browser here because he is Firefox's registrant.
    >>> browser.addHeader('Authorization', 'Basic no-priv@canonical.com:test')
    >>> browser.open('http://launchpad.dev/firefox/+ticket/2')
    >>> browser.getLink('Reject Question')
    Traceback (most recent call last):
      ...
    LinkNotFoundError...

Even when trying to access the page directly, he will get an unauthorized
error.

    >>> browser.open(
    ...     'http://launchpad.dev/firefox/+ticket/2/+reject')
    Traceback (most recent call last):
      ...
    Unauthorized: ...

To reject the question, the user clicks on the 'Reject Question' link.

    >>> admin_browser.open('http://launchpad.dev/firefox/+ticket/2')
    >>> admin_browser.getLink('Reject Question').click()
    >>> admin_browser.getControl('Reject').click()

He needs to enter a message explaining the rejection:

    >>> from BeautifulSoup import BeautifulSoup
    >>> soup = BeautifulSoup(admin_browser.contents)
    >>> print soup.first('div', 'message').renderContents()
    You must provide an explanation message.

Entering an explanation message and clicking the 'Reject' button,
will reject the question.

    >>> admin_browser.getControl('Message').value = (
    ...     """Rejecting because it's a duplicate of bug #1.""")
    >>> admin_browser.getControl('Reject').click()

Once the question is rejected, a confirmation message is shown;

    >>> soup = BeautifulSoup(admin_browser.contents)
    >>> print soup.first('div', 'informational message').renderContents()
    You have rejected this question.

its status is changed to 'Invalid';

    >>> print soup.first('b', text='Status:').next.strip()
    Invalid

and the rejection message is added to the question board.

    >>> print soup.fetch('div', 'boardCommentBody')[-1].renderContents()
    <p>Rejecting because it's a duplicate of <a...>bug #1</a>.</p>

= Changing the Question Status =

In the previous example, that rejection was clearly a mistake: you
shouldn't reject a question because it is related to a bug, for these
case, you should link the question to the bug!

Users who have administrative privileges on the question (product or
distribution registrant and Launchpad admins) can correct errors like
these by using the 'Change Status' action. This page enables a user to
set the question status to an arbitrary value without workflow constraint.

That action isn't available to a non-privileged user:

    >>> browser.open('http://launchpad.dev/firefox/+ticket/2')
    >>> browser.getLink('Change Status')
    Traceback (most recent call last):
      ...
    LinkNotFoundError...

The change status form is available to an adminsitrator through the
'Change Status' link.

    >>> admin_browser.open('http://launchpad.dev/firefox/+ticket/2')
    >>> admin_browser.getLink('Change Status').click()

The form has a select widget displaying the current status.

    >>> admin_browser.getControl('Status', index=0).value
    ['Invalid']

The user needs to select a status and enter a message explaining the
status change:

    >>> admin_browser.getControl('Change Status').click()
    >>> soup = BeautifulSoup(admin_browser.contents)
    >>> for error in soup.fetch('div', 'message'):
    ...     print error.renderContents()
    You didn't change the status.
    You must provide an explanation message.

To correct the mistake of the previous example, the administrator would
select back the 'Open' status and provide an appropriate message:

    >>> admin_browser.getControl('Status', index=0).value = ['Open']
    >>> admin_browser.getControl('Message').value = (
    ...     "Setting status back to 'Open'. Questions similar to a bug "
    ...     "report should be linked to it, not rejected.")
    >>> admin_browser.getControl('Change Status').click()

Once the operation is completed, a confirmation message is displayed;

    >>> soup = BeautifulSoup(admin_browser.contents)
    >>> print soup.first('div', 'informational message').renderContents()
    Question status updated.

its status is updated;

    >>> print soup.first('b', text='Status:').next.strip()
    Open

and the explanation message is added to the question discussion:

    >>> print soup.fetch('div', 'boardCommentBody')[-1].renderContents()
    <p>Setting status back to 'Open'. Questions similar to a bug report
    should be linked to it, not rejected.</p>
