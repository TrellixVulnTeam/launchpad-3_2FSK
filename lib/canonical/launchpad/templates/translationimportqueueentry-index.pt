<html
  xmlns="http://www.w3.org/1999/xhtml"
  xmlns:tal="http://xml.zope.org/namespaces/tal"
  xmlns:metal="http://xml.zope.org/namespaces/metal"
  xmlns:i18n="http://xml.zope.org/namespaces/i18n"
  xml:lang="en"
  lang="en"
  dir="ltr"
  metal:use-macro="context/@@main_template/master"
  i18n:domain="launchpad"
>
  <body>
  <metal:script fill-slot="head_epilogue">
    <script type="text/javascript">
    YUI().use('node', function(Y) {
        var fields = {'POT':
                            ['field.name', 'field.translation_domain',
                             'field.languagepack'],
                      'PO':
                            ['field.potemplate', 'field.potemplate_name',
                             'field.language', 'field.variant'],
                       'UNSPEC': []
                     };
        var nodes = {};
        var last_file_type = 'UNSPEC';

        function getElemById(elem_id) {
            // XXX 'elem_id' is a Zope form field, and triggers
            // YUI bug #2423101.  We'll work around it.
            return Y.get(Y.DOM.byId(elem_id));
        }

        function getEnclosingTR(fieldname) {
            var field = getElemById(fieldname);
            if( field == null )
                return null;
            return field.ancestor('tr');
        }

        function buildNodeLists() {
            for (var ftype in fields) {
                var the_class = ftype + '_row';
                Y.Array.each(fields[ftype], function(field) {
                    var tr = getEnclosingTR(field);
                    if (tr != null) {
                        tr.addClass(the_class);
                        tr.setStyle('visibility', 'collapse');
                    }
                });
                nodes[ftype] = Y.all('.' + the_class);
            }
        }

        function updateCurrentFileType(file_type) {
            if (nodes[last_file_type] != null)
                nodes[last_file_type].setStyle('visibility', 'collapse');
            if (nodes[file_type] != null)
                nodes[file_type].setStyle('visibility', 'visible');
            last_file_type = file_type;
        }

        function handleFileTypeChange() {
            var file_type = this.get('value');
            if (file_type != last_file_type)
                updateCurrentFileType(file_type);
        }

        Y.on('domready', function(){
            buildNodeLists();
            var file_type_field = getElemById('field.file_type');
            updateCurrentFileType(file_type_field.get('value'));
            file_type_field.on('change', handleFileTypeChange);
        });
    });
    </script>
  </metal:script>

  <div metal:fill-slot="main">
    <div metal:use-macro="context/@@launchpad_form/form" />
  </div>

  </body>
</html>
