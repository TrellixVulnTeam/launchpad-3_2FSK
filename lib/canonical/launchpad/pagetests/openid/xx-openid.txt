OpenID
======

Launchpad is an OpenID server. If the URL is accessed by a web browser,
an informative message is displayed. We replicate the one from the
specification exactly, even though other OpenID servers take more
liberties.

>>> anon_browser.open('http://openid.launchpad.dev')
>>> print anon_browser.headers
Status: 200 Ok
...
Content-Type: text/html;charset=utf-8
...

>>> print anon_browser.contents
...
This is an OpenID server endpoint. For more information, see http://openid.net/
<BLANKLINE>


A Launchpad user's home page contains the required <link rel="openid.server" />
tag to allow OpenID consumers to determine the URL of the OpenID server to
be contacted.

XXX: This may be disabled before production rollout, until we are ready
to announce the OpenID service. Until then, consumers will need to use a
hardcoded URL or we set up some hidden URLs to be used
    -- StuartBishop 20070214

>>> anon_browser.open('http://launchpad.dev/~sabdfl')
>>> print '\n' + anon_browser.contents
<BLANKLINE>
...
<head>
...
<link rel="openid.server" href="http://openid.launchpad.dev/" />
</head>
...


After determining the URL of the OpenID server, the next thing a consumer
needs to do is associate with the server and get a shared secret via a
POST request. Note that we force Diffie-Hellman even if the consumer
requested plaintext.

>>> from urllib import urlencode
>>> anon_browser.open('http://openid.launchpad.dev/', data=urlencode({
...     'openid.mode': 'associate',
...     'openid.assoc_type': 'HMAC-SHA1',
...     }))
>>> print anon_browser.headers
Status: 200 Ok
...
Content-Type: text/plain
...
>>> print anon_browser.contents
assoc_handle:{HMAC-SHA1}{...}{...}
assoc_type:HMAC-SHA1
expires_in:1209600
session_type:DH-SHA1
dh_server_public:???
enc_mac_key: ???
mac_key: ???
<BLANKLINE>

