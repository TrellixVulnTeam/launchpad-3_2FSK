= Filing bugs on a Product from the front page =

On the Bugs front page there is a link to file a bug.

    >>> user_browser.open('http://bugs.launchpad.dev/')
    >>> user_browser.getLink('Report a bug').click()
    >>> user_browser.title
    'Report a bug'

Here we can select a product to file a bug on.

    >>> user_browser.getControl('Project') is not None
    True

Selecting a product that doesn't use Launchpad Bugs will produce a warning.

    >>> user_browser.getControl('Project').selected = True
    >>> user_browser.getControl(
    ...     name='field.bugtarget.product').value = 'thunderbird'
    >>> user_browser.getControl('Summary').value = 'Some harry'
    >>> user_browser.getControl('Continue').click()
    >>> for message in find_tags_by_class(user_browser.contents, 'warning'):
    ...     print extract_text(message)
    Mozilla Thunderbird does not use...
    ...
    You can refine and resubmit your bug report.

A link will be included to take the user back to the +filebug page:

    >>> user_browser.getLink('refine and resubmit').click()
    >>> user_browser.url
    'http://bugs.launchpad.dev/bugs/+filebug'

    >>> user_browser.getControl('Summary').value
    ''

We show a list of similar bugs later and it would be good to show at
least one completed bug. We need to prepare here:

    >>> user_browser.open(
    ...     'http://bugs.launchpad.dev/firefox/+bug/6/+editstatus')
    >>> user_browser.getControl('Status').value = ['Fix Released']
    >>> user_browser.getControl('Save Changes').click()

If we enter an non-existent product, we get an error message.

    >>> user_browser.open('http://bugs.launchpad.dev/bugs/+filebug/')
    >>> user_browser.getControl('Project').selected = True
    >>> user_browser.getControl(
    ...     name='field.bugtarget.product').value = 'non-existant'
    >>> user_browser.getControl('Summary').value = (
    ...     'SVG causes Firefox to crash')
    >>> user_browser.getControl('Continue').click()

    >>> for message in find_tags_by_class(user_browser.contents, 'message'):
    ...     print message.renderContents()
    There is 1 error.
    There is no project named 'non-existant' registered in Launchpad

Selecting a valid product will take us to the next filebug step.

    >>> user_browser.getControl(
    ...     name='field.bugtarget.product').value = 'firefox'
    >>> user_browser.getControl('Continue').click()

A list of similar bugs is shown. Duplicates are removed from the list
and replaced by the bug they duplicate. In the listing below bug 6
also matches, but is a duplicate of bug 5 so does not appear.

    >>> from canonical.launchpad.ftests.bug import print_bugs_list
    >>> print_bugs_list(user_browser.contents, "similar-bugs")
    #5 Firefox install instructions should be complete
    Open, last updated 2006-07-14
    #1 Firefox does not support SVG
    Open, last updated 2006-05-19

Entering a description and submitting the bug takes the user to the bug
page.

    >>> user_browser.getControl('Further information').value = 'Crash.'
    >>> user_browser.getControl('Submit Bug Report').click()
    >>> user_browser.url
    'http://bugs.launchpad.dev/firefox/+bug/...'
    >>> user_browser.title
    'Bug #... in Mozilla Firefox: ...SVG causes Firefox to crash...'


== Advanced filebug page ==

From the front page filebug page it's possible to go to the advanced
filebug page and file a bug directly.

    >>> user_browser.open('http://bugs.launchpad.dev/')
    >>> user_browser.getLink('Report a bug').click()
    >>> user_browser.getLink('complicated bug filing form').click()
    >>> user_browser.title
    'Report a bug'

    >>> user_browser.getControl('Project').selected = True
    >>> user_browser.getControl(
    ...     name='field.bugtarget.product').value = 'evolution'
    >>> user_browser.getControl('Summary').value = 'Evolution crashes'
    >>> user_browser.getControl('Further information').value = 'Crash.'
    >>> user_browser.getControl('Attachment').add_file(
    ...   example_file, 'text/plain', 'example-2.txt')
    >>> user_browser.getControl('Description').value = ("Another "
    ...     "attachment")

    >>> user_browser.getControl('Submit Bug Report').click()
    >>> user_browser.url
    'http://bugs.launchpad.dev/evolution/+bug/...'
    >>> user_browser.title
    'Bug #... in Evolution: ...Evolution crashes...'

    >>> attachments = find_portlet(user_browser.contents, 'Bug attachments')
    >>> for li_tag in attachments.findAll('li', 'download'):
    ...     print li_tag.a.renderContents()
    Another attachment

    >>> user_browser.getLink('Another attachment').url
    'http://localhost:58000/.../example-2.txt'

Once again, trying to file a bug against a product that doesn't use 
Launchpad Bugs results in an informational page being displayed.

    >>> user_browser.open('http://bugs.launchpad.dev/')
    >>> user_browser.getLink('Report a bug').click()
    >>> user_browser.getLink('complicated bug filing form').click()
    >>> user_browser.getControl('Project').selected = True
    >>> user_browser.getControl(
    ...     name='field.bugtarget.product').value = 'thunderbird'
    >>> user_browser.getControl('Summary').value = 'Thunderbird crashes'
    >>> user_browser.getControl('Further information').value = 'Crash.'
    >>> user_browser.getControl('Submit Bug Report').click()
    >>> for message in find_tags_by_class(user_browser.contents, 'warning'):
    ...     print extract_text(message)
    Mozilla Thunderbird does not use...
    ...
    You can refine and resubmit your bug report.

