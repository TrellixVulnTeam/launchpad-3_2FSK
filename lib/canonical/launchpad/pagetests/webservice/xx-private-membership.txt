= Private memberships =

Some teams may have private memberships, meaning that only the team
members (and LP admins) can see who are the other members of the team.

'myteam' is a team with private memberships, so someone who's not a
team member can't see, for instance, the membership of a person on that
team.

    # XXX: 2008-08-01, salgado: Notice how the total_size is incorrect here.
    # That ought to be fixed at some point.
    >>> member = user_webservice.get("/~member").jsonBody()
    >>> response = user_webservice.get(
    ...     member['memberships_details_collection_link'])
    >>> print sorted(response.jsonBody().items())
    [(u'entries', []),
     (u'resource_type_link',
      u'http://.../#team_membership-page-resource'),
     (u'start', 0),
     (u'total_size', 1)]

Salgado can, though, because he's a Launchpad admin.

    >>> response = webservice.get(
    ...     member['memberships_details_collection_link'])
    >>> print sorted(response.jsonBody().items())
    [(u'entries',
      [{u'status': u'Approved',...
        u'team_link': u'http://.../~myteam'...
     (u'resource_type_link',
      u'http://.../#team_membership-page-resource'),
     (u'start', 0),
     (u'total_size', 1)]

Similarly, when a public team is a sub-team of a private team, non-members
cannot see the private team in the public team's super_team's attribute.

    >>> admin_browser.open('http://launchpad.dev/~myteam/+addmember')
    >>> admin_browser.getControl('New member').value = 'guadamen'
    >>> admin_browser.getControl('Add Member').click()
    >>> admin_browser.open(
    ...     'http://launchpad.dev/~guadamen/+invitation/myteam')
    >>> admin_browser.getControl('Accept').click()

    >>> team = user_webservice.get('/~guadamen').jsonBody()
    >>> super_teams = user_webservice.get(
    ...     team['super_teams_collection_link']).jsonBody()
    >>> print super_teams['entries']
    []

But a user with the proper permissions can see the private super team.

    >>> team = webservice.get('/~guadamen').jsonBody()
    >>> super_teams = webservice.get(
    ...     team['super_teams_collection_link']).jsonBody()
    >>> print len(super_teams['entries'])
    1
    >>> print super_teams['entries'][0]['self_link']
    http://api.launchpad.dev/beta/~myteam
