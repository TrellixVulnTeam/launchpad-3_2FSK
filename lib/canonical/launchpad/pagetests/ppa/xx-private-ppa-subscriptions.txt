= Private PPA Subscriptions =

Note: This file contains all the pagetests for functionality that is not
part of the stories in xx-private-ppa-subscription-stories.txt.

== Managing Archive subscriptions ==

Public PPAs do not have an option for managing subscriptions:

    >>> cprov_browser = setupBrowser(
    ...     auth="Basic celso.providelo@canonical.com:cprov")
    >>> cprov_browser.open("http://launchpad.dev/~cprov/+archive/ppa")
    >>> cprov_browser.getLink("Manage subscriptions")
    Traceback (most recent call last):
    ...
    LinkNotFoundError

Similarly, trying to access the subscriptions page directly will simply
redirect back to the PPA page with a feedback message:

    >>> cprov_browser.open(
    ...     "http://launchpad.dev/~cprov/+archive/ppa/+subscriptions")

    >>> print cprov_browser.url
    http://launchpad.dev/~cprov/+archive/ppa

    >>> for msg in get_feedback_messages(cprov_browser.contents):
    ...     print msg
    Only private archives can have subscribers.

Setup both cprov's and sabdfl's PPAs as a private one:

    >>> admin_browser.open("http://launchpad.dev/~cprov/+archive/ppa")
    >>> admin_browser.getLink("Administer archive").click()
    >>> admin_browser.getControl(name="field.private").value = True
    >>> admin_browser.getControl(name="field.buildd_secret").value = "secret"
    >>> admin_browser.getControl("Save").click()
    >>> admin_browser.open("http://launchpad.dev/~sabdfl/+archive/ppa")
    >>> admin_browser.getLink("Administer archive").click()
    >>> admin_browser.getControl(name="field.private").value = True
    >>> admin_browser.getControl(name="field.buildd_secret").value = "secret"
    >>> admin_browser.getControl("Save").click()

Normally the subscriptions are accessed via the PPA page:

    >>> cprov_browser.open("http://launchpad.dev/~cprov/+archive/ppa")
    >>> cprov_browser.getLink("Manage subscriptions").click()
    >>> print cprov_browser.url
    http://launchpad.dev/~cprov/+archive/ppa/+subscriptions

Initially there are no subscriptions for a newly privatized PPA (although,
this may need to change, to add the owner/team). A heading is displayed
with a message:

    >>> main_content = find_main_content(cprov_browser.contents)
    >>> print extract_text(main_content.find('h1'))
    Manage subscriptions for Private PPA for Celso Providelo

    >>> print extract_text(find_tag_by_id(cprov_browser.contents,
    ...     'no-subscribers'))
    This PPA does not yet have any subscribers.

Create two new users that can be subscribed to archives:

    >>> login('foo.bar@canonical.com')
    >>> joesmith = factory.makePerson(name="joesmith", displayname="Joe Smith",
    ...     password="test", email="joe@example.com")
    >>> bradsmith = factory.makePerson(name="bradsmith", displayname="Brad Smith",
    ...     password="test", email="brad@example.com")
    >>> logout()

People can be subscribed by entering their details into the displayed
form:

    >>> cprov_browser.getControl(name='field.subscriber').value = 'joesmith'
    >>> cprov_browser.getControl(
    ...     name='field.description').value = "Joe is my friend"
    >>> cprov_browser.getControl(name="field.actions.add").click()
    >>> cprov_browser.getControl(name='field.subscriber').value = 'bradsmith'
    >>> cprov_browser.getControl(
    ...     name='field.date_expires').value = '2200-08-01'
    >>> cprov_browser.getControl(
    ...     name='field.description').value = "Brad can access for a while."
    >>> cprov_browser.getControl(name="field.actions.add").click()

Create a helper function to print subscriptions:

    >>> def print_subscriptions_for_archive(contents):
    ...     subscriptions = find_tags_by_class(contents,
    ...                                        'archive_subscriber_row')
    ...     for subscription in subscriptions:
    ...         print extract_text(subscription)

    >>> print_subscriptions_for_archive(cprov_browser.contents)
    Name                Expires     Comment
    Brad Smith          2200-08-01  Brad can access for a while.
    Joe Smith                       Joe is my friend


== Managing a persons' Archive subscriptions ==

The title of a persons archive subscriptions is displayed as the main
heading:

    >>> cprov_browser.open("/~cprov/+archivesubscriptions")
    >>> h1_heading = find_main_content(cprov_browser.contents).find('h1')
    >>> print extract_text(h1_heading)
    Archive subscriptions for Celso Providelo

A person who is not subscribed to any archives will see an appropriate
explanation if they try to view their archive subscriptions:

    >>> explanation = find_main_content(cprov_browser.contents).find('p')
    >>> print extract_text(explanation)
    You do not have any current subscriptions to private archives...

First, create a subscription for Joe Smith to sabdfl's archive also, so that
Joe has multiple subscriptions:

    >>> sabdfl_browser = setupBrowser(
    ...     auth="Basic mark@hbd.com:test")
    >>> sabdfl_browser.open("http://launchpad.dev/~sabdfl/+archive/ppa")
    >>> sabdfl_browser.getLink("Manage subscriptions").click()
    >>> sabdfl_browser.getControl(name='field.subscriber').value = 'joesmith'
    >>> sabdfl_browser.getControl(
    ...     name='field.description').value = "Joe is also my friend"
    >>> sabdfl_browser.getControl(name="field.actions.add").click()

Next create a helper function for printing the archive subscriptions
of a person:

    >>> def print_subscriptions_for_person(contents):
    ...     subscriptions = find_tags_by_class(contents,
    ...                                        'archive-subscription-row')
    ...     for subscription in subscriptions:
    ...         print extract_text(subscription)
    ...         button = subscription.find(
    ...             'input', value="Activate")
    ...         if button:
    ...             print "Activate"

A person who is subscribed to multiple archives will see all the archives
listed:

    >>> joe_browser = setupBrowser(auth="Basic joe@example.com:test")
    >>> joe_browser.open(
    ...     "http://launchpad.dev/~joesmith/+archivesubscriptions")
    >>> print_subscriptions_for_person(joe_browser.contents)
    Archive                            Subscription description
    Private PPA for Mark Shuttleworth  Joe is also my friend     Activate
    Private PPA for Celso Providelo    Joe is my friend          Activate


