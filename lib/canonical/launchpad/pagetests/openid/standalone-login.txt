= Logging into openid.launchpad.dev without an OpenID request =

We allow users accessing openid.launchpad.dev directly (instead of being sent
there from an OpenID RP) to login, so that they can see/change their details.

    >>> browser.open('http://openid.launchpad.dev')
    >>> print extract_text(find_tag_by_id(browser.contents, 'maincontent'))
    This is the Launchpad login service utilizing OpenID technology.
    ...
    If you want to change any of your account's details, you can do so by
    logging in using the form beside.
    ...

    >>> browser.getControl(name='field.email').value = 'mark@hbd.com'
    >>> browser.getControl(name='field.password').value = 'test'
    >>> browser.getControl('Continue').click()

Once successfully logged in, they will see the details of their account.

    >>> print browser.url
    http://openid.launchpad.dev/
    >>> print extract_text(find_tag_by_id(browser.contents, 'maincontent'))
    Logged in as Mark Shuttleworth
    ...


== Creating a new account ==

    >>> browser = setupBrowser()
    >>> browser.open('http://openid.launchpad.dev')
    >>> browser.getControl(name='field.email').value = 'new-user@example.com'
    >>> browser.getControl('No, I want to create an account now').click()
    >>> browser.getControl('Continue').click()
    >>> soup = find_main_content(browser.contents)
    >>> print soup.find('h1').renderContents()
    Registration mail sent

    >>> from canonical.launchpad.mail import stub
    >>> from canonical.launchpad.ftests.logintoken import (
    ...     get_token_url_from_email)
    >>> from_addr, to_addr, msg = stub.test_emails.pop()
    >>> token_url = get_token_url_from_email(msg)
    >>> browser.open(token_url)
    >>> print browser.url
    http://openid.launchpad.dev/token/.../+newaccount

    >>> browser.getControl('Name').value = 'New User'
    >>> browser.getControl('Create password').value = 'test'
    >>> browser.getControl(name='field.password_dupe').value = 'test'
    >>> browser.getControl('Continue').click()

    >>> print browser.url
    http://openid.launchpad.dev

    # Registering using this login form should not create a person, but
    # currently it does.
    >>> from zope.component import getUtility
    >>> from canonical.launchpad.interfaces.account import IAccountSet
    >>> from canonical.launchpad.interfaces.person import IPerson
    >>> login(ANONYMOUS)
    >>> print IPerson(getUtility(IAccountSet).getByEmail(
    ...     'new-user@example.com'), None)
    None
    >>> logout()


== Resetting the password ==

    >>> browser = setupBrowser()
    >>> browser.open('http://openid.launchpad.dev')
    >>> browser.getControl(name='field.email').value = 'new-user@example.com'
    >>> browser.getControl("I've forgotten my password").click()
    >>> browser.getControl('Continue').click()
    >>> soup = find_main_content(browser.contents)
    >>> print soup.find('h1').renderContents()
    Forgotten your password?

    >>> from_addr, to_addr, msg = stub.test_emails.pop()
    >>> token_url = get_token_url_from_email(msg)
    >>> browser.open(token_url)
    >>> print browser.url
    http://openid.launchpad.dev/token/.../+resetpassword

    >>> browser.getControl('Email').value = 'new-user@example.com'
    >>> browser.getControl('Password').value = 'new password'
    >>> browser.getControl(name='field.password_dupe').value = 'new password'
    >>> browser.getControl('Continue').click()

    >>> print browser.url
    http://openid.launchpad.dev


=== Logging in with the new password ===

    >>> browser = setupBrowser()
    >>> browser.open('http://openid.launchpad.dev')
    >>> browser.getControl(name='field.email').value = 'new-user@example.com'
    >>> browser.getControl(name='field.password').value = 'new password'
    >>> browser.getControl('Continue').click()
    >>> print extract_text(find_tag_by_id(browser.contents, 'maincontent'))
    Logged in as New User
    ...
