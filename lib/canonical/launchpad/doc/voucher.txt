= Subscription Vouchers =

This test covers the implementation of subscription voucher queries
and redemption between Launchpad and the Salesforce proxy.

For testing purposes we use a custom XML-RPC transport which
implements a mock proxy in the transport and avoids network traffic.

    >>> from canonical.launchpad.ftests.salesforce import (
    ...     SalesforceXMLRPCTestTransport)
    >>> import xmlrpclib
    >>> test_transport = SalesforceXMLRPCTestTransport()
    >>> server = xmlrpclib.ServerProxy("http://example.com",
    ...                                transport=test_transport)

Let's create a convenience function for displaying our voucher lists.

    >>> def print_vouchers(vouchers):
    ...     for voucher in vouchers:
    ...         print voucher['voucher'], voucher['status']

We can now see all of the sample data for the vouchers.

    >>> for voucher in test_transport.vouchers:
    ...     print voucher
    LPCS12-f78df324-0cc2-11dd-8b6b-000000000001 UNREDEEMED
    LPCS12-f78df324-0cc2-11dd-8b6b-000000000002 UNREDEEMED
    LPCS12-f78df324-0cc2-11dd-8b6b-000000000003 UNREDEEMED
    LPCS12-f78df324-0cc2-11dd-8b6b-000000000004 UNREDEEMED
    LPCS12-f78df324-0cc2-11dd-8b6b-000000000005 UNREDEEMED

We can retrieve all unredeemed vouchers for a person.

    >>> from canonical.launchpad.interfaces import (
    ...     IPersonSet, IProductSet)
    >>> mark = getUtility(IPersonSet).getByName('sabdfl')

    >>> vouchers = server.getUnredeemedVouchers(mark.openid_identifier)
    >>> print_vouchers(vouchers)
    LPCS12-f78df324-0cc2-11dd-8b6b-000000000001 UNREDEEMED
    LPCS12-f78df324-0cc2-11dd-8b6b-000000000002 UNREDEEMED
    LPCS12-f78df324-0cc2-11dd-8b6b-000000000003 UNREDEEMED

A single voucher can be redeemed, but must be associated with a project.

    >>> firefox = getUtility(IProductSet).getByName('firefox')
    >>> voucher = vouchers[0]['voucher']
    >>> result = server.redeemVoucher(voucher, mark.openid_identifier,
    ...                               firefox.id, firefox.displayname)
    >>> print result
    [True, 12]
    >>> vouchers = server.getUnredeemedVouchers(mark.openid_identifier)
    >>> print_vouchers(vouchers)
    LPCS12-f78df324-0cc2-11dd-8b6b-000000000002 UNREDEEMED
    LPCS12-f78df324-0cc2-11dd-8b6b-000000000003 UNREDEEMED

Let's test the Salesforce wrapper directly.

First create a new voucher processor using our test transport.

    >>> from canonical.launchpad.components.salesforce import (
    ...     SalesforceVoucherProxy, Voucher)
    >>> test_transport = SalesforceXMLRPCTestTransport()
    >>> sfv = SalesforceVoucherProxy(baseurl="http://example.com",
    ...                              xmlrpc_transport=test_transport)
    >>> sfv.xmlrpc_transport == test_transport
    True

Now we can exercise the interface.

    >>> print sfv.getServerStatus()
    Server is running normally

    >>> vouchers = sfv.getUnredeemedVouchers(mark)
    >>> for voucher in vouchers:
    ...     print voucher
    LPCS12-f78df324-0cc2-11dd-8b6b-000000000001 UNREDEEMED 12 unassigned
    LPCS12-f78df324-0cc2-11dd-8b6b-000000000002 UNREDEEMED 12 unassigned
    LPCS12-f78df324-0cc2-11dd-8b6b-000000000003 UNREDEEMED 12 unassigned

Redeem the first voucher for firefox.

    >>> voucher_id = vouchers[0].id
    >>> result = sfv.redeemVoucher(voucher_id, mark, firefox)
    >>> print result
    [True, 12]
    >>> vouchers = sfv.getUnredeemedVouchers(mark)
    >>> for voucher in vouchers:
    ...     print voucher
    LPCS12-f78df324-0cc2-11dd-8b6b-000000000002 UNREDEEMED 12 unassigned
    LPCS12-f78df324-0cc2-11dd-8b6b-000000000003 UNREDEEMED 12 unassigned

If we get all of the vouchers the redeemed one is shown.

    >>> vouchers = sfv.getAllVouchers(mark)
    >>> for voucher in vouchers:
    ...     print voucher
    LPCS12-f78df324-0cc2-11dd-8b6b-000000000001 REDEEMED 12 Mozilla Firefox
    LPCS12-f78df324-0cc2-11dd-8b6b-000000000002 UNREDEEMED 12 unassigned
    LPCS12-f78df324-0cc2-11dd-8b6b-000000000003 UNREDEEMED 12 unassigned

Attempting to redeem an already redeemed voucher is an error.

    >>> result = sfv.redeemVoucher(voucher_id, mark, firefox)
    >>> print result
    [False, 0]

Attempting to redeem an bogus voucher is an error.

    >>> voucher_id = "hownowbrowncow"
    >>> result = sfv.redeemVoucher(voucher_id, mark, firefox)
    >>> print result
    [False, 0]

If a project's name changes we can communicate that to Salesforce.

    >>> from zope.security.proxy import removeSecurityProxy
    >>> naked_firefox = removeSecurityProxy(firefox)
    >>> print naked_firefox.displayname
    Mozilla Firefox
    >>> naked_firefox.displayname = 'Super Mozilla Firefox'
    >>> print naked_firefox.displayname
    Super Mozilla Firefox
    >>> result = sfv.updateProjectName(naked_firefox)
    >>> print result
    1
