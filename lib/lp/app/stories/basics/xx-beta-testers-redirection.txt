= Redirection of Beta Testers =

Launchpad occasionally runs private beta tests of large
changes. During these times, members of the launchpad-beta-testers
team have access to a separate web app running off the same database.

To encourage members of this team to use the beta UI, we automatically
redirect them to the beta site when they use the main site.

For these tests, we will use the user 'launchpad-beta-owner', who is
on the beta testers team.  First, create a browser object for this
person:

    >>> beta_browser = setupBrowser(auth='Basic beta-admin@launchpad.net:test')

# XXX jamesh 2007-01-31 bug=98482:
# zope.testbrowser does not handle redirects to remote sites, so we
# disable the redirection handling at the mechanize layer.  We then need
# to check the HTTPError directly.

    >>> user_browser.mech_browser.set_handle_redirect(False)
    >>> beta_browser.mech_browser.set_handle_redirect(False)
    >>> from urllib2 import HTTPError
    >>> def check(function, *args, **kwargs):
    ...     try:
    ...         function(*args, **kwargs)
    ...     except HTTPError, exc:
    ...         print str(exc)
    ...         location = exc.hdrs.getheader('Location')
    ...         if location is not None:
    ...             print 'Location:', location

The redirection is controlled by the beta_testers_redirection_host
config item.  If it is set to None, no redirection occurs:

    >>> from canonical.config import config

    >>> print config.launchpad.beta_testers_redirection_host
    None
    >>> check(beta_browser.open, 'http://launchpad.dev/ubuntu')
    >>> print beta_browser.url
    http://launchpad.dev/ubuntu

Normally, we run the development system (launchpad.dev) with no beta
redirection host. For the purposes of this test, however, we will set it to
beta.launchpad.dev:

    >>> beta_data = """
    ...     [launchpad]
    ...     beta_testers_redirection_host = beta.launchpad.dev
    ...     """
    >>> config.push('beta_data', beta_data)

If a normal user goes to a page on the site, it will load as normal:

    >>> check(user_browser.open, 'http://launchpad.dev/ubuntu')
    >>> print user_browser.url
    http://launchpad.dev/ubuntu

In contrast, members of the beta testers get redirected:

    >>> check(beta_browser.open, 'http://launchpad.dev/ubuntu')
    HTTP Error 303: See Other
    Location: http://beta.launchpad.dev/ubuntu

The redirection also works for URLs below the root, and with query
parameters:

    >>> check(beta_browser.open,
    ...     'http://launchpad.dev/ubuntu/+search?text=foo')
    HTTP Error 303: See Other
    Location: http://beta.launchpad.dev/ubuntu/+search?text=foo

However, HTTP POST requests to the normal site are not redirected:

    >>> from urllib import urlencode
    >>> check(beta_browser.open,
    ...       'http://launchpad.dev/ubuntu/+search',
    ...       data=urlencode({'text': 'foo'}))
    >>> print beta_browser.url
    http://launchpad.dev/ubuntu/+search

The redirection works for other Launchpad subdomains:

    >>> check(beta_browser.open,
    ...     'http://bugs.launchpad.dev/launchpad/+bugs?orderby=-datecreated')
    HTTP Error 303: See Other
    Location: http://bugs.beta.launchpad.dev/launchpad/+bugs?orderby=-datecreated

    >>> check(beta_browser.open, 'http://answers.launchpad.dev/~name12')
    HTTP Error 303: See Other
    Location: http://answers.beta.launchpad.dev/~name12

However, domains not under the main site will not be redirected:

    # Go behing the curtains and change the hostname of our mainsite so that
    # we can test this.
    >>> config.push('mainsite_data', """
    ...     [vhost.mainsite]
    ...     hostname: foo.dev
    ...     """)

    >>> check(beta_browser.open, 'http://launchpad.dev/~name12')
    >>> print beta_browser.url
    http://launchpad.dev/~name12

    # Now retore our mainsite's hostname.
    >>> dummy = config.pop('mainsite_data')

The front page of Launchpad does not redirect.

    >>> check(beta_browser.open, 'http://launchpad.dev/')
    >>> print beta_browser.url
    http://launchpad.dev/

On the beta site, a client side JS is available on every page (except
the home page) in the footer that sets a cookie to inhibit
the redirection.

    # Configure the site as the beta site.
    >>> config.push('fake_beta_site', """
    ...     [launchpad]
    ...     beta_testers_redirection_host = none
    ...     is_edge: True
    ...     site_message: This is the beta site
    ...     """)

    >>> check(beta_browser.open, 'http://launchpad.dev/ubuntu')
    >>> print beta_browser.url
    http://launchpad.dev/ubuntu
    >>> print find_tags_by_class(beta_browser.contents, 'sitemessage')[0]
    <div class="sitemessage">
        This is the beta site
        <a href="#" class="js-action" onclick="setBetaRedirect(false)">
          Disable edge redirect.
        </a>
    </div>

    >>> dummy = config.pop('fake_beta_site')

    # Workaround bug in mechanize where you cannot use the Cookie
    # header with the CookieJar
    >>> from mechanize._clientcookie import Cookie
    >>> cookiejar = (
    ...     beta_browser.mech_browser._ua_handlers['_cookies'].cookiejar)
    >>> cookiejar.set_cookie(
    ...     Cookie(
    ...         version=0, name='inhibit_beta_redirect', value='1', port=None,
    ...         port_specified=False, domain='.launchpad.dev',
    ...         domain_specified=True, domain_initial_dot=True, path='/',
    ...         path_specified=True, secure=False, expires=None,
    ...         discard=None, comment=None, comment_url=None, rest={}))

Now when they go to a page on the site, it loads as normal:

    >>> check(beta_browser.open, 'http://launchpad.dev/ubuntu')
    >>> print beta_browser.url
    http://launchpad.dev/ubuntu


== Shortcut redirection for bugs ==

A bug URL, such as http://launchpad.dev/bugs/12, is commonly hit
directly and then, eventually, redirected to a bug task such as
https://bugs.launchpad.dev/jokosher/+bug/12.  These bug URLs can be
redirected with fewer steps than the four it would normally take.

The normal user gets redirected to the bug task page.

    >>> check(user_browser.open, 'http://launchpad.dev/bugs/12')
    HTTP Error 303: See Other
    Location: http://bugs.launchpad.dev/jokosher/+bug/12

An anonymous user gets redirected to the bug task page.

    >>> anon_browser.mech_browser.set_handle_redirect(False)
    >>> check(anon_browser.open, 'http://launchpad.dev/bugs/12')
    HTTP Error 303: See Other
    Location: http://bugs.launchpad.dev/jokosher/+bug/12

The beta user gets redirected to the bug task page, but on the beta
host.

    >>> # Create a new beta browser that doesn't have redirection
    >>> # override cookies.
    >>> beta_browser = setupBrowser(auth='Basic beta-admin@launchpad.net:test')
    >>> beta_browser.mech_browser.set_handle_redirect(False)
    >>> check(beta_browser.open, 'http://launchpad.dev/bugs/12')
    HTTP Error 303: See Other
    Location: http://bugs.beta.launchpad.dev/jokosher/+bug/12

Restore the config to state it was in at the start of the test.

    >>> config_data = config.pop('beta_data')


== Redirection notice in OOPS timeouts ==

The beta site has timeout values lower than lpnet, so beta testers are more
likely to experience timeouts. When a page times out for beta testers the
notification to disable beta redirection is displayed.

Add Foo Bar to the beta team.

    >>> from zope.component import getUtility
    >>> from canonical.launchpad.interfaces import (
    ...     ILaunchpadCelebrities, IPersonSet)
    >>> from canonical.launchpad.ftests import login, logout
    >>> login('foo.bar@canonical.com')
    >>> foo_bar = getUtility(IPersonSet).getByName('name16')
    >>> launchpad_beta_testers = getUtility(
    ...     ILaunchpadCelebrities).launchpad_beta_testers
    >>> ignored = launchpad_beta_testers.addMember(foo_bar, reviewer=foo_bar)
    >>> foo_bar.inTeam(launchpad_beta_testers)
    True

    >>> logout()

Decrease the timeout values for launchpad.dev

    >>> beta_data = """
    ...     [launchpad]
    ...     beta_testers_redirection_host = edge.launchpad.dev
    ...     [database]
    ...     db_statement_timeout: 1
    ...     soft_request_timeout: 2
    ...     """
    >>> config.push('beta_data', beta_data)

Check that the notification is in the timeout page

    >>> print http(r"""
    ... GET /+soft-timeout HTTP/1.1
    ... Authorization: Basic Zm9vLmJhckBjYW5vbmljYWwuY29tOnRlc3Q=
    ... """)
    HTTP/1.1 503 Service Unavailable
    ...
    Retry-After: 900
    ...
    <title>Error: Timeout</title>
    ...
    <h1 class="exception">Timeout error</h1>
    <div id="redirect_notice" style="display:none" class="informational message">
    <p>Our edge server has a lower timeout threshold than launchpad.net,
    so we can catch those before they hit a wider audience.
    As a member of the Launchpad Beta Testers team, you're more
    likely to experience them. If this is blocking your work, you
    can disable redirection.</p>
    <p><button onclick="setBetaRedirect(false)">Disable redirection
    for 2 hours</button></p>
    </div>
    ...

Restore the config to state it was in at the start of the test.

    >>> config_data = config.pop('beta_data')
