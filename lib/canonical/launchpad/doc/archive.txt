= Personal Package Archives =

An Archive models a Debian Archive ...

  >>> from zope.interface.verify import verifyObject
  >>> from canonical.launchpad.interfaces import (
  ...     IPerson, IPersonSet, IArchiveSet, IArchive,
  ...     IDistributionSet)

Let create a new IArchiveSet using a utility:

  >>> archive_set = getUtility(IArchiveSet)

A new Archive can be created by passing a name and an owner

  >>> cprov = getUtility(IPersonSet).getByName('cprov')
  >>> sandbox_archive = archive_set.new(
  ...     name='sandbox', owner=cprov)

  >>> verifyObject(IArchive, sandbox_archive)
  True

  >>> verifyObject(IPerson, sandbox_archive.owner)
  True

An Archive can be retrieved via IPerson.archives MultipleJoin:

  >>> cprov.archives.count()
  2

  >>> sandbox_archive in cprov.archives
  True

IArchive has a method to provide a modified Publisher Configuration (see
lib/archivepublisher/config.py), which provides the right paths for its
publication according to the given distribution:

  >>> ubuntutest = getUtility(IDistributionSet)['ubuntutest']

  >>> proxied_pubconfig = sandbox_archive.getPubConfig(ubuntutest)

XXX cprov 20061127: Publisher Config miss interface

  >>> from zope.security.proxy import removeSecurityProxy
  >>> pubconfig = removeSecurityProxy(proxied_pubconfig)

The base Archive publication location is set in the current Launchpad
configuration file:

  >>> from canonical.config import config
  >>> pubconfig.distroroot == config.personalpackagearchive.root
  True

Then, the archive topology will follow:

<PPA>/<PERSONNAME>/<ARCHIVETAG>/<DISTRIBUTION>

  >>> pubconfig.archiveroot
  u'/var/tmp/ppa/cprov/sandbox/ubuntutest'

  >>> pubconfig.poolroot
  u'/var/tmp/ppa/cprov/sandbox/ubuntutest/pool'

  >>> pubconfig.distsroot
  u'/var/tmp/ppa/cprov/sandbox/ubuntutest/dists'

Path not used in *personal* archives publication workflow are set to
None, so they won't get created:

  >>> pubconfig.overrideroot is None
  True
  >>> pubconfig.cacheroot is None
  True
  >>> pubconfig.miscroot is None
  True

Usual methods from Publisher Configuration are preserved:

  >>> pubconfig.distroReleaseNames()
  ['breezy-autotest', 'hoary-test']

  >>> pubconfig.archTagsForRelease('breezy-autotest')
  []

  >>> pubconfig.componentsForRelease('breezy-autotest')
  ['main', 'restricted', 'universe', 'multiverse']


The utility IArchiveSet also provides iteration over present
*personal* archive:


  >>> [(archive.owner.name, archive.name) for archive in archive_set]
  [(u'cprov', u'ubuntu-fun'), (u'cprov', u'sandbox')]
