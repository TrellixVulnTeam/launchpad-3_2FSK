= Downloadable Files =

Launchpad can show you a product's downloadable files, by series, with links to each.

Look at a project with no releases and ensure the download page does
not show any files.

    >>> anon_browser.open('http://launchpad.dev/aptoncd/')
    >>> anon_browser.getLink('Download project files').click()
    >>> anon_browser.url
    'http://launchpad.dev/aptoncd/+download'
    >>> anon_browser.title
    'APTonCD project files'
    >>> content = find_main_content(anon_browser.contents)
    >>> form = content('form')[0]
    >>> para = form('p')[0]
    >>> print para.string.strip()
    No download files exist for this project.

Look at a project with a release but no download files.  Ensure the download
page does not show any files.

    >>> anon_browser.open('http://launchpad.dev/alsa-utils/')
    >>> anon_browser.getLink('Download project files').click()
    >>> anon_browser.url
    'http://launchpad.dev/alsa-utils/+download'
    >>> content = find_main_content(anon_browser.contents)
    >>> form = content('form')[0]
    >>> para = form('p')[0]
    >>> print para.string.strip()
    No download files exist for this project.

== Deletion is only for the privileged ==

As an anonymous user the files for download should be shown, but not
the delete options.

    >>> anon_browser.open('http://launchpad.dev/firefox/+download')
    >>> anon_browser.url
    'http://launchpad.dev/firefox/+download'
    >>> content = find_main_content(anon_browser.contents)
    >>> row = content.find('table').find('tr')
    >>> print extract_text(row)
    Download
    Release
    Description

Again, for an authenticated user who is not the firefox product owner.

    >>> non_owner = setupBrowser(
    ...     auth='Basic celso.providelo@canonical.com:cprov')
    >>> non_owner.open('http://launchpad.dev/firefox/+download')
    >>> non_owner.url
    'http://launchpad.dev/firefox/+download'
    >>> content = find_main_content(non_owner.contents)
    >>> row = content.find('table').find('tr')
    >>> print extract_text(row)
    Download
    Release
    Description

Now, login as a firefox admin and see the delete fields.

    >>> firefox_owner = setupBrowser(
    ...     auth='Basic mark@hbd.com:test')
    >>> firefox_owner.open('http://launchpad.dev/firefox/+download')
    >>> firefox_owner.url
    'http://launchpad.dev/firefox/+download'
    >>> content = find_main_content(firefox_owner.contents)
    >>> row = content.find('table').find('tr')
    >>> print extract_text(row)
    Delete
    Download
    Release
    Description

A project owner should not see the delete button when there are no files.

    >>> alsa_owner = setupBrowser(
    ...     auth='Basic foo.bar@canonical.com:test')
    >>> alsa_owner.open('http://launchpad.dev/alsa-utils/')
    >>> alsa_owner.getLink('Download project files').click()
    >>> alsa_owner.title
    'alsa-utils project files'
    >>> content = find_main_content(alsa_owner.contents)
    >>> form = content('form')[0]
    >>> para = form('p')
    >>> print para[0].string.strip()
    No download files exist for this project.
    >>> h2 = form('h2')[0]
    >>> print h2.string.strip()
    Release series &#8220;trunk&#8221;
    >>> print para[1].contents[0].string.strip()
    Add download file for release:...
    >>> alsa_owner.getControl('Delete Files')
    Traceback (most recent call last):
    ...
    LookupError: label 'Delete Files'


== Adding new files ==

In order to add new files, the admin can click on the link release
link provided under the series name, or navigate to the product
release listing by selecting the individual release under the series
name on the product index page.  In the example below the firefox has
a 1.0 series with a 1.0.0 release.

First, let's use the links on the download files listing page.

Ensure a non-owner doesn't see the 'Add download file' link.

    >>> non_owner.getLink('1.0.0')
    Traceback (most recent call last):
    ...
    LinkNotFoundError

To add a download file the release version link is used.

    >>> firefox_owner.getLink('1.0.0').click()
    >>> firefox_owner.title
    'Add a file to Mozilla Firefox 1.0.0'

Ensure a non-owner doesn't see the 'Add download file' link after
navigating to the product release page.

    >>> non_owner.open('http://launchpad.dev/firefox/1.0/1.0.0/')
    >>> non_owner.getLink('Add download file')
    Traceback (most recent call last):
    ...
    LinkNotFoundError

To add a download file the +adddownloadfile page is accessed.

    >>> firefox_owner.open('http://launchpad.dev/firefox/1.0/1.0.0/')
    >>> firefox_owner.getLink('Add download file').click()

Create a file to upload.

    >>> from cStringIO import StringIO
    >>> foo_file = StringIO('Foo installer package...')
    >>> firefox_owner.getControl(name='field.filecontent').add_file(foo_file,
    ...    'text/plain', 'foo.txt')
    >>> firefox_owner.getControl('Description').value="Foo installer"
    >>> firefox_owner.getControl(name="field.contenttype").displayValue = \
    ...    ["Installer file"]
    >>> firefox_owner.getControl("Add file").click()
    >>> get_feedback_messages(firefox_owner.contents)
    [u"Your file 'foo.txt' has been uploaded."]

Let's go back to the page where the files are listed and ensure it
shows up now.  Just to be sure, do it as the non-owner.

    >>> non_owner.open('http://launchpad.dev/firefox/+download')
    >>> non_owner.url
    'http://launchpad.dev/firefox/+download'
    >>> content = find_main_content(non_owner.contents)
    >>> print content
    <...
    ...foo.txt...Foo installer...

Try to add a file with no description.

    >>> firefox_owner.open('http://launchpad.dev/firefox/1.0/1.0.0/')
    >>> firefox_owner.getLink('Add download file').click()

Create a file to upload.

    >>> foo_file = StringIO('Foo installer package...')
    >>> firefox_owner.getControl(name='field.filecontent').add_file(foo_file,
    ...    'text/plain', 'foo.txt')
    >>> firefox_owner.getControl(name="field.contenttype").displayValue = \
    ...    ["Installer file"]
    >>> firefox_owner.getControl("Add file").click()
    >>> for msg in get_feedback_messages(firefox_owner.contents):
    ...     print msg
    There is 1 error.
    Required input is missing.

Try to add a file that is empty.

    >>> firefox_owner.open('http://launchpad.dev/firefox/1.0/1.0.0/')
    >>> firefox_owner.getLink('Add download file').click()

Create a file to upload.

    >>> foo_file = StringIO('')
    >>> firefox_owner.getControl(name='field.filecontent').add_file(foo_file,
    ...    'text/plain', 'foo.txt')
    >>> firefox_owner.getControl('Description').value="Foo installer"
    >>> firefox_owner.getControl(name="field.contenttype").displayValue = \
    ...    ["Installer file"]
    >>> firefox_owner.getControl("Add file").click()
    >>> for msg in get_feedback_messages(firefox_owner.contents):
    ...     print msg
    There is 1 error.
    Cannot upload empty file.

Now let's successfully upload two more files.

    >>> firefox_owner.open('http://launchpad.dev/firefox/1.0/1.0.0/')
    >>> firefox_owner.getLink('Add download file').click()
    >>> foo_file = StringIO('Foo2 installer package...')
    >>> firefox_owner.getControl(name='field.filecontent').add_file(foo_file,
    ...    'text/plain', 'foo2.txt')
    >>> firefox_owner.getControl('Description').value="Foo2 installer"
    >>> firefox_owner.getControl(name="field.contenttype").displayValue = \
    ...    ["Installer file"]
    >>> firefox_owner.getControl("Add file").click()
    >>> get_feedback_messages(firefox_owner.contents)
    [u"Your file 'foo2.txt' has been uploaded."]

    >>> firefox_owner.open('http://launchpad.dev/firefox/1.0/1.0.0/')
    >>> firefox_owner.getLink('Add download file').click()
    >>> foo_file = StringIO('Foo installer package...')
    >>> firefox_owner.getControl(name='field.filecontent').add_file(foo_file,
    ...    'text/plain', 'foo3.txt')
    >>> firefox_owner.getControl('Description').value="Foo3 installer"
    >>> firefox_owner.getControl(name="field.contenttype").displayValue = \
    ...    ["Installer file"]
    >>> firefox_owner.getControl("Add file").click()
    >>> get_feedback_messages(firefox_owner.contents)
    [u"Your file 'foo3.txt' has been uploaded."]

Add a file to a different release on the same project.

    >>> firefox_owner.open('http://launchpad.dev/firefox/trunk/0.9')
    >>> firefox_owner.getLink('Add download file').click()
    >>> foo_file = StringIO('Foo installer package...')
    >>> firefox_owner.getControl(name='field.filecontent').add_file(foo_file,
    ...    'text/plain', 'foo09.txt')
    >>> firefox_owner.getControl('Description').value="Foo09 installer"
    >>> firefox_owner.getControl(name="field.contenttype").displayValue = \
    ...    ["README File"]
    >>> firefox_owner.getControl("Add file").click()
    >>> get_feedback_messages(firefox_owner.contents)
    [u"Your file 'foo09.txt' has been uploaded."]

Examine all of the available files for download for firefox now.  They
are listed within series in reverse chronological order, except
'trunk' the developer focus, is first.

    >>> firefox_owner.open('http://launchpad.dev/firefox/+download')
    >>> firefox_owner.url
    'http://launchpad.dev/firefox/+download'
    >>> content = find_main_content(firefox_owner.contents)
    >>> rows = content.findAll('tr')
    >>> for row in rows[1:]:
    ...     a_list = row.findAll('a')
    ...     if len(a_list) > 0:
    ...        print a_list[0].string
    firefox-0.9.2.orig.tar.gz
    foo09.txt
    foo3.txt
    foo2.txt
    foo.txt

== Downloading and deleting files ==

Download one of the files.

    >>> from urllib import urlopen
    >>> from urlparse import urlparse

XXX Downloading via the testbrowser does not work
XXX unless the file is served by the Zope publisher.
XXX The link resolves to a Librarian URL, which cannot
XXX be served since it is external.
XXX Most of the following can be replaced by
XXX >>> firefox_owner.getLink('foo2.txt').click()
XXX when bug 113083 is fixed.
XXX Mon May  7 10:02:49 2007 -- bac

    >>> link = firefox_owner.getLink('foo2.txt')
    >>> url_path = urlparse(link.url)[2]
    >>> redirect_resp = http("""
    ...     GET %s HTTP/1.1""" % url_path)
    >>> location = redirect_resp.getOutput().split("\n")[3]
    >>> redirect_url = location.split()[1]
    >>> print urlopen(redirect_url).read()
    Foo2 installer package...

Delete the file foo2.txt.

    >>> firefox_owner.open('http://launchpad.dev/firefox/+download')
    >>> firefox_owner.url
    'http://launchpad.dev/firefox/+download'
    >>> checkbox = firefox_owner.getControl(
    ...     name="checkbox_1_0_1")
    >>> checkbox.value = checkbox.options
    >>> firefox_owner.getControl("Delete Files").click()
    >>> get_feedback_messages(firefox_owner.contents)
    [u'1 file has been deleted.']

Ensure the file is no longer listed.

    >>> firefox_owner.open('http://launchpad.dev/firefox/+download')
    >>> firefox_owner.url
    'http://launchpad.dev/firefox/+download'
    >>> content = find_main_content(firefox_owner.contents)
    >>> rows = content.findAll('tr')
    >>> for row in rows[1:]:
    ...     a_list = row.findAll('a')
    ...     if len(a_list) > 0:
    ...        print a_list[0].string
    firefox-0.9.2.orig.tar.gz
    foo09.txt
    foo3.txt
    foo.txt
