= PackageRelationshipSet Pages =

IPackageReleationshipSet provides a single page, '+render-list', via
SimpleView class.
This page is incorporated in parent pages with a specific relationship
group. Some example of pages using it are:

 * +builds/+build/1234/$binaryname
 * $distrorelease/+source/$sourcename

Let's fill a IPackageRelationshipSet:

  >>> from canonical.launchpad.browser import PackageRelationshipSet

  >>> relationship_set = PackageRelationshipSet()
  >>> relationship_set.add(
  ...    name="foobar",
  ...    operator=">=",
  ...    version="1.0.2",
  ...    url="http://whatever/")

  >>> relationship_set.add(
  ...    name="test",
  ...    operator="",
  ...    version="",
  ...    url=None)

Note that iterations over PackageRelationshipSet are sorted
alphabetically according the relationship 'name':

  >>> [relationship.name for relationship in relationship_set]
  ['foobar', 'test']

It will cause all the relationship contents to be rendered in this order.

Let's get the view class:

  >>> from zope.component import queryView
  >>> from zope.publisher.browser import TestRequest

  >>> request = TestRequest(form={})
  >>> pkg_rel_view = queryView(relationship_set, "+render-list", request)

This view has no methods, so just demonstrate that it renders
correctly as::

  <ul>
     <li>
        <a href="fofofof">noonoo</a>
     </li>
     ...
     <li>
        fooooooo
     </li>
  </ul>

XXX cprov 20070111: we could get parse_relationship_section imported
implicitly if this test was set to PageTestLayer. However, it's a kind
of a accident that we need this function here, the code is already
extensively exercised in soyuz pagetests.

  >>> from canonical.launchpad.ftests.test_pages import (
  ...     parse_relationship_section)

  >>> parse_relationship_section(pkg_rel_view())
  LINK: "foobar(&gt;=1.0.2)" -> http://whatever/
  TEXT: "test"


Note that no link is rendered for IPackageReleationship where 'url' is
None.

