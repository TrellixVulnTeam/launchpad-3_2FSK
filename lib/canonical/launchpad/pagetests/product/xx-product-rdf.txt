We export DOAP RDF metadata for products from a link in the
/productname/+index document:

  >>> anon_browser.open("http://launchpad.dev/firefox")
  >>> anon_browser.getLink("RDF metadata").click()
  >>> print anon_browser.contents
  <?xml version="1.0" encoding="utf-8"...?>
  <rdf:RDF ...xmlns:lp="https://launchpad.net/rdf/launchpad#"...>
    <lp:Product>
      <lp:specifiedAt rdf:resource="/firefox/+rdf"...
      <lp:name>firefox</lp:name>
      <lp:displayName>Mozilla Firefox</lp:displayName>
      <lp:title>Mozilla Firefox</lp:title>
  ...
      <lp:owner>
        <foaf:Person>
          <foaf:name>Sample Person</foaf:name>
          <foaf:nick>name12</foaf:nick>
          <foaf:mbox_sha1sum>AF55D387F22F761CB32EC2A9C81F66220452C081</foaf:mbox_sha1sum>
          <lp:sshPubKey>AAAAB3NzaC1kc3MAAA...SG1gBOiI=</lp:sshPubKey>
        </foaf:Person>
      </lp:owner>
  ...
    </lp:Product>
  </rdf:RDF>
  <BLANKLINE>

And it's valid XML and RDF:

  >>> from xml.dom.minidom import parseString
  >>> document = parseString(str(anon_browser.contents))
  >>> print document.documentElement.nodeName
  rdf:RDF

