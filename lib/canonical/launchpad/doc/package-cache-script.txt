= Update-pkgcache script =

Package cache system is better described in package-cache.txt.

'update-pkgcache.py' is supposed to run periodically in our
infrastructure and it is localised in the 'cronscripts' directory

  >>> import os
  >>> from canonical.config import config
  >>> script = os.path.join(config.root, "cronscripts", "update-pkgcache.py")

Database sampledata has two pending modifications of package cache
contents:

  >>> from canonical.launchpad.interfaces import IDistributionSet
  >>> ubuntu = getUtility(IDistributionSet)['ubuntu']
  >>> warty = ubuntu['warty']

'cdrkit' source and binary are published but it's not present in
cache:

  >>> len(ubuntu.searchSourcePackages('cdrkit'))
  0
  >>> len(warty.searchPackages('cdrkit'))
  0

'foobar' source and binary are removed but still present in cache:

  >>> len(ubuntu.searchSourcePackages('foobar'))
  1
  >>> len(warty.searchPackages('foobar'))
  1

Normal operation produces INFO level information about the
distribution and respective distroreleases considered in stderr.

  >>> import subprocess
  >>> import sys
  >>> process = subprocess.Popen([sys.executable, script],
  ...                            stdout=subprocess.PIPE,
  ...                            stderr=subprocess.PIPE)
  >>> stdout, stderr = process.communicate()
  >>> process.returncode
  0

  >>> print stdout

  >>> print stderr
  INFO    creating lockfile
  INFO    breezy-autotest starting
  ...
  INFO    ubuntutest done

Rollback the old transaction in order to get the modifications done by
the external script:

 >>> import transaction
 >>> transaction.abort()

Now, search results are up to date:

  >>> len(ubuntu.searchSourcePackages('cdrkit'))
  1
  >>> len(warty.searchPackages('cdrkit'))
  1

  >>> len(ubuntu.searchSourcePackages('foobar'))
  0
  >>> len(warty.searchPackages('foobar'))
  0

