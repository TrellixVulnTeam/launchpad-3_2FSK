  Go to the register page.

  Workaround while https://launchpad.net/products/launchpad/+bug/39016 is not
  fixed.
  >>> from canonical.launchpad.mail import stub
  >>> stub.test_emails[:] = []

  >>> print http(r"""
  ... GET /+login HTTP/1.1
  ... """)
  HTTP/1.1 200 Ok
  ...
  ...Log in or register with Launchpad...
  ...


  Type in an invalid email address and got a warning message.

  >>> print http(r"""
  ... POST /+login HTTP/1.1
  ... Content-Type: application/x-www-form-urlencoded
  ... 
  ... loginpage_email=ab&loginpage_submit_registration=Register""")
  HTTP/1.1 200 Ok
  ...
  ...The email address you provided isn't valid...
  ...


  Type an email address that's already registered and got another warning
  message.

  >>> print http(r"""
  ... POST /+login HTTP/1.1
  ... Content-Type: application/x-www-form-urlencoded
  ... 
  ... loginpage_email=foo.bar%40canonical.com&loginpage_submit_registration=Register""")
  HTTP/1.1 200 Ok
  ...
  ...The email address foo.bar@canonical.com is already registered in our system...
  ...


  Now, provide a valid email address and ask to create a new account.

  >>> print http(r"""
  ... POST /+login HTTP/1.1
  ... Content-Type: application/x-www-form-urlencoded
  ... 
  ... loginpage_email=foobarino%40baz.com.br&loginpage_submit_registration=Register""")
  HTTP/1.1 200 Ok
  ...
  ...<h1>Registration mail sent</h1>...
  ...


  Get the token we'll have to use to finish the registration process.

  >>> import email, re
  >>> from_addr, to_addrs, raw_msg = stub.test_emails.pop()
  >>> assert not stub.test_emails
  >>> msg = email.message_from_string(raw_msg)
  >>> body = msg.get_payload()
  >>> link = re.findall(r'http.*/token/.*', body)[0]
  >>> token = re.sub(r'.*token/', '', link)
  >>> base_path = '/token/%s' % token

  Check if the email was sent to the right address.

  >>> to_addrs
  ['foobarino@baz.com.br']


  Go to the link sent by email.

  >>> print http(r"""
  ... GET %s HTTP/1.1
  ... """ % base_path)
  HTTP/1.1 303 See Other
  ...
  Location: http://localhost:9000/token/.../+newaccount
  <BLANKLINE>


  >>> path = '%s/+newaccount' % base_path
  >>> print http(r"""
  ... GET %s HTTP/1.1
  ... """ % path)
  HTTP/1.1 200 Ok
  ...
  ...<h1>Complete your registration</h1>...
  ...


  If in the meantime someone registers the email address that we're using
  to create a new account.

  >>> from canonical.lp.dbschema import EmailAddressStatus
  >>> from canonical.launchpad.database import EmailAddressSet, PersonSet
  >>> kiko = PersonSet().getByName('kiko')
  >>> email = EmailAddressSet().new(
  ...   'foobarino@baz.com.br', kiko, EmailAddressStatus.VALIDATED)
  >>> [email.email for email in kiko.validatedemails]
  [u'foobarino@baz.com.br']

  And we try to create a new account using that email, we'll get an error
  message.

  >>> print http(r"""
  ... POST %s HTTP/1.1
  ... Content-Type: multipart/form-data; boundary=---------------------------17483551342125833225531652773
  ... 
  ... -----------------------------17483551342125833225531652773
  ... Content-Disposition: form-data; name="field.displayname"
  ... 
  ... foobarino
  ... -----------------------------17483551342125833225531652773
  ... Content-Disposition: form-data; name="field.password"
  ... 
  ... foo
  ... -----------------------------17483551342125833225531652773
  ... Content-Disposition: form-data; name="field.password_dupe"
  ... 
  ... foo
  ... -----------------------------17483551342125833225531652773
  ... Content-Disposition: form-data; name="FORM_SUBMIT"
  ... 
  ... Continue
  ... -----------------------------17483551342125833225531652773--
  ... """ % path)
  HTTP/1.1 200 Ok
  ...
          <p class="error message">Please fix the problems below and try again.</p>
  <BLANKLINE>
          <p class="error message">The email address foobarino@baz.com.br is already registered.</p>
  ...


  We'll have to create a new account using a different email

  >>> print http(r"""
  ... POST /+login HTTP/1.1
  ... Content-Type: application/x-www-form-urlencoded
  ... 
  ... loginpage_email=foo%40baz.com&loginpage_submit_registration=Register""")
  HTTP/1.1 200 Ok
  ...
  ...<h1>Registration mail sent</h1>...
  ...


  Get the token we'll have to use to finish the registration process.

  >>> import email, re
  >>> from_addr, to_addrs, raw_msg = stub.test_emails.pop()
  >>> msg = email.message_from_string(raw_msg)
  >>> body = msg.get_payload()
  >>> link = re.findall(r'http.*/token/.*', body)[0]
  >>> token = re.sub(r'.*token/', '', link)
  >>> base_path = '/token/%s' % token

  Check if the email was sent to the right address.

  >>> to_addrs
  ['foo@baz.com']


  Go to the link sent by email.

  >>> print http(r"""
  ... GET %s HTTP/1.1
  ... """ % base_path)
  HTTP/1.1 303 See Other
  ...
  Location: http://localhost:9000/token/.../+newaccount
  <BLANKLINE>


  >>> path = '%s/+newaccount' % base_path
  >>> print http(r"""
  ... GET %s HTTP/1.1
  ... """ % path)
  HTTP/1.1 200 Ok
  ...
  ...<h1>Complete your registration</h1>...
  ...


  Fill in invalid information to create the new account and submit it.
  Here we are testing that display name is required.

  >>> print http(r"""
  ... POST %s HTTP/1.1
  ... Content-Type: multipart/form-data; boundary=---------------------------17483551342125833225531652773
  ... 
  ... -----------------------------17483551342125833225531652773
  ... Content-Disposition: form-data; name="field.displayname"
  ... 
  ... -----------------------------17483551342125833225531652773
  ... Content-Disposition: form-data; name="field.password"
  ... foo
  ... 
  ... -----------------------------17483551342125833225531652773
  ... Content-Disposition: form-data; name="field.password_dupe"
  ... foo
  ... 
  ... -----------------------------17483551342125833225531652773
  ... Content-Disposition: form-data; name="FORM_SUBMIT"
  ... 
  ... Continue
  ... -----------------------------17483551342125833225531652773--
  ... """ % path)
  HTTP/1.1 200 Ok
  ...
  ...Required input is missing....
  ...

  Here we are testing that password validation is fine.

  >>> print http(r"""
  ... POST %s HTTP/1.1
  ... Content-Type: multipart/form-data; boundary=---------------------------17483551342125833225531652773
  ... 
  ... -----------------------------17483551342125833225531652773
  ... Content-Disposition: form-data; name="field.displayname"
  ... foo
  ... 
  ... -----------------------------17483551342125833225531652773
  ... Content-Disposition: form-data; name="field.password"
  ... foo
  ... 
  ... -----------------------------17483551342125833225531652773
  ... Content-Disposition: form-data; name="field.password_dupe"
  ... 
  ... -----------------------------17483551342125833225531652773
  ... Content-Disposition: form-data; name="FORM_SUBMIT"
  ... 
  ... Continue
  ... -----------------------------17483551342125833225531652773--
  ... """ % path)
  HTTP/1.1 200 Ok
  ...
  ...Required input is missing....
  ...


  >>> print http(r"""
  ... POST %s HTTP/1.1
  ... Content-Type: multipart/form-data; boundary=---------------------------17483551342125833225531652773
  ... 
  ... -----------------------------17483551342125833225531652773
  ... Content-Disposition: form-data; name="field.displayname"
  ... 
  ... foobar
  ... -----------------------------17483551342125833225531652773
  ... Content-Disposition: form-data; name="field.password"
  ... 
  ... -----------------------------17483551342125833225531652773
  ... Content-Disposition: form-data; name="field.password_dupe"
  ... 
  ... -----------------------------17483551342125833225531652773
  ... Content-Disposition: form-data; name="FORM_SUBMIT"
  ... 
  ... Continue
  ... -----------------------------17483551342125833225531652773--
  ... """ % path)
  HTTP/1.1 200 Ok
  ...
  ...You must enter a password....
  ...


  >>> print http(r"""
  ... POST %s HTTP/1.1
  ... Content-Type: multipart/form-data; boundary=---------------------------17483551342125833225531652773
  ... 
  ... -----------------------------17483551342125833225531652773
  ... Content-Disposition: form-data; name="field.givenname"
  ... 
  ... foo
  ... -----------------------------17483551342125833225531652773
  ... Content-Disposition: form-data; name="field.familyname"
  ... 
  ... baz
  ... -----------------------------17483551342125833225531652773
  ... Content-Disposition: form-data; name="field.displayname"
  ... 
  ... foobar
  ... -----------------------------17483551342125833225531652773
  ... Content-Disposition: form-data; name="field.password"
  ... 
  ... tésté
  ... -----------------------------17483551342125833225531652773
  ... Content-Disposition: form-data; name="field.password_dupe"
  ... 
  ... tésté
  ... -----------------------------17483551342125833225531652773
  ... Content-Disposition: form-data; name="FORM_SUBMIT"
  ... 
  ... Continue
  ... -----------------------------17483551342125833225531652773--
  ... """ % path)
  HTTP/1.1 200 Ok
  ...
  ...The password provided contains non-ASCII characters...
  ...


  Fill in the information correctly to create the new account and submit it.
  We also tick the hide email address checkbox.

  >>> print http(r"""
  ... POST %s HTTP/1.1
  ... Content-Type: multipart/form-data; boundary=---------------------------17483551342125833225531652773
  ... 
  ... -----------------------------17483551342125833225531652773
  ... Content-Disposition: form-data; name="field.displayname"
  ... 
  ... foobar
  ... -----------------------------17483551342125833225531652773
  ... Content-Disposition: form-data; name="field.hide_email_addresses.used"
  ... 
  ... 
  ... -----------------------------17483551342125833225531652773
  ... Content-Disposition: form-data; name="field.hide_email_addresses"
  ... 
  ... on
  ... -----------------------------17483551342125833225531652773
  ... Content-Disposition: form-data; name="field.password"
  ... 
  ... f
  ... -----------------------------17483551342125833225531652773
  ... Content-Disposition: form-data; name="field.password_dupe"
  ... 
  ... f
  ... -----------------------------17483551342125833225531652773
  ... Content-Disposition: form-data; name="FORM_SUBMIT"
  ... 
  ... Continue
  ... -----------------------------17483551342125833225531652773--
  ... """ % path)
  HTTP/1.1 303 See Other
  ...
  Location: http://localhost:9000/people/foo
  ...


  New account was created with name 'foo' and the hide email addresses option is
  turned on.

  >>> print http(r"""
  ... GET /people/foo/+edit HTTP/1.1
  ... Authorization: Basic Zm9vQGJhei5jb206Zg==
  ... """)
  HTTP/1.1 200 Ok
  ...
  ...name="field.displayname" size="20" type="text" value="foobar"...
  ...
  ...Hide my email addresses from other Launchpad users...
  <BLANKLINE>
  <BLANKLINE>
  <BLANKLINE>
   ...name="field.hide_email_addresses" type="checkbox" value="on"...
  ...


  If you are comming from shipit to create a new account, you'll get
  redirected back to shipit after you finish the account creation.

  >>> print http(r"""
  ... GET /+login HTTP/1.1
  ... Referer: https://shipit.ubuntu.com
  ... """)
  HTTP/1.1 200 Ok
  ...
  ...Log in or register with Launchpad...
  ...<input type="hidden" name="redirection_url"...
  ...value="https://shipit.ubuntu.com"...
  ...

Sometimes, for reasons as yet unknown, we get an extra blank redirection_url
in the form.  This doesn't matter.  See OOPS-68D508.  Note the extra
redirection_url in the form post below.

  >>> print http(r"""
  ... POST /+login HTTP/1.1
  ... Content-Type: application/x-www-form-urlencoded
  ... 
  ... redirection_url=https%3A%2F%2Fshipit.ubuntu.com&redirection_url=&loginpage_email=foo%40baz2.com&loginpage_submit_registration=Register""")
  HTTP/1.1 200 Ok
  ...
  ...<h1>Registration mail sent</h1>...
  ...

  Get the token we'll have to use to finish the registration process.

  >>> from_addr, to_addrs, raw_msg = stub.test_emails.pop()
  >>> assert not stub.test_emails
  >>> msg = email.message_from_string(raw_msg)
  >>> body = msg.get_payload()
  >>> link = re.findall(r'http.*/token/.*', body)[0]
  >>> token = re.sub(r'.*token/', '', link)
  >>> base_path = '/token/%s' % token
  >>> path = '%s/+newaccount' % base_path

  >>> print http(r"""
  ... POST %s HTTP/1.1
  ... Content-Type: multipart/form-data; boundary=---------------------------17483551342125833225531652773
  ... 
  ... -----------------------------17483551342125833225531652773
  ... Content-Disposition: form-data; name="field.displayname"
  ... 
  ... foobar
  ... -----------------------------17483551342125833225531652773
  ... Content-Disposition: form-data; name="field.hide_email_addresses.used"
  ... 
  ... 
  ... -----------------------------17483551342125833225531652773
  ... Content-Disposition: form-data; name="field.hide_email_addresses"
  ... 
  ... on
  ... -----------------------------17483551342125833225531652773
  ... Content-Disposition: form-data; name="field.password"
  ... 
  ... f
  ... -----------------------------17483551342125833225531652773
  ... Content-Disposition: form-data; name="field.password_dupe"
  ... 
  ... f
  ... -----------------------------17483551342125833225531652773
  ... Content-Disposition: form-data; name="FORM_SUBMIT"
  ... 
  ... Continue
  ... -----------------------------17483551342125833225531652773--
  ... """ % path)
  HTTP/1.1 303 See Other
  ...
  Location: https://shipit.ubuntu.com
  ...


  If we try to go to that token's page again, we'll see a message explaining
  that the confirmation that token was created for is already concluded, so we
  don't need to do anything else.

  >>> print http(r"""
  ... GET %s HTTP/1.1
  ... """ % base_path)
  HTTP/1.1 200 Ok
  ...
  ...Confirmation already concluded...
  ...

