= Navigation for the Distribution page =

The distribution page uses NavigationMenu tabs for navigation around
the various distribution-related items and other sub-menus.

The overview page has several tab links available.

    >>> anon_browser.open("http://launchpad.dev/ubuntu")
    >>> print_navigation_links(anon_browser.contents)
    Details
    Announcements: http://launchpad.dev/ubuntu/+announcements
    Mentoring: http://launchpad.dev/ubuntu/+mentoring
    Mirrors: http://launchpad.dev/ubuntu/+cdmirrors
    Builds: http://launchpad.dev/ubuntu/+builds
    PPAs: http://launchpad.dev/ubuntu/+ppas

"Details" is not linked because it is the currently active tab.  When a
user clicks on "Announcements" he will see the announcements page.

    >>> anon_browser.getLink("Announcements").click()
    >>> print anon_browser.url
    http://launchpad.dev/ubuntu/+announcements

    >>> print_navigation_links(anon_browser.contents)
    No navigation links

The announcements page does not have any navigation links.

For normal users the mirrors pages have two navigation links and an
action link.  The CD mirrors page has a registration link and links to
the archive mirrors and CD mirrors..

    >>> anon_browser.open("http://launchpad.dev/ubuntu")
    >>> anon_browser.getLink("Mirrors").click()
    >>> print anon_browser.title
    Mirrors of Ubuntu Linux
    >>> print anon_browser.url
    http://launchpad.dev/ubuntu/+cdmirrors
    >>> navigation = find_tag_by_id(anon_browser.contents, 'global-actions')
    >>> for li in navigation.findAll('li'):
    ...     print extract_text(li)
    CD mirrors
    Archive mirrors

    >>> register = find_tag_by_id(anon_browser.contents, 'register')
    >>> for a in register.findAll('a'):
    ...     print extract_text(a)
    Register a new mirror

Likewise, the archive page has all three links.

    >>> anon_browser.getLink("Archive mirrors").click()
    >>> print anon_browser.title
    Mirrors of Ubuntu Linux
    >>> print anon_browser.url
    http://launchpad.dev/ubuntu/+archivemirrors
    >>> navigation = find_tag_by_id(anon_browser.contents, 'global-actions')
    >>> for li in navigation.findAll('li'):
    ...     print extract_text(li)
    CD mirrors
    Archive mirrors

    >>> register = find_tag_by_id(anon_browser.contents, 'register')
    >>> for a in register.findAll('a'):
    ...     print extract_text(a)
    Register a new mirror

An administrator sees three additional navigation links.

    >>> mark_browser = setupBrowser(auth='Basic mark@example.com:test')
    >>> mark_browser.open("http://launchpad.dev/ubuntu")
    >>> mark_browser.getLink("Mirrors").click()
    >>> print mark_browser.title
    Mirrors of Ubuntu Linux

    >>> navigation = find_tag_by_id(mark_browser.contents, 'global-actions')
    >>> for li in navigation.findAll('li'):
    ...     print extract_text(li)
    CD mirrors
    Archive mirrors
    Disabled mirrors
    Pending-review mirrors
    Unofficial mirrors

    >>> register = find_tag_by_id(anon_browser.contents, 'register')
    >>> for a in register.findAll('a'):
    ...     print extract_text(a)
    Register a new mirror
