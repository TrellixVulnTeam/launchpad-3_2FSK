= Archives =

For archives we publish a subset of their attributes.
This works for PPAs:

    >>> archive = webservice.get("/~cprov/+archive").jsonBody()
    >>> print archive['self_link']
    http://.../~cprov/+archive

    >>> for key, value in sorted(archive.items()):
    ...     print "%s: %s" % (key, value)
    description: packages to help my friends.
    distribution_link: http://.../ubuntu
    name: default
    owner_link: http://.../~cprov
    resource_type_link: http://.../#archive
    self_link: http://.../~cprov/+archive
    title: PPA for Celso Providelo

    >>> main = webservice.get("/ubuntu/+archive/primary").jsonBody()
    >>> print main['self_link']
    http://.../ubuntu/+archive/primary

Distributions can provide information about their archives.  Looking
at "ubuntutest":

    >>> distros = webservice.get("/distros").jsonBody()
    >>> for entry in distros['entries']:
    ...    print entry['self_link']
    http://.../ubuntu
    http://.../kubuntu
    http://.../ubuntutest
    http://.../debian
    http://.../gentoo

    >>> ubuntu = distros['entries'][2]

"ubuntutest" has a "main_archive" which is always present:

    >>> print ubuntu['main_archive_link']
    http://.../ubuntutest/+archive/primary

The archive has the following attributes:

    >>> main_archive = webservice.get(ubuntu['main_archive_link']).jsonBody()
    >>> for key, value in sorted(main_archive.items()):
    ...     print "%s: %s" % (key, value)
    description: None
    distribution_link: http://.../ubuntutest
    name: primary
    owner_link: http://.../~ubuntu-team
    resource_type_link: http://.../#archive
    self_link: http://.../ubuntutest/+archive/primary
    title: Primary Archive for Ubuntu Test

A distribution can also provide a list of all its archives:

    >>> print ubuntu['archives_collection_link']
    http://.../ubuntutest/archives
    >>> archives = webservice.get(
    ...     ubuntu['archives_collection_link']).jsonBody()
    >>> print_self_link_of_entries(archives)
    http://api.launchpad.dev/beta/ubuntutest/+archive/partner
    http://api.launchpad.dev/beta/ubuntutest/+archive/primary

Attempting to grab a non-existent archive will result in a 404 error:

    >>> bogus_archive = "ubuntutest/+archive/bogus"
    >>> webservice.get(bogus_archive).jsonBody()
    Traceback (most recent call last):
    ...
    ValueError: HTTP/1.1 404 Not Found
    ...


= Archive Permissions =

Archives have associated permissions.  These are currently either upload
rights or queue administration rights.  The URL to the permissions
takes two forms:
 * <archive>/+upload/username.item
 * <archive>/+queue-admin/username.item
where item is a component or a source package name.

Here we see upload rights for a team to a component:

    >>> ubuntu_main_permission = webservice.get(
    ...     "/ubuntu/+archive/primary/+upload/ubuntu-team.main").jsonBody()
    >>> for key, value in sorted(ubuntu_main_permission.items()):
    ...     print "%s: %s" % (key, value)
    archive_link: http://.../ubuntu/+archive/primary
    component_name: main
    date_created: ...
    permission: Archive Upload Rights
    person_link: http://.../~ubuntu-team
    resource_type_link: ...
    self_link: http://.../ubuntu/+archive/primary/+upload/ubuntu-team.main
    source_package_name: None

Here we see upload rights for an individual to a source package:

    >>> carlos_mozilla_permission = webservice.get(
    ...     "/ubuntu/+archive/primary/"
    ...     "+upload/carlos.mozilla-firefox").jsonBody()
    >>> for key, value in sorted(carlos_mozilla_permission.items()):
    ...     print "%s: %s" % (key, value)
    archive_link: http://.../ubuntu/+archive/primary
    component_name: None
    date_created: ...
    permission: Archive Upload Rights
    person_link: http://.../~carlos
    resource_type_link: ...
    self_link: http://.../ubuntu/+archive/primary/+upload/carlos.mozilla-firefox
    source_package_name: mozilla-firefox

Here is a queue admin right for ubuntu-team:

    >>> ubuntu_main_permission = webservice.get(
    ...     "/ubuntu/+archive/primary/+queue-admin/ubuntu-team.main").jsonBody()
    >>> for key, value in sorted(ubuntu_main_permission.items()):
    ...     print "%s: %s" % (key, value)
    archive_link: http://.../ubuntu/+archive/primary
    component_name: main
    date_created: ...
    permission: Queue Administration Rights
    person_link: http://.../~ubuntu-team
    resource_type_link: ...
    self_link: http://.../ubuntu/+archive/primary/+queue-admin/ubuntu-team.main
    source_package_name: None

And one for an individual:

    >>> name16_admin_permission = webservice.get(
    ...     "/ubuntu/+archive/primary/+queue-admin/name12.universe").jsonBody()
    >>> for key, value in sorted(ubuntu_main_permission.items()):
    ...     print "%s: %s" % (key, value)
    archive_link: http://.../ubuntu/+archive/primary
    component_name: main
    date_created: ...
    permission: Queue Administration Rights
    person_link: http://.../~ubuntu-team
    resource_type_link: ...
    self_link: http://.../ubuntu/+archive/primary/+queue-admin/ubuntu-team.main
    source_package_name: None
