== The map of a team's members ==

If a team has members that have locations, then you should see a portlet
with their locations displayed.

    >>> nopriv_browser = setupBrowser(auth='Basic no-priv@canonical.com:test')
    >>> nopriv_browser.open('http://launchpad.dev/~guadamen')
    >>> body = find_main_content(nopriv_browser.contents)
    >>> mapdiv = find_tag_by_id(str(body), 'team_map_div')
    >>> 'lp.mapping.renderTeamMapSmall(' in str(body)
    True
    >>> markup = str(nopriv_browser.contents)
    >>> 'src="http://maps.google.com/maps' in markup
    True
    >>> 'build/lp/mapping.js' in markup
    True

You should also be able to see a map of the team.

    >>> maplink = nopriv_browser.getLink('View map and time zones')
    >>> maplink.click()
    >>> nopriv_browser.url
    'http://launchpad.dev/~guadamen/+map'

The map depends on a stream of XML-formatted data, giving the locations of
all members of the team. We show that this stream works for teams with, and
without, mapped members.

    >>> anon_browser.open('http://launchpad.dev/~guadamen/+mapdata')
    >>> print anon_browser.contents
    <?xml version="1.0"...
    <participants>
      <!--
        This collection of team location data is (c) Canonical Ltd and
        contributors, and the format may be changed at any time.
      -->
      <participant
        displayname="Colin Watson"
        name="kamion"
        logo_html="&lt;img alt=&quot;&quot; width=&quot;64&quot; height=&quot;64&quot; src=&quot;/@@/person-logo&quot; /&gt;"
        url="/~kamion"
        local_time="..."
        lat="52.2"
        lng="0.3"/>
    </participants>
    <BLANKLINE>

    >>> anon_browser.open('http://launchpad.dev/~name21/+mapdata')
    >>> print anon_browser.contents
    <?xml version="1.0"...
    <participants>
      <!--
        This collection of team location data is (c) Canonical Ltd and
        contributors, and the format may be changed at any time.
      -->
    </participants>
    <BLANKLINE>

The team index page has a map with data limited to 24 members and uses
a slightly different URL.

    >>> anon_browser.open('http://launchpad.dev/~guadamen/+mapdataltd')
    >>> print anon_browser.contents
    <?xml version="1.0"...
    <participants>
      <!--
        This collection of team location data is (c) Canonical Ltd and
        contributors, and the format may be changed at any time.
      -->
      <participant
        displayname="Colin Watson"
        name="kamion"
        logo_html="&lt;img alt=&quot;&quot; width=&quot;64&quot; height=&quot;64&quot; src=&quot;/@@/person-logo&quot; /&gt;"
        url="/~kamion"
        local_time="..."
        lat="52.2"
        lng="0.3"/>
    </participants>
    <BLANKLINE>


It doesn't make sense to edit the location of the team itself, not even
if we are an admin, so a team's +editlocation page will simply redirect
to +map.

    >>> admin_browser.open('http://launchpad.dev/~guadamen/+editlocation')
    >>> print admin_browser.url
    http://launchpad.dev/~guadamen/+map


== +mapdata ==

The display name of all team participants will be escaped to prevent
XSS attacks on any callsite of +mapdata.

    >>> admin_browser.open('http://launchpad.dev/~kamion/+edit')
    >>> admin_browser.getControl('Display Name').value = (
    ...     "<script>alert('Colin \"nasty\"');</script>")
    >>> admin_browser.getControl('Save Changes').click()

    >>> anon_browser.open('http://launchpad.dev/~guadamen/+mapdata')
    >>> print anon_browser.contents
    <?xml version="1.0"...
    ...displayname="&amp;lt;script&amp;gt;alert('Colin &amp;quot;nasty&amp;quot;');&amp;lt;/script&amp;gt;"
    ...
