= Changing bug assignment =

A bug is unassigned by choosing the "Assigned to" -> "Nobody" option.

    >>> admin_browser.open("http://launchpad.dev/firefox/+bug/1")

Bug 1 is currently assigned to someone.

    >>> assignee_control = admin_browser.getControl(
    ...     name="firefox.assignee.option", index=0)
    >>> assignee_control.value == ["firefox.assignee.assigned_to"]
    True

But we can change it to be assigned to nobody.

    >>> assignee_control.value = ["firefox.assignee.assign_to_nobody"]

    >>> admin_browser.getControl("Save Changes", index=0).click()

    >>> admin_browser.getControl(name="firefox.assignee.option", index=0).value
    ['firefox.assignee.assign_to_nobody']


== Bug assignment to non-contributors ==

When attempting to assign a bug to a user who isn't an established bug
contributor (they have no bugs currently assigned to them) it is
necessary to confirm that the assignment is intentional.

    >>> admin_browser.open("http://launchpad.dev/firefox/+bug/1")
    >>> assignee_control = admin_browser.getControl(
    ...     name="firefox.assignee.option", index=0)
    >>> assignee_control.value = ["firefox.assignee.assign_to"]
    >>> assign_to_control = admin_browser.getControl(
    ...     name="firefox.assignee", index=0)
    >>> assign_to_control.value = "cprov"
    >>> admin_browser.getControl("Save Changes", index=0).click()
    >>> print extract_text(
    ...     first_tag_by_class(admin_browser.contents, 'pageheading'))
    Confirm bug assignment

A confirmation request appears. If we choose to cancel the operation
we return to the bugtask index, so that we can change our choice (the
form fields are pre-filled with the data previously entered, and the
relevant bugtask is expanded as soon as the page is loaded).

    >>> def url_path(url):
    ...     return url.split('?')[0]

    >>> admin_browser.getLink("Choose someone else...").click()
    >>> print url_path(admin_browser.url)
    http://bugs.launchpad.dev/firefox/+bug/1
    >>> assign_to_control = admin_browser.getControl(
    ...     name="firefox.assignee", index=0)
    >>> assign_to_control.value
    'cprov'

We submit the form again, and this time we choose to accept cprov as
a new bug contributor.

    >>> admin_browser.getControl("Save Changes", index=0).click()
    >>> print extract_text(
    ...     first_tag_by_class(admin_browser.contents, 'pageheading'))
    Confirm bug assignment
    >>> admin_browser.getControl("Continue").click()

Now the bug is assigned to cprov.

    >>> print admin_browser.url
    http://bugs.launchpad.dev/firefox/+bug/1
    >>> 'href="/~cprov/+assignedbugs"' in str(
    ...     first_tag_by_class(admin_browser.contents, 'listing'))
    True
