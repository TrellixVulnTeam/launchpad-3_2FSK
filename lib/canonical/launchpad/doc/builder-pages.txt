Builder View Classes and Pages
==============================

  >>> from zope.component import getUtility
  >>> from zope.component import queryView
  >>> from zope.publisher.browser import TestRequest
  >>> from canonical.launchpad.interfaces import IBuilderSet
  >>> from canonical.lp.interfaces import IBatchNavigator

  >>> builder = getUtility(IBuilderSet).get(1)

Get a "mock" request:
  >>> mock_form = {'batch_start': 1}
  >>> request = TestRequest(form=mock_form)

Let's instantiate the view for +index:

  >>> builder_view = queryView(builder, "+index", request)

  >>> builder_view.now().isoformat()
  '...'

  setupBuildList, build a batched list of build records and store it
  in view.batch, also store the batch navigator in view.batchnav. it
  simply returns None:

  >>> builder_view.setupBuildList()

As expected we have a 'batched' list with the size requested in
mock_form:

  >>> len(builder_view.batch)
  3

Let's instantiate the view for +cancel:

  >>> request = TestRequest(form={'BUILDERID': 1})

  >>> builder_view = queryView(builder, "+cancel", request)

  >>> builder_view.cancelBuildJob()
  '<p>Cancel (1). Not implemented yet</p>'


Let's instantiate the view for +mode:

This page requires launchpad.Edit permission and the builder is owned
by mark. we nee to log in as mark or any other member of admin team

  >>> from canonical.launchpad.ftests import login
  >>> login("foo.bar@canonical.com")

Build an special request containing the fields we want to change:

  >>> request = TestRequest(form={'field.manual': 'on',
  ...                             'UPDATE_SUBMIT': 'Change'})

Instantiate the correspondent view:

  >>> builder_view = queryView(builder, "+mode", request)

Ensure the previous mode was AUTOMATIC

  >>> builder.manual
  False

Call the update() method of the zope.app.form.EditView class

  >>> builder_view.update()
  u'Updated on ${date_time}'

We've changed the builder mode to MANUAL

  >>> builder.manual
  True


Let's instantiate the view for +edit:

Build an special request containing the fields we want to change:

  >>> request = TestRequest(form={'field.processor': builder.processor.name,
  ...                             'field.url': builder.url,
  ...                             'field.name': u'biscoito',
  ...                             'field.title': builder.title,
  ...                             'field.description': builder.description,
  ...                             'UPDATE_SUBMIT': 'Change'})

Instantiate the correspondent view:

  >>> builder_view = queryView(builder, "+edit", request)

Ensure the previous name

  >>> builder.id, builder.name
  (1, u'bob')

Call the update() method of the zope.app.form.EditView class

  >>> builder_view.update()
  u'Updated on ${date_time}'

We've modified the buildername

  >>> builder.id, builder.name
  (1, u'biscoito')


