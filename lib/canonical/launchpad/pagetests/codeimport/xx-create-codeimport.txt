= Creating a code import =

Users are able to specifically request a code import of their
project's code.  The main link to this is a large button on
the code home page "Import your project".

    >>> browser = setupBrowser(auth="Basic no-priv@canonical.com:test")
    >>> browser.open("http://code.launchpad.dev")
    >>> print find_tag_by_id(browser.contents, "new-code-import")
    <a href="/+code-imports/+new" id="new-code-import">
       <img alt="Import your project" ...>
    </a>

    >>> browser.getLink(id="new-code-import").click()
    >>> print browser.title
    Request a code import


== Requesting a Subversion import ==

The default foreign VCS type is Subversion.

    >>> print_radio_button_field(browser.contents, "rcs_type")
    (*) Subversion
    ( ) CVS

The user is required to enter a project that the import is for,
a name for the import branch, and a subversion branch location.

    >>> browser.getControl('Project').value = "firefox"
    >>> browser.getControl('Branch Name').value = "imported"
    >>> browser.getControl('Branch URL').value = (
    ...     "http://svn.example.com/firefox/trunk")
    >>> browser.getControl('Request Import').click()

When the user clicks continue, the import branch is created

    >>> print extract_text(find_tag_by_id(browser.contents, "import-details"))
    Status: Pending Review
    This branch is an import of the Subversion branch
    from http://svn.example.com/firefox/trunk.

The user is also subscribed to the branch to get notifications.

    >>> print extract_text(find_portlet(browser.contents, 'Subscribers'))
    Subscribers
    No Privileges Person


== Requesting a CVS import ==

The user is required to enter both the CVS root and module in order
to identify the CVS branch.  A project and branch name are also required.

    >>> browser.open("http://code.launchpad.dev/+code-imports/+new")
    >>> browser.getControl('Project').value = "firefox"
    >>> browser.getControl('Branch Name').value = "import2"
    >>> browser.getControl('CVS').click()
    >>> browser.getControl('Repository').value = (
    ...     ":pserver:anonymous@cvs.example.com:/mozilla/cvs")
    >>> browser.getControl('Module').value = "firefox"
    >>> browser.getControl('Request Import').click()

    >>> print extract_text(find_tag_by_id(browser.contents, "import-details"))
    Status: Pending Review
    This branch is an import of the CVS module firefox from
    :pserver:anonymous@cvs.example.com:/mozilla/cvs.


== Requesting an import that is already being imported ==

If a user requests an import that is already being imported, then
the validation message points the user to the existing branch.

    >>> browser.open("http://code.launchpad.dev/+code-imports/+new")

The error is shown even if the project is different.

    >>> browser.getControl('Project').value = "thunderbird"
    >>> browser.getControl('Branch Name').value = "imported"
    >>> browser.getControl('CVS').click()
    >>> browser.getControl('Repository').value = (
    ...     ":pserver:anonymous@cvs.example.com:/mozilla/cvs")
    >>> browser.getControl('Module').value = "firefox"
    >>> browser.getControl('Request Import').click()

    >>> for message in get_feedback_messages(browser.contents):
    ...     print extract_text(message)
    There is 1 error.
    Those CVS details are already specified for
    the imported branch ~vcs-imports/firefox/import2.

    >>> browser.getControl('Subversion').click()
    >>> browser.getControl('Branch URL').value = (
    ...     "http://svn.example.com/firefox/trunk")
    >>> browser.getControl('Request Import').click()

    >>> for message in get_feedback_messages(browser.contents):
    ...     print extract_text(message)
    There is 1 error.
    This Subversion branch URL is already specified for
    the imported branch ~vcs-imports/firefox/imported.


== Reqeusting an import whose name would clash ==

Instead of Launchpad trying to come up with names for the imported
branches, the user is asked to enter one when requesting the import.
If the name would clash, then the user is prompted to enter a different
one.

    >>> browser.open("http://code.launchpad.dev/+code-imports/+new")
    >>> browser.getControl('Project').value = "firefox"
    >>> browser.getControl('Branch Name').value = "imported"
    >>> browser.getControl('Branch URL').value = (
    ...     "http://svn.example.com/firefox/other")
    >>> browser.getControl('Request Import').click()
    >>> for message in get_feedback_messages(browser.contents):
    ...     print extract_text(message)
    There is 1 error.
    There is already an existing import for firefox with the name of imported.

