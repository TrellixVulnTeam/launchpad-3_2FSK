Launchpad supports the CVE database system.

The Bugs front page

  >>> browser.open('http://bugs.launchpad.dev/')
  >>> browser.url
  'http://bugs.launchpad.dev/'

records the number of CVE references linked to bugs in Launchpad.

  >>> print browser.contents
  <!DOCTYPE...
  ...2...
  ...CVE entries...

Now we view the CVE tracker. We should see a link to a page showing all the
CVE entries. We should also see the latest 5 CVE entries modified or created 
in the system.

  >>> print http(r"""
  ... GET /bugs/cve/ HTTP/1.1
  ... """)
  HTTP/1.1 200 Ok
  ...CVE-2005-2737 (Candidate)...
  ...CVE-2005-2736 (Candidate)...
  ...<a href=".../bugs/cve/+all">All registered CVEs</a>...

Now, we will test the search functionality of the CVE tracker. First we
will search for the word "loss" in the database and see how many show
up. We expect to see CVE-1999-2345.

  >>> print http(r"""
  ... POST /bugs/cve/ HTTP/1.1
  ... Content-Length: 9
  ... Content-Type: application/x-www-form-urlencoded
  ... 
  ... text=loss""")
  HTTP/1.1 200 Ok
  ...Matches: 1...
  ...CVE-1999-2345 (Candidate)...

Finally, let's put a CVE number in there. We expect to jump straight to that
CVE.

  >>> print http(r"""
  ... POST /bugs/cve/ HTTP/1.1
  ... Content-Length: 14
  ... Content-Type: application/x-www-form-urlencoded
  ... 
  ... text=2005-2737""")
  HTTP/1.1 303 See Other
  ...
  Location: http://.../bugs/cve/2005-2737
  <BLANKLINE>

OK, let's look at the CVE page for 2005-2737. We expect to see a few
references.

  >>> anon_browser.open('http://launchpad.dev/bugs/cve/2005-2737')
  >>> "Cross-site scripting (XSS) vulnerability" in anon_browser.contents
  True
  >>> 'No related bugs' in anon_browser.contents
  True
  >>> '/cve/2005-2737/+linkbug">Link to bug</a>' in anon_browser.contents
  True
  >>> 'Candidate' in anon_browser.contents
  True
  >>> 'http://marc.theaimsgroup.com/?l=bugtraq&amp;m=112511025414488&amp;w=2">20050826 Multiple PHP' in anon_browser.contents
  True

