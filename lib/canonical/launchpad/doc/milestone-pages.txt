= Milestone pages =

Users can directly see and edit milestones through the milestone views.


== Deleting milestones ==

The DeleteMilestoneView allows users to edit permissions to delete Milestones.
The view is restricted to owners of the project and drivers of the series.

    >>> from canonical.launchpad.interfaces.product import IProductSet
    >>> from canonical.launchpad.webapp.authorization import check_permission

    >>> firefox = getUtility(IProductSet).getByName('firefox')
    >>> owner = firefox.owner
    >>> login_person(owner)
    >>> firefox_1_0 =  firefox.getSeries('1.0')
    >>> milestone = firefox_1_0.newMilestone('1.0.10')
    >>> print milestone.name
    1.0.10

    >>> view = create_initialized_view(milestone, '+delete')
    >>> check_permission('launchpad.Edit', view)
    True

The view provides a few properties to access the dependent artifacts. This
milestone does not have any bugtasks, specifications, a product release or
product release files.

    >>> view.bugtasks
    []
    >>> view.specifications
    []
    >>> print view.product_release
    None
    >>> view.product_release_files
    []

The milestone is deleted when the delete action is called.

    >>> form = {
    ...     'field.actions.delete': 'Delete this Milestone',
    ...     }
    >>> view = create_initialized_view(milestone, '+delete', form=form)
    >>> for notification in view.request.response.notifications:
    ...     print notification.message
    Milestone 1.0.10 deleted.
    >>> print firefox.getMilestone('1.0.10')
    None

The view will delete the dependent product release and release files if
they exist. It will also untarget bugtasks and specifications from the
milestone.

    >>> from datetime import datetime
    >>> from pytz import UTC

    >>> milestone = firefox_1_0.newMilestone('1.0.11')
    >>> release = milestone.createProductRelease(
    ...     owner, datetime.now(UTC))
    >>> release_file = release.addReleaseFile(
    ...     'test', 'test', 'text/plain', owner, description="test file")
    >>> specification = factory.makeSpecification(product=firefox)
    >>> specification.milestone = milestone
    >>> bug = factory.makeBug(product=firefox)
    >>> bugtask = bug.bugtasks[0]
    >>> bugtask.milestone = milestone

    >>> view = create_initialized_view(milestone, '+delete')
    >>> [bugtask.milestone.name for bugtask in view.bugtasks]
    [u'1.0.11']
    >>> [spec.milestone.name for spec in view.specifications]
    [u'1.0.11']
    >>> view.product_release.version
    u'1.0.11'
    >>> [file_.description for file_ in view.product_release_files]
    [u'test file']

    >>> view = create_initialized_view(milestone, '+delete', form=form)
    >>> for notification in view.request.response.notifications:
    ...     print notification.message
    Milestone 1.0.11 deleted.

    >>> print firefox.getMilestone('1.0.11')
    None
    >>> print firefox_1_0.getRelease('1.0.11')
    None
    >>> print specification.milestone
    None
    >>> print bugtask.milestone
    None

No Privileges Person cannot access this view because he is neither the
project owner or series driver..

    >>> from canonical.launchpad.interfaces.person import IPersonSet

    >>> milestone = firefox_1_0.newMilestone('1.0.12')
    >>> no_priv = getUtility(IPersonSet).getByName('no-priv')
    >>> login_person(no_priv)
    >>> view = create_initialized_view(milestone, '+delete')
    >>> check_permission('launchpad.Edit', view)
    False
