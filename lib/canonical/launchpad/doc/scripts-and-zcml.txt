Scripts and ZCML
----------------

The full Zope component architecture is available from scripts so long as they
call `execute_zcml_for_scripts()`.

Let's make a simple example script that uses getUtility and the database to
demonstrate this:

   >>> import tempfile, subprocess, os, sys
   >>> script_file = tempfile.NamedTemporaryFile()
   >>> script_file.write("""
   ... from canonical.launchpad.scripts import execute_zcml_for_scripts
   ... from canonical.launchpad.interfaces import IPersonSet
   ... from canonical.lp import initZopeless
   ... from zope.component import getUtility
   ...
   ... execute_zcml_for_scripts()
   ... initZopeless()
   ... print getUtility(IPersonSet).get(1).displayname
   ... """)
   >>> script_file.flush()

Run the script (making sure it uses the testrunner configuration).

   >>> env = dict(os.environ)
   >>> env['LPCONFIG'] = 'testrunner'
   >>> from canonical.config import config
   >>> bin_py = os.path.join(config.root, 'bin', 'py')
   >>> proc = subprocess.Popen([bin_py, script_file.name], 
   ...                         stdout=subprocess.PIPE, stderr=None,
   ...                         env=env)

Check that we get the expected output.

   >>> print proc.stdout.read()
   Mark Shuttleworth
   >>> print proc.wait()
   0

Remove the temporary file.

   >>> script_file.close()

