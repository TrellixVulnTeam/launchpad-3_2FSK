If we try to add an upstream task without specifying a product:

  >>> browser.addHeader('Authorization', 'Basic test@canonical.com:test')
  >>> domain = 'http://localhost:9000'
  >>> path = '/distros/debian/+source/mozilla-firefox/+bug/3/+upstreamtask'
  >>> browser.open(domain + path)
  >>> browser.getControl('Product').value = ''
  >>> browser.getControl('Continue').click()

We get a nice error message.

  >>> 'Required input is missing' in browser.contents
  True

Now we add an upstream task, while adding this new bugtask we can also
specify a remote bug. If we inadvertently left some leading or trailing white
space in the bug number it will be stripped.

  >>> browser.getControl('Product').value = 'firefox'
  >>> browser.getControl(name='field.bugtracker').value = ['1']
  >>> browser.getControl(name='field.remotebug').value = '   1234   '
  >>> browser.getControl('Continue').click()

Redirected to the newly created bugtask page

  >>> browser.url
  'http://localhost:9000/products/firefox/+bug/3'

And we can check that the remote bug number was stripped.

  >>> browser.getLink('mozilla.org #1234')
  <Link text='mozilla.org #1234'
    url='https://bugzilla.mozilla.org/show_bug.cgi?id=1234'>

And now we try to add the same upstream again.

  >>> path = '/products/firefox/+bug/3/+upstreamtask'
  >>> browser.open(domain + path)
  >>> browser.getControl('Product').value = 'firefox'
  >>> browser.getControl('Continue').click()

We get a nice error message.

  >>> error_msg = (
  ...   'A fix for this bug has already been requested for Mozilla Firefox')
  >>> error_msg in browser.contents
  True

We can add another upstream to the bug.

  >>> browser.getControl('Product').value = 'evolution'
  >>> browser.getControl('Continue').click()

  >>> browser.url
  'http://localhost:9000/products/evolution/+bug/3'

But if we try to change it to a existing upstream bugtask, our validator
enters in action.

  >>> path = '/products/evolution/+bug/3/+editstatus'
  >>> browser.open(domain + path)
  >>> browser.getControl(name='field.product').value = 'firefox'
  >>> browser.getControl('Save Changes').click()

  >>> error_msg = (
  ...   'A fix for this bug has already been requested for Mozilla Firefox')
  >>> error_msg in browser.contents
  True
