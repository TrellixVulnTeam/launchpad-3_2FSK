Mass processing of PENDINGSPECIAL requests
==========================================

Some people will always try to get more CDs from ShipIt just because it's
easy and free of charge.  To alleviate this problem we'll automatically
flag all requests made by a given person if, and only if, that person has
at least two other requests for that same distrorelease and flavour
already shipped.

These requests will be marked with a PENDINGSPECIAL status and, by default,
won't show up on the list of pending requests seen by shipit admins.  Then,
from time to time, if we have too many of these requests we'll run a script
to either approve or deny them all at once.

This script is called shipit-process-requests-pending-special, and it simply
calls the processRequestsPendingSpecial() method of ShippingRequestSet,
passing the status to which we should change the requests.

    >>> from canonical.launchpad.interfaces import IShippingRequestSet
    >>> from canonical.launchpad.database import ShippingRequest
    >>> from canonical.lp.dbschema import ShippingRequestStatus
    >>> from canonical.database.sqlbase import (
    ...     flush_database_updates, flush_database_caches)
    >>> from zope.component import getUtility
    >>> pendingspecial = ShippingRequestStatus.PENDINGSPECIAL
    >>> pending = ShippingRequestStatus.PENDING
    >>> denied = ShippingRequestStatus.DENIED

    >>> ShippingRequest.selectBy(status=pendingspecial).count()
    0
    >>> pending_request = ShippingRequest.selectFirstBy(
    ...     status=pending, orderBy='id')
    >>> pending_request.status = pendingspecial
    >>> flush_database_updates()
    >>> ShippingRequest.selectBy(status=pendingspecial).count()
    1

    >>> getUtility(IShippingRequestSet).processRequestsPendingSpecial(
    ...     status=ShippingRequestStatus.DENIED)
    >>> from canonical.launchpad.mail import stub
    >>> import transaction
    >>> transaction.commit()
    >>> len(stub.test_emails)
    1
    >>> from_addr, to_addr, raw_message = stub.test_emails.pop()
    >>> to_addr
    ['info@shipit.ubuntu.com']
    >>> import email
    >>> print email.message_from_string(raw_message).get_payload(decode=True)
    Hello,
    ...
    Request #12, made by 'Jeff Waugh' containing 10 CDs
    ...

    >>> flush_database_updates()
    >>> ShippingRequest.selectBy(status=pendingspecial).count()
    0
    >>> pending_request.status == denied
    True


Now, let's run the script as a subprocess, to make sure it denies the
pending special requests, as we expect it to.

    >>> pending_request.status = pendingspecial
    >>> pending_request.status == pendingspecial
    True
    >>> flush_database_updates()
    >>> transaction.commit()

    >>> from subprocess import Popen, PIPE
    >>> process = Popen(
    ...     'scripts/shipit-process-requests-pending-special.py -q',
    ...     shell=True, stdin=PIPE, stdout=PIPE, stderr=PIPE)
    >>> (out, err) = process.communicate()
    >>> out, err
    ('', '')
    >>> process.returncode
    0

    # Flush the caches because pending_request was changed in another
    # transaction.
    >>> flush_database_caches()
    >>> pending_request.status == denied
    True
