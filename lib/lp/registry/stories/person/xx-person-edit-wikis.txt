==================
Person's wikinames
==================

A person can have any number of WikiNames registered in Launchpad, and
they can be managed on the +editwikinames page.

    # A helper function for printing all wikinames of a person.
    >>> def print_existing_wikiurls(contents):
    ...     trs = find_tags_by_class(contents, 'wikiurl')
    ...     wikis = []
    ...     for tr in trs:
    ...         td = tr.find('td')
    ...         wikis.append(td.contents[0])
    ...     print '\n'.join(wikis)

    >>> def print_feedback(browser):
    ...     print "\n".join(get_feedback_messages(browser.contents))

Mark already has one WikiName registered.

    >>> browser.addHeader('Authorization', 'Basic mark@example.com:test')
    >>> browser.open('http://launchpad.dev/~mark/+editwikinames')
    >>> print_existing_wikiurls(browser.contents)
    https://wiki.ubuntu.com/MarkShuttleworth

But he wants to register another one.

    >>> browser.getControl(name='field.wiki').value = 'http://foo.bar/wiki/'
    >>> browser.getControl(name='field.wikiname').value = 'FooBar'
    >>> browser.getControl('Save Changes').click()
    >>> print_feedback(browser)
    >>> print browser.url
    http://launchpad.dev/~mark
    >>> browser.open('http://launchpad.dev/~mark/+editwikinames')
    >>> print_existing_wikiurls(browser.contents)
    http://foo.bar/wiki/FooBar
    https://wiki.ubuntu.com/MarkShuttleworth

He can't have two identical wiki names, though.

    >>> browser.getControl(name='field.wiki').value = 'http://foo.bar/wiki/'
    >>> browser.getControl(name='field.wikiname').value = 'FooBar'
    >>> browser.getControl('Save Changes').click()
    >>> print browser.url
    http://launchpad.dev/%7Emark/+editwikinames
    >>> for message in find_tags_by_class(browser.contents, 'message'):
    ...     print message.renderContents()
    There is 1 error.
    The WikiName http://foo.bar/wiki/FooBar already belongs to you.

Nor can he have a WikiName that is already registered in Launchpad.

    >>> browser.getControl(name='field.wiki').value = (
    ...     'https://wiki.ubuntu.com/')
    >>> browser.getControl(name='field.wikiname').value = 'GuilhermeSalgado'
    >>> browser.getControl('Save Changes').click()
    >>> print browser.url
    http://launchpad.dev/%7Emark/+editwikinames
    >>> print "\n".join(get_feedback_messages(browser.contents))
    There is 1 error.
    The WikiName https://wiki.ubuntu.com/GuilhermeSalgado is already
    registered by Guilherme Salgado. If you think this is a duplicated
    account, you can merge it into your account.

A WikiName's URL can't be empty nor invalid.

    >>> browser.getControl(name='field.wiki').value = ''
    >>> browser.getControl(name='field.wikiname').value = 'FooBar'
    >>> browser.getControl('Save Changes').click()
    >>> print browser.url
    http://launchpad.dev/%7Emark/+editwikinames
    >>> print "\n".join(get_feedback_messages(browser.contents))
    There is 1 error.
    The Wiki URL must be specified.

    >>> browser.getControl(name='field.wiki').value = '/this-is-not-a-url/'
    >>> browser.getControl(name='field.wikiname').value = 'FooBar'
    >>> browser.getControl('Save Changes').click()
    >>> print browser.url
    http://launchpad.dev/%7Emark/+editwikinames
    >>> print "\n".join(get_feedback_messages(browser.contents))
    There is 1 error.
    "/this-is-not-a-url/" is not a valid URI

And it can't be incredibly long.

    >>> browser.getControl(name='field.wiki').value = (
    ...     'https://wiki.ubuntu.com/')
    >>> wikiname = "z" * 101
    >>> browser.getControl(name='field.wikiname').value = wikiname
    >>> browser.getControl('Save Changes').click()
    >>> print browser.url
    http://launchpad.dev/%7Emark/+editwikinames
    >>> print "\n".join(get_feedback_messages(browser.contents))
    There is 1 error.
    The wiki name cannot exceed 100 characters.

The invalid value is escaped using HTML entities when displayed back to
the user.

    >>> browser.getControl(name='field.wiki').value = (
    ...     '<script>alert(1);</script>')
    >>> browser.getControl(name='field.wikiname').value = 'FooBar'
    >>> browser.getControl('Save Changes').click()
    >>> print browser.url
    http://launchpad.dev/%7Emark/+editwikinames
    >>> print "\n".join(get_feedback_messages(browser.contents))
    There is 1 error.
    "&lt;script&gt;alert(1);&lt;/script&gt;" is not a valid URI

Only http and https URLs are allowed for wikis.

    >>> browser.getControl(name='field.wiki').value = "javascript:void"
    >>> browser.getControl(name='field.wikiname').value = 'FooBar'
    >>> browser.getControl('Save Changes').click()
    >>> print browser.url
    http://launchpad.dev/%7Emark/+editwikinames
    >>> print "\n".join(get_feedback_messages(browser.contents))
    There is 1 error.
    The URI scheme "javascript" is not allowed. Only URIs with the following
    schemes may be used: http, https

Mark can remove any of his wiki names.

    >>> browser.getControl(name='field.wiki').value = ""
    >>> browser.getControl(name='field.wikiname').value = ''
    >>> browser.getControl('Remove', index=0).selected = True
    >>> browser.getControl('Save Changes').click()
    >>> print browser.url
    http://launchpad.dev/~mark
    >>> print "\n".join(get_feedback_messages(browser.contents))
    >>> browser.open('http://launchpad.dev/~mark/+editwikinames')
    >>> print_existing_wikiurls(browser.contents)
    https://wiki.ubuntu.com/MarkShuttleworth
