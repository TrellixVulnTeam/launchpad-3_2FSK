=== The SinglePopupWidget ===

There's a widget, SinglePopupWidget, for selecting a single value from a
huge vocabulary. It provides a simple text input line, and a popup
window, where you can search for valid values.

    >>> from canonical.widgets.popup import SinglePopupWidget

In order to show how it works, we need a field, which uses a huge
vocabulary. We also need to bind it to a context for things to work:

    >>> from canonical.launchpad.interfaces import (
    ...     ITeamReassignment, IPersonSet)
    >>> owner_field = ITeamReassignment['owner']
    >>> admins = getUtility(IPersonSet).getByName('admins')
    >>> owner_field = owner_field.bind(admins)

We also need a request before we can initialise the widget:

    >>> from zope.publisher.browser import TestRequest
    >>> popup_widget = SinglePopupWidget(
    ...     owner_field,  owner_field.vocabulary, TestRequest())
    >>> print popup_widget()
    <input type="text" name="field.owner" onkeypress="" value=""
           id="field.owner" size="20" />
    <BLANKLINE>
    (<a href="...@@popup-window?vocabulary=ValidTeamOwner...
    <BLANKLINE>
    <iframe style="display: none" id="popup_iframe_field.owner"...
    <BLANKLINE>

Now, since we didn't pass a value to the form, it has no input, and
getInputValue() fails:

    >>> popup_widget.hasInput()
    False
    >>> popup_widget.getInputValue()
    Traceback (most recent call last):
    ...
    MissingInputError: ('field.owner', u'Owner', None)

Let's supply a nonexistent value to the form:

    >>> form = {'field.owner': u'non-existant-value'}
    >>> popup_widget = SinglePopupWidget(
    ...     owner_field,  owner_field.vocabulary, TestRequest(form=form))

Now hasInput() returns that there is a input value, but getInputValue()
still fails:

    >>> popup_widget.hasInput()
    True
    >>> popup_widget.getInputValue()
    Traceback (most recent call last):
    ...
    ConversionError: ('Invalid value',
        token u'non-existant-value' not found in vocabulary)

If we supply a token that is in the vocabulary, everything works as
expected:

    >>> form = {'field.owner': u'shipit-admins'}
    >>> popup_widget = SinglePopupWidget(
    ...     owner_field,  owner_field.vocabulary, TestRequest(form=form))
    >>> popup_widget.hasInput()
    True
    >>> shipit_admins = popup_widget.getInputValue()
    >>> shipit_admins.displayname
    u'ShipIt Administrators'

If we submit a string that doesn't match an exact token, but the
vocabulary search returns a few matches, we don't have a valid input:

    >>> form = {'field.owner': u'shipit'}
    >>> popup_widget = SinglePopupWidget(
    ...     owner_field,  owner_field.vocabulary, TestRequest(form=form))
    >>> popup_widget.hasInput()
    True
    >>> shipit_admins = popup_widget.getInputValue()
    Traceback (most recent call last):
    ...
    ConversionError: ('Invalid value',
        token u'shipit' not found in vocabulary)

== Error handling ==

There are a few situations which we need to be careful about.

1. When somebody hits that page directly, without any form arguments:

    >>> from canonical.widgets.popup import SinglePopupView
    >>> from canonical.launchpad.webapp.publisher import rootObject
    >>> request = TestRequest(
    ...     SERVER_URL='http://127.0.0.1/@@popup-window', form={})
    >>> SinglePopupView(rootObject, request)
    Traceback (most recent call last):
    ...
    NotFound: ...

2. When someone tries using that page for a vocabulary which doesn't
implement IHugeVocabulary.

    >>> from canonical.widgets.popup import SinglePopupView
    >>> from canonical.launchpad.webapp.publisher import rootObject
    >>> from canonical.launchpad.vocabularies.dbobjects import (
    ...     DistributionVocabulary)
    >>> form = {
    ...     'vocabulary': 'Distribution', 'field':'field.distribution'}
    >>> request = TestRequest(
    ...     SERVER_URL='http://127.0.0.1/@@popup-window', form=form)
    >>> popup_view = SinglePopupView(rootObject, request)
    >>> popup_view.vocabulary()
    Traceback (most recent call last):
    ...
    UnexpectedFormData: Non-huge vocabulary Distribution

3. When someone specifies an unknown vocabulary name.

    >>> form = {
    ...     'vocabulary': 'FooBar', 'field':'field.distribution'}
    >>> request = TestRequest(
    ...     SERVER_URL='http://127.0.0.1/@@popup-window', form=form)
    >>> popup_view = SinglePopupView(rootObject, request)
    >>> popup_view.vocabulary()
    Traceback (most recent call last):
    ...
    UnexpectedFormData: Unknown vocabulary FooBar

4. When someone specifies an empty vocabulary name.

    >>> form = {
    ...     'vocabulary': '', 'field':'field.distribution'}
    >>> request = TestRequest(
    ...     SERVER_URL='http://127.0.0.1/@@popup-window', form=form)
    >>> popup_view = SinglePopupView(rootObject, request)
    >>> popup_view.vocabulary()
    Traceback (most recent call last):
    ...
    UnexpectedFormData: No vocabulary specified

Bullet-proof!

