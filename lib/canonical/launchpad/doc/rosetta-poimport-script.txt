=  PO import script =

    >>> from canonical.launchpad.database import POTemplate
    >>> from canonical.launchpad.interfaces import (
    ...     ILaunchpadCelebrities, IPersonSet, ITranslationImportQueue,
    ...     RosettaImportStatus)
    >>> from canonical.config import config
    >>> import datetime
    >>> import pytz
    >>> UTC = pytz.timezone('UTC')

Login as an admin to be able to do changes to the import queue.

    >>> login('carlos@canonical.com')

    >>> translation_import_queue = getUtility(ITranslationImportQueue)
    >>> import transaction

We don't care about a POTemplate we are working with, so just pick any.

    >>> potemplate = POTemplate.get(1)

Provide a POFile with Last-Translator set to a user not existing in
the sampledata.

    >>> print getUtility(IPersonSet).getByEmail('danilo@canonical.com')
    None

    >>> pofile = potemplate.newPOFile('sr')
    >>> pofile_content = r'''
    ... msgid ""
    ... msgstr ""
    ... "PO-Revision-Date: 2005-06-04 20:41+0100\n"
    ... "Last-Translator: Danilo Å egan <danilo@canonical.com>\n"
    ... "Content-Type: text/plain; charset=UTF-8\n"
    ... "X-Rosetta-Export-Date: %s\n"
    ...
    ... msgid "Foo %%s"
    ... msgstr "Bar"
    ... ''' % datetime.datetime.now(UTC).isoformat()

We clean the import queue.

    >>> for entry in translation_import_queue:
    ...     translation_import_queue.remove(entry)
    >>> translation_import_queue.entryCount()
    0

We also need the product to have privileges which allow suggestions.

    >>> from canonical.launchpad.interfaces import TranslationPermission
    >>> product = pofile.potemplate.productseries.product
    >>> product.translationpermission = TranslationPermission.STRUCTURED

We add a PO file to the import queue, approving it along the way.

    >>> cprov = getUtility(IPersonSet).getByName('cprov')
    >>> entry = translation_import_queue.addOrUpdateEntry(
    ...     pofile.path, pofile_content, False, cprov,
    ...     sourcepackagename=pofile.potemplate.sourcepackagename,
    ...     distroseries=pofile.potemplate.distroseries,
    ...     productseries=pofile.potemplate.productseries)
    >>> entry.pofile = pofile
    >>> entry.status = RosettaImportStatus.APPROVED
    >>> transaction.commit()
    >>> translation_import_queue.entryCount()
    1

Now we can try to run the import script, making sure that the DB user
it runs under has enough privileges to create a new account.

    >>> import os
    >>> import sys
    >>> import subprocess
    >>> script = os.path.join(config.root, "cronscripts",
    ...                       "rosetta-poimport.py")
    >>> process = subprocess.Popen([sys.executable, script],
    ...                            stdout=subprocess.PIPE,
    ...                            stderr=subprocess.PIPE,)
    >>> stdout, stderr = process.communicate()
    >>> process.returncode
    0
    >>> print stderr
    INFO    creating lockfile
    INFO    Importing: Serbian (sr) translation of evolution-2.2 in Evolution trunk
    INFO    Import requests completed.
    <BLANKLINE>

And we can see that there is now an Account for 'danilo@canonical.com'.

    >>> transaction.commit()
    >>> danilo = getUtility(IPersonSet).getByEmail('danilo@canonical.com')
    >>> danilo.displayname
    u'Danilo \u0160egan'

