
Subscribing to Specifications
=============================

Just for fun, let's subscribe to one of the specifications. We'll subscribe
to the spec about E4X.

First, let's make sure we can see the link called "Subscribe..."

  >>> browser.open("http://features.launchpad.dev/products/firefox/+spec/e4x")
  >>> subscribe_link = browser.getLink('Subscribe yourself')
  >>> subscribe_link is not None
  True

If I try to go to the subscription page I will be told to login.

  >>> subscribe_link.click()
  Traceback (most recent call last):
  ...
  Unauthorized...AnyP...

And let's make sure we can see the subscription page. We will log in as
Carlos.

  >>> browser.addHeader('Authorization', 'Basic carlos@canonical.com:test')
  >>> browser.open("http://features.launchpad.dev/products/firefox/+spec/e4x/+subscribe")

There should be a control to set whether or not participation in discussions
of this feature is essential. We will say we want to be essential to this
feature planning:

  >>> essential = browser.getControl('essential')
  >>> essential.selected
  False
  >>> essential.selected = True

Now, we'll POST the form. We should see a message that we have just
subscribed.

  >>> browser.getControl('Subscribe').click()
  >>> 'You have subscribed to this spec' in browser.contents
  True
  >>> 'star_on' in browser.contents
  True

Now the link should say "Modify subscription" in the actions menu.

  >>> submod_link = browser.getLink('Modify subscription')
  >>> submod_link is not None
  True

OK. Now, let's say we want to change the essential field. Let's follow the
link to modify the subscription. It should currently be checked.

  >>> submod_link.click()
  >>> essential = browser.getControl('essential')
  >>> essential.selected
  True

We will unset the essential flag and resubmit:

  >>> essential.selected = False
  >>> browser.getControl('Update').click()
  >>> 'Your subscription has been updated' in browser.contents
  True
  >>> 'star_off' in browser.contents
  True

We don't really want to be subscribed, so lets unsubscribe from that spec.
We load the subscription page, and now the button says "Unsubscribe".

  >>> browser.getLink('Modify subscription').click()
  >>> unsubit = browser.getControl(name='unsubscribe')
  >>> unsubit.value
  'Unsubscribe'
  >>> unsubit.click()
  >>> 'You have unsubscribed from this spec.' in browser.contents
  True
  >>> 'star_off' in browser.contents
  False
  >>> 'star_on' in browser.contents
  False


Now, we can

