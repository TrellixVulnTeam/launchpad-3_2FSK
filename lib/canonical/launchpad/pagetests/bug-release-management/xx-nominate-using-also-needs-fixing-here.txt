= Nominate using the "also needs fixing here" button =

If you visit a bug in a distroseries context to which the bug isn't
targeted to, you get a message and button to indicate the bug needs
fixing in this context. You can't get to such a page by following links
in the UI, but the user may end up there by hacking the URL (for example
by simply changing the bug id).

    >>> user_browser.open(
    ...  'http://launchpad.dev/ubuntu/grumpy/+source/evolution/+bug/10')
    >>> for message in find_tags_by_class(user_browser.contents, 'message'):
    ...     print extract_text(message)
    This bug isn't linked to evolution (Ubuntu Grumpy).  Would you like to
    report it here as well?

    >>> user_browser.getControl(
    ...     'Yes, report in evolution (Ubuntu Grumpy)') is not None
    True

If the button is clicked, the bug is nominated for the series.

    >>> user_browser.getControl(
    ...     'Yes, report in evolution (Ubuntu Grumpy)').click()
    >>> user_browser.url
    'http://bugs.launchpad.dev/ubuntu/grumpy/+source/evolution/+bug/10'
    >>> for message in find_tags_by_class(user_browser.contents, 'message'):
    ...     print extract_text(message)
    This bug has been nominated to be fixed in Ubuntu Grumpy.

    >>> user_browser.getControl('Yes, report in evolution (Ubuntu Grumpy)')
    Traceback (most recent call last):
    ...
    LookupError: label 'Yes, report in evolution (Ubuntu Grumpy)'

It works the same way for product series contexts.

    >>> user_browser.open(
    ...  'http://launchpad.dev/firefox/1.0/+bug/10')
    >>> for message in find_tags_by_class(user_browser.contents, 'message'):
    ...     print extract_text(message)
    This bug isn't linked to Mozilla Firefox 1.0. Would you like to report it
    here as well?
    >>> user_browser.getControl(
    ...     'Yes, report in Mozilla Firefox 1.0') is not None
    True

    >>> user_browser.getControl(
    ...     'Yes, report in Mozilla Firefox 1.0').click()
    >>> user_browser.url
    'http://bugs.launchpad.dev/firefox/1.0/+bug/10'
    >>> for message in find_tags_by_class(user_browser.contents, 'message'):
    ...     print extract_text(message)
    This bug has been nominated to be fixed in Mozilla Firefox 1.0.

    >>> user_browser.getControl('Yes, report in evolution (Ubuntu Grumpy)')
    Traceback (most recent call last):
    ...
    LookupError: label 'Yes, report in evolution (Ubuntu Grumpy)'
