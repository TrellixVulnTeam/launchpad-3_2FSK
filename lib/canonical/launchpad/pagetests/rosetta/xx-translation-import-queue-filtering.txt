With this test we are going to test the entries filtering on the translation
import queue form.

Let's add 100 files to the queue so we have enough entries to play with.

  >>> import canonical.launchpad
  >>> import os.path
  >>> test_file_name = os.path.join(
  ...     os.path.dirname(canonical.launchpad.__file__),
  ...     'pagetests/rosetta/xx-translation-import-queue-filtering.tar.gz')
  >>> tarball = open(test_file_name)

  >>> browser.addHeader('Authorization', 'Basic carlos@canonical.com:test')
  >>> browser.open('http://launchpad.dev/evolution/trunk/+translations-upload')
  >>> file_ctrl = browser.getControl('File:')
  >>> file_ctrl.add_file(
  ...     tarball, 'application/x-gzip', 'foo.tar.gz')
  >>> browser.getControl('Request Upload').click()
  >>> for tag in find_tags_by_class(browser.contents, 'message'):
  ...     print tag
  <div...Thank you for your upload. 100 files from the tarball will be reviewed...

Check that the import queue has the needed entries to do filtering and that
we have all the entries we just imported plus the two entries already included
in sample data.

  >>> browser.open('http://launchpad.dev/translations/imports')
  >>> browser.url
  'http://launchpad.dev/translations/imports'
  >>> browser.getLink('Next')
  <Link text='Next' url='http://launchpad.dev/translations/imports/+index?start=5&batch=5'>
  >>> print browser.contents
  <!DOCTYPE...
  ...Choose which status to show...
  ...All...
  ...Approved...
  ...Imported...
  ...Deleted...
  ...Failed...
  ...Needs Review...
  ...Blocked...
  ...Choose which kind of files to show...
  ...Files of any type...
  ...Only .po files...
  ...Only .pot files...
  ...1...5...of...102 results...

The entries that need review, as we can see, initially, are all entries minus
the two already included in sample data.

  >>> browser.open('http://launchpad.dev/translations/imports?status=NEEDS_REVIEW&type=all')
  >>> browser.url
  'http://launchpad.dev/translations/imports?status=NEEDS_REVIEW&type=all'
  >>> browser.getControl(name='status').value
  ['NEEDS_REVIEW']
  >>> browser.getControl(name='type').value
  ['all']
  >>> print browser.contents
  <!DOCTYPE...
  ...1...5...of...100 results...

Let's select only the .po files, we get now only 96 entries.

  >>> browser.open('http://launchpad.dev/translations/imports?status=all&type=po')
  >>> browser.url
  'http://launchpad.dev/translations/imports?status=all&type=po'
  >>> browser.getControl(name='status').value
  ['all']
  >>> browser.getControl(name='type').value
  ['po']
  >>> print browser.contents
  <!DOCTYPE...
  ...1...5...of...96 results...

And now, all entries that are .pot files, we should get just 6.

  >>> browser.open('http://launchpad.dev/translations/imports?status=all&type=pot')
  >>> browser.url
  'http://launchpad.dev/translations/imports?status=all&type=pot'
  >>> browser.getControl(name='status').value
  ['all']
  >>> browser.getControl(name='type').value
  ['pot']
  >>> print browser.contents
  <!DOCTYPE...
  ...1...5...of...6 results...

Now, we want the approved entries.

  >>> browser.open('http://launchpad.dev/translations/imports?status=APPROVED&type=all')
  >>> browser.url
  'http://launchpad.dev/translations/imports?status=APPROVED&type=all'
  >>> browser.getControl(name='status').value
  ['APPROVED']
  >>> browser.getControl(name='type').value
  ['all']
  >>> print browser.contents
  <!DOCTYPE...
  ...There are no entries that match this filtering...

Let's change the status of the third entry on the queue to be blocked.

  >>> browser.open('http://launchpad.dev/translations/imports')
  >>> browser.url
  'http://launchpad.dev/translations/imports'
  >>> browser.getControl(name='status-3').value
  ['NEEDS_REVIEW']
  >>> browser.getControl(name='status-3').value = ['BLOCKED']
  >>> browser.getControl(name='handle_queue').click()
  >>> browser.url
  'http://launchpad.dev/translations/imports/+index'

We can see now an entry blocked.

  >>> browser.open('http://launchpad.dev/translations/imports?status=BLOCKED&type=all')
  >>> browser.url
  'http://launchpad.dev/translations/imports?status=BLOCKED&type=all'
  >>> browser.getControl(name='status-3').value
  ['BLOCKED']
  >>> print browser.contents
  <!DOCTYPE...
  ...1...1...of...1 result...

And the entries that need review are only 99

  >>> browser.open('http://launchpad.dev/translations/imports?status=NEEDS_REVIEW&type=all')
  >>> browser.url
  'http://launchpad.dev/translations/imports?status=NEEDS_REVIEW&type=all'
  >>> browser.getControl(name='status').value
  ['NEEDS_REVIEW']
  >>> browser.getControl(name='type').value
  ['all']
  >>> print browser.contents
  <!DOCTYPE...
  ...1...5...of...99 results...

Let's delete the fourth entry.

  >>> browser.open('http://launchpad.dev/translations/imports')
  >>> browser.url
  'http://launchpad.dev/translations/imports'
  >>> browser.getControl(name='status-4').value
  ['NEEDS_REVIEW']
  >>> browser.getControl(name='status-4').value = ['DELETED']
  >>> browser.getControl(name='handle_queue').click()
  >>> browser.url
  'http://launchpad.dev/translations/imports/+index'

And see that we have one deleted.

  >>> browser.open('http://launchpad.dev/translations/imports?status=DELETED&type=all')
  >>> browser.url
  'http://launchpad.dev/translations/imports?status=DELETED&type=all'
  >>> browser.getControl(name='status-4').value
  ['DELETED']
  >>> print browser.contents
  <!DOCTYPE...
  ...1...1...of...1 result...

And now, we only have 98 entries that need review.

  >>> browser.open('http://launchpad.dev/translations/imports?status=NEEDS_REVIEW&type=all')
  >>> browser.url
  'http://launchpad.dev/translations/imports?status=NEEDS_REVIEW&type=all'
  >>> browser.getControl(name='status').value
  ['NEEDS_REVIEW']
  >>> browser.getControl(name='type').value
  ['all']
  >>> print browser.contents
  <!DOCTYPE...
  ...1...5...of...98 results...

Let's check the products/distros filter.

We get the list of pending imports for distributions.

  >>> browser.open('http://launchpad.dev/translations/imports?target=distros')
  >>> browser.url
  'http://launchpad.dev/translations/imports?target=distros'
  >>> browser.getControl(name='target').value
  ['distros']

It's empty because we only have entries for products.

  >>> print browser.contents
  <!DOCTYPE...
  ...There are no entries that match this filtering...

And for products.

  >>> browser.open('http://launchpad.dev/translations/imports?target=products')
  >>> browser.url
  'http://launchpad.dev/translations/imports?target=products'
  >>> browser.getControl(name='target').value
  ['products']
  >>> print browser.contents
  <!DOCTYPE...
  ...1...5...of...102 results...
