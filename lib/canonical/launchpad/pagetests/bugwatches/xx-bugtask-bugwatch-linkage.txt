If a bugtask is linked to a bug watch, the status and so on is not
editable, since it's pulled from the remote bug. Let's take a look at
the Debian task on bug #1.

    >>> browser.addHeader('Authorization', 'Basic test@canonical.com:test')
    >>> browser.open(
    ...     'http://localhost/distros/debian/+source/mozilla-firefox/'
    ...     '+bug/1/+editstatus')

There's currently a bug watch linked to the task.

    >>> bugwatch_control = browser.getControl(
    ...     name='debian_mozilla-firefox.bugwatch')
    >>> bugwatch_control.type
    'radio'
    >>> bugwatch_control.displayValue
    ['...Debian...#304014...']

This means that we only display the status, it's not possible to edit it:

    >>> print browser.contents
    <!DOCTYPE...

    <label for="debian_mozilla-firefox.status">Status</label>
    ...
    <td><span class="statusConfirmed">Confirmed</span></td>
    ...

    >>> status_control = browser.getControl(name='debian_mozilla-firefox.status')
    Traceback (most recent call last):
    ...
    LookupError: name 'debian_mozilla-firefox.status'

Of course we can't edit the importance or assignee either.

    >>> browser.getControl(name='debian_mozilla-firefox.importance')
    Traceback (most recent call last):
    ...
    LookupError: name 'debian_mozilla-firefox.importance'

    >>> browser.getControl(name='debian_mozilla-firefox.assignee')
    Traceback (most recent call last):
    ...
    LookupError: name 'debian_mozilla-firefox.assignee'

If we remove the bug watch, we'll be able to edit the status, which has
been reset to Unconfirmed.

    >>> bugwatch_control.displayValue = []
    >>> submit_button = browser.getControl(name='FORM_SUBMIT')
    >>> submit_button.click()

    >>> browser.open(
    ...     'http://localhost/distros/debian/+source/mozilla-firefox/'
    ...     '+bug/1/+editstatus')
    >>> status_control = browser.getControl(name='debian_mozilla-firefox.status')
    >>> status_control.displayValue
    ['Unconfirmed']

    >>> browser.getControl(name='debian_mozilla-firefox.assignee') is not None
    True

Let's try to actually edit the status to see that it works:

    >>> status_control.displayValue = ['Rejected']
    >>> submit_button = browser.getControl(name='FORM_SUBMIT')
    >>> submit_button.click()

    >>> browser.open(
    ...     'http://localhost/distros/debian/+source/mozilla-firefox/'
    ...     '+bug/1/+editstatus')
    >>> status_control = browser.getControl(name='debian_mozilla-firefox.status')
    >>> status_control.displayValue
    ['Rejected']

From the edit page we can also create a new bug watch:

    >>> browser.open(
    ...     'http://localhost/distros/debian/+source/mozilla-firefox/'
    ...     '+bug/1/+editstatus')
    >>> bugwatch_control = browser.getControl(
    ...     name='debian_mozilla-firefox.bugwatch')
    >>> bugtracker_control = browser.getControl(
    ...     name='debian_mozilla-firefox.bugtracker')
    >>> remotebug_control = browser.getControl(
    ...     name='debian_mozilla-firefox.remotebug')
    >>> bugwatch_control.value = ['NEW']
    >>> bugtracker_control.displayValue
    ['Debian Bug tracker']
    >>> remotebug_control.value = '1'

    >>> submit_button = browser.getControl(name='FORM_SUBMIT')
    >>> submit_button.click()
    >>> browser.url
    'http://localhost/distros/debian/+source/mozilla-firefox/+bug/1'

We can see that the Debian task is linked to the newly created bug
watch.

    >>> from BeautifulSoup import BeautifulSoup
    >>> soup = BeautifulSoup(browser.contents)
    >>> debian_tr = soup.first('tr', {'class': 'highlight'})
    >>> for td_tag in debian_tr('td'):
    ...     print td_tag
    <td...> <a...>mozilla-firefox (Debian)</a> </td>
    ...
    <td...> <a...> debbugs #1 </a> </td>
