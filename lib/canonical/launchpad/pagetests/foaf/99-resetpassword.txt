  David Allouche forgot his password and he's going to use the forgotten
  password form to reset it.

  Workaround while https://launchpad.net/products/launchpad/+bug/39016 is not
  fixed.
  >>> from canonical.launchpad.mail import stub
  >>> stub.test_emails[:] = []

  Go to the 'Forgotten Password' page.

  >>> print http(r"""
  ... GET /+forgottenpassword HTTP/1.1
  ... Referer: http://localhost:9000/+login
  ... """)
  HTTP/1.1 200 Ok
  Content-Length: ...
  Content-Type: text/html;charset=utf-8
  ...
  ...<h1>Need a new Launchpad password?</h1>...
  ...


  Type the email address registered in Launchpad and submit the form.

  >>> print http(r"""
  ... POST /+forgottenpassword HTTP/1.1
  ... Content-Length: ...
  ... Content-Type: application/x-www-form-urlencoded
  ... 
  ... email=david.allouche%40canonical.com""")
  HTTP/1.1 200 Ok
  Content-Length: ...
  Content-Type: text/html;charset=utf-8
  ...
  ...<p>We have sent you an email with instructions to reset your
  password.</p>...
  ...


  Get the token we'll have to use to finish the registration process.

  >>> import email, re
  >>> from_addr, to_addrs, raw_msg = stub.test_emails.pop()
  >>> assert not stub.test_emails
  >>> msg = email.message_from_string(raw_msg)
  >>> body = msg.get_payload()
  >>> link = re.findall(r'http.*/token/.*', body)[0]
  >>> token = re.sub(r'.*token/', '', link)
  >>> base_path = '/token/%s' % token

  Check if the email was sent to the right address.

  >>> to_addrs
  ['david.allouche@canonical.com']


  Go to the link sent by email.

  >>> print http(r"""
  ... GET %s HTTP/1.1
  ... """ % base_path)
  HTTP/1.1 303 See Other
  ...
  Location: http://localhost:9000/token/.../+resetpassword
  <BLANKLINE>


  >>> path = base_path + "/+resetpassword"
  >>> print http(r"""
  ... GET %s HTTP/1.1
  ... """ % path)
  HTTP/1.1 200 Ok
  Content-Length: ...
  Content-Type: text/html;charset=utf-8
  ...
  ...Reset password...
  ...


  Type the new password and submit. This time he doesn't want to be
  automatically logged in, so he'll manually login later

  >>> str = r"""POST %s HTTP/1.1""" % path
  >>> print http(str + r"""
  ... Content-Type: multipart/form-data; boundary=---------------------------16421337711001809745232866919
  ... -----------------------------16421337711001809745232866919
  ... Content-Disposition: form-data; name="field.email"
  ... 
  ... david.allouche@canonical.com
  ... -----------------------------16421337711001809745232866919
  ... Content-Disposition: form-data; name="field.password"
  ... 
  ... test2
  ... -----------------------------16421337711001809745232866919
  ... Content-Disposition: form-data; name="field.password_dupe"
  ... 
  ... test2
  ... -----------------------------16421337711001809745232866919
  ... Content-Disposition: form-data; name="FORM_SUBMIT"
  ... 
  ... Continue
  ... -----------------------------16421337711001809745232866919--
  ... """)
  HTTP/1.1 303 See Other
  ...
  Location: http://localhost:9000/people/ddaa
  ...


  Login again, with the new password, to make sure everything went fine.

  >>> print http(r"""
  ... POST /+login HTTP/1.1
  ... Content-Length: ...
  ... Content-Type: application/x-www-form-urlencoded
  ... Cookie: launchpad=8omXOA885AKDww7rxpea1flZxNonfeSvL8RzI.tO.bQkr26GP18dhM
  ... 
  ... loginpage_email=david.allouche%40canonical.com&loginpage_password=test2&loginpage_submit_login=Log+In""")
  HTTP/1.1 303 See Other
  Content-Length: ...
  Content-Type: text/html;charset=utf-8
  ...
  ...Logged in as...
  ...foo...
  ...


  David Allouche forgot his password (again!) and he's going to use the 
  forgotten password form to reset it. The only difference is that now he
  wants to be automatically logged in after resetting his password.

  Go to the 'Forgotten Password' page.

  >>> print http(r"""
  ... GET /+forgottenpassword HTTP/1.1
  ... Referer: http://localhost:9000/+login
  ... """)
  HTTP/1.1 200 Ok
  Content-Length: ...
  Content-Type: text/html;charset=utf-8
  ...
  ...<h1>Need a new Launchpad password?</h1>...
  ...


  Type the email address registered in Launchpad and submit the form.

  >>> print http(r"""
  ... POST /+forgottenpassword HTTP/1.1
  ... Content-Length: ...
  ... Content-Type: application/x-www-form-urlencoded
  ... 
  ... email=david.allouche%40canonical.com""")
  HTTP/1.1 200 Ok
  Content-Length: ...
  Content-Type: text/html;charset=utf-8
  ...
  ...<p>We have sent you an email with instructions to reset your
  password.</p>...
  ...


  Get the token we'll have to use to finish the registration process.

  >>> import email, re
  >>> from_addr, to_addrs, raw_msg = stub.test_emails.pop()
  >>> assert not stub.test_emails
  >>> msg = email.message_from_string(raw_msg)
  >>> body = msg.get_payload()
  >>> link = re.findall(r'http.*/token/.*', body)[0]
  >>> token = re.sub(r'.*token/', '', link)
  >>> base_path = '/token/%s' % token

  Check if the email was sent to the right address.

  >>> to_addrs
  ['david.allouche@canonical.com']


  Go to the link sent by email.

  >>> print http(r"""
  ... GET %s HTTP/1.1
  ... """ % base_path)
  HTTP/1.1 303 See Other
  ...
  Location: http://localhost:9000/token/.../+resetpassword
  <BLANKLINE>


If he tries to validate an email with this token, he'll be redirected back to
the default view, which is responsible for deciding where to send him.

  >>> wrong_path = base_path + "/+validateemail"
  >>> print http(r"""
  ... GET %s HTTP/1.1
  ... """ % wrong_path)
  HTTP/1.1 303 See Other
  ...
  Location: http://localhost:9000/token/...
  <BLANKLINE>


Now he goes to the right page...

  >>> path = base_path + "/+resetpassword"
  >>> print http(r"""
  ... GET %s HTTP/1.1
  ... """ % path)
  HTTP/1.1 200 Ok
  Content-Length: ...
  Content-Type: text/html;charset=utf-8
  ...
  ...Reset password...
  ...


...types the new password and submit. This time he wants to be automatically
logged in. Inadvertently he uses a new password with illegal characters.

  >>> str = r"""POST %s HTTP/1.1""" % path
  >>> print http(str + r"""
  ... Content-Type: multipart/form-data; boundary=---------------------------16421337711001809745232866919
  ... -----------------------------16421337711001809745232866919
  ... Content-Disposition: form-data; name="field.email"
  ... 
  ... david.allouche@canonical.com
  ... -----------------------------16421337711001809745232866919
  ... Content-Disposition: form-data; name="field.password"
  ... 
  ... é
  ... -----------------------------16421337711001809745232866919
  ... Content-Disposition: form-data; name="field.password_dupe"
  ... 
  ... é
  ... -----------------------------16421337711001809745232866919
  ... Content-Disposition: form-data; name="FORM_SUBMIT"
  ... 
  ... Continue
  ... -----------------------------16421337711001809745232866919--
  ... """)
  HTTP/1.1 200 Ok
  ...
  ...The password provided contains non-ASCII characters...
  ...


  And now he does it right with valid ascii characters.

  >>> str = r"""POST %s HTTP/1.1""" % path
  >>> print http(str + r"""
  ... Content-Type: multipart/form-data; boundary=---------------------------16421337711001809745232866919
  ... -----------------------------16421337711001809745232866919
  ... Content-Disposition: form-data; name="field.email"
  ... 
  ... david.allouche@canonical.com
  ... -----------------------------16421337711001809745232866919
  ... Content-Disposition: form-data; name="field.password"
  ... 
  ... test3
  ... -----------------------------16421337711001809745232866919
  ... Content-Disposition: form-data; name="field.password_dupe"
  ... 
  ... test3
  ... -----------------------------16421337711001809745232866919
  ... Content-Disposition: form-data; name="FORM_SUBMIT"
  ... 
  ... Continue
  ... -----------------------------16421337711001809745232866919--
  ... """)
  HTTP/1.1 303 See Other
  ...
  Location: http://localhost:9000/people/ddaa
  ...


Now that the token is consumed, he's not able to use it again.

  >>> print http(r"""
  ... GET %s HTTP/1.1
  ... """ % path)
  HTTP/1.1 303 See Other
  ...
  Location: http://localhost:9000/token/...
  <BLANKLINE>

  >>> print http(r"""
  ... GET %s HTTP/1.1
  ... """ % base_path)
  HTTP/1.1 200 Ok
  ...
  ...You reached this page probably because you followed a link received by...
  ...email. That link was sent to confirm you have access to the email...
  ...address it was sent to, but this confirmation was already concluded, so...
  ...you don't need to do anything else...
  ...


Test that we reject requests for resetting teams' passwords.

  >>> print http(r"""
  ... POST /+forgottenpassword HTTP/1.1
  ... Content-Length: ...
  ... Content-Type: application/x-www-form-urlencoded
  ... 
  ... email=support@ubuntu.com""")
  HTTP/1.1 200 Ok
  ...
      <div class="error">The email address <strong>support@ubuntu.com</strong> belongs to a team, and teams cannot log in to Launchpad.</div>
  ...


