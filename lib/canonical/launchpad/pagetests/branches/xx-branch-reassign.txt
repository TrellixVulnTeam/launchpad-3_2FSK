= Reassigning a branch =

The owner of a branch can be changed in the $branch/+reassign form.

== Successful reassignation ==

Impressed by his notorious fluency in foreign languages, we want to transfer
the GNOME Terminal Klingon support branch to SABDFL.

    >>> user_browser.open('http://launchpad.dev/~name12/gnome-terminal/klingon')
    >>> user_browser.getLink('Change Registrant').click()
    >>> user_browser.url
    'http://code.launchpad.dev/~name12/gnome-terminal/klingon/+reassign'
    >>> user_browser.getControl(name='field.owner').value = 'sabdfl'
    >>> user_browser.getControl('Change Owner').click()
    >>> user_browser.url
    'http://code.launchpad.dev/~sabdfl/gnome-terminal/klingon'

However, arguing that common Klingon habits are incompatible with the Ubuntu
Code of Conduct, and that Klingon rocket technology is no match to the Russian,
SABDFL declines and asks an administrator to reassign the branch back.

Incidentally that restores the test data to its initial state.

    >>> admin_browser.open('http://launchpad.dev/~sabdfl/gnome-terminal/klingon/+reassign')
    >>> admin_browser.getControl(name='field.owner').value = 'name12'
    >>> admin_browser.getControl('Change Owner').click()
    >>> admin_browser.url
    'http://code.launchpad.dev/~name12/gnome-terminal/klingon'


NOTE: Transferring to a team we are creating is a stock functionality of
ObjectReassignmentView and is not tested here. On 2006-08-30 this is is tested
in lib/canonical/launchpad/pagetests/standalone/xx-reassign-distrorelease.txt;
look for "Now we reassign it to a newly create team: ubuntu2".

== Branch name conflict ==

Since the branch owner is part of the unique name of a branch, changing the
owner can cause a conflict.

We will setup a conflict with ~launchpad/gnome-terminal/launchpad. First, we
need to rename one of the user branches to use the "launchpad" name, and then
we will try to reassign to the "launchpad" team.

    >>> user_browser.open('http://code.launchpad.dev/~name12/gnome-terminal/main/+edit')
    >>> user_browser.getControl('Name').value = 'launchpad'
    >>> user_browser.getControl('Change Branch').click()
    >>> user_browser.url
    'http://code.launchpad.dev/~name12/gnome-terminal/launchpad'

Now, try to reassign that branch to "launchpad", that should cause an error.

    >>> user_browser.getLink('Change Registrant').click()
    >>> user_browser.url
    'http://code.launchpad.dev/~name12/gnome-terminal/launchpad/+reassign'
    >>> user_browser.getControl(name='field.owner').value = 'launchpad'
    >>> user_browser.getControl('Change Owner').click()
    >>> user_browser.url
    'http://code.launchpad.dev/~name12/gnome-terminal/launchpad/+reassign'

That should have displayed an error message, with a link to the conflicting
branch and a link to edit the details of this branch.

XXX: Ideally, the +reassign form would have a name field to allow resolving the
name conflict directly, but it is to difficult to do now because
ObjectReassignmentView uses a custom form. -- David Allouche 2005-08-17

XXX: Less ideally, the error message should include hyperlinks to the conflict
branch and the +edit form of the context branch, but ObjectReassignmentView
will not let us have even that. -- David Allouche 2005-08-17

    >>> from BeautifulSoup import BeautifulSoup
    >>> soup = BeautifulSoup(user_browser.contents)
    >>> for p_tag in soup('p', 'error message'):
    ...     print p_tag.renderContents()
    Branch name conflict. ... try changing its registrant again.

Let's change back the branch to its original name, so other tests will have a
clean sample data set.

    >>> user_browser.open('http://code.launchpad.dev/~name12/gnome-terminal/launchpad/+edit')
    >>> user_browser.getControl('Name').value = 'main'
    >>> user_browser.getControl('Change Branch').click()
    >>> user_browser.url
    'http://code.launchpad.dev/~name12/gnome-terminal/main'
