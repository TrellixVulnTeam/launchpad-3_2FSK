= Distribution Source Packages =

Source packages can be obtained from the context of a distribution.

    >>> debian = webservice.get('/debian').jsonBody()

    >>> mozilla_firefox = webservice.named_get(
    ...     debian['self_link'], 'getSourcePackage',
    ...     name='mozilla-firefox').jsonBody()

    >>> print pretty(mozilla_firefox)
    {u'bug_reporting_guidelines': None,
     u'display_name': u'mozilla-firefox in debian',
     u'distribution_link': u'http://.../debian',
     u'http_etag': u'...',
     u'name': u'mozilla-firefox',
     u'official_bug_tags': [],
     u'resource_type_link': u'http://.../#distribution_source_package',
     u'self_link': u'http://.../debian/+source/mozilla-firefox',
     u'title': u'\u201cmozilla-firefox\u201d package in Debian',
     u'upstream_product_link': None}

You can obtain a collection of bug tasks associated with the source
package using the "getBugTasks" method.

    >>> bug_task_collection = webservice.named_get(
    ...     mozilla_firefox['self_link'], 'getBugTasks').jsonBody()

    >>> from operator import itemgetter
    >>> def print_bug_tasks(bug_tasks):
    ...     bug_tasks = sorted(bug_tasks, key=itemgetter('self_link'))
    ...     for index, bug_task in enumerate(bug_tasks):
    ...         print '%d. %s' % (index, bug_task['title'])
    ...         print '   %s, %s, <%s>' % (
    ...             bug_task['status'], bug_task['importance'],
    ...             bug_task['bug_link'])
    ...         print '   <%s>' % (bug_task['self_link'],)

    >>> print_bug_tasks(bug_task_collection['entries'])
    0. Bug #1 in mozilla-firefox (Debian): "Firefox does not support SVG"
       Confirmed, Low, <http://api.launchpad.dev/beta/bugs/1>
       <http://api.launchpad.dev/beta/debian/+source/mozilla-firefox/+bug/1>
    1. Bug #2 in mozilla-firefox (Debian): "Blackhole Trash folder"
       Confirmed, Low, <http://api.launchpad.dev/beta/bugs/2>
       <http://api.launchpad.dev/beta/debian/+source/mozilla-firefox/+bug/2>
    2. Bug #3 in mozilla-firefox (Debian): "Bug Title Test"
       New, Unknown, <http://api.launchpad.dev/beta/bugs/3>
       <http://api.launchpad.dev/beta/debian/+source/mozilla-firefox/+bug/3>
    3. Bug #8 in mozilla-firefox (Debian): "Printing doesn't work"
       Fix Released, Medium, <http://api.launchpad.dev/beta/bugs/8>
       <http://api.launchpad.dev/beta/debian/+source/mozilla-firefox/+bug/8>

A number can be passed to limit the number of bug tasks returned:

    >>> bug_task_collection = webservice.named_get(
    ...     mozilla_firefox['self_link'],
    ...     'getBugTasks', limit=1).jsonBody()

    >>> print_bug_tasks(bug_task_collection['entries'])
    0. Bug #8 in mozilla-firefox (Debian): "Printing doesn't work"
       Fix Released, Medium, <http://api.launchpad.dev/beta/bugs/8>
       <http://api.launchpad.dev/beta/debian/+source/mozilla-firefox/+bug/8>

It's also possible to search for tasks with the "searchTasks" method:

    >>> bug_task_collection = webservice.named_get(
    ...     mozilla_firefox['self_link'],
    ...     'searchTasks', status='New').jsonBody()

    >>> print_bug_tasks(bug_task_collection['entries'])
    0. Bug #3 in mozilla-firefox (Debian): "Bug Title Test"
       New, Unknown, <http://api.launchpad.dev/beta/bugs/3>
       <http://api.launchpad.dev/beta/debian/+source/mozilla-firefox/+bug/3>

If the package is linked to an upstream product in Launchpad you can
retrieve that product using the upstream_product_link of the source
package.

    >>> ubuntu = webservice.get('/ubuntu').jsonBody()
    >>> ubuntu_firefox = webservice.named_get(
    ...     ubuntu['self_link'], 'getSourcePackage',
    ...     name='mozilla-firefox').jsonBody()

    >>> upstream_product = webservice.get(
    ...     ubuntu_firefox['upstream_product_link']).jsonBody()

    >>> print pretty(upstream_product)
    {...
     u'display_name': u'Mozilla Firefox'...
     u'self_link': u'http://.../firefox'...}

If the package isn't linked to an upstream product its
upstream_product_link will be None.

    >>> print mozilla_firefox['upstream_product_link']
    None
