Distribution Search page
========================

In the 'Bugs' facet of a distribution we can find a list of
bugs reported in that distribution and a simple and advanced search forms.

    >>> from canonical.launchpad.interfaces import IDistributionSet
    >>> debian = getUtility(IDistributionSet).getByName('debian')

A helper function to make it easier to construct a view

    >>> from zope.component import getView
    >>> from canonical.launchpad.webapp.servers import LaunchpadTestRequest
    >>> def create_view(context, name, form=None):
    ...     view = getView(context, name, LaunchpadTestRequest(form=form))
    ...     view.initialize()
    ...     return view

The simple search form returns only open bugtasks.

    >>> form_values = {
    ...     'search': 'Search',
    ...     'field.searchtext': '',
    ...     'field.orderby': '-priority,-severity'}

    >>> distro_search_listingview = create_view(
    ...     debian, "+bugs", form_values)

    >>> open_bugtasks = list(distro_search_listingview.search().batch)
    >>> [(bugtask.bug.id, bugtask.status.name) for bugtask in open_bugtasks]
    [(1, 'CONFIRMED'), (2, 'CONFIRMED'), (3, 'UNCONFIRMED')]

And the advanced form allows us to query for specific bug statuses.

    >>> form_values = {
    ...     'search': 'Search bugs in Debian',
    ...     'advanced': 1,
    ...     'field.status': 'Fix Released', 
    ...     'field.searchtext': '',
    ...     'field.orderby': '-priority,-severity'}

    >>> fix_released_bugtasks = create_view(debian, '+bugs', form_values)
    >>> fix_released_bugtasks = list(fix_released_bugtasks.search().batch)
    >>> [(bugtask.bug.id, bugtask.status.name) 
    ...     for bugtask in fix_released_bugtasks]
    [(8, 'FIXRELEASED')]


Distribution Release search page
================================

    >>> woody = debian.getRelease('woody')

The simple search form returns only open bugtasks.

    >>> form_values = {
    ...     'search': 'Search',
    ...     'field.searchtext': '',
    ...     'field.orderby': '-priority,-severity'}

    >>> distrorelease_search_listingview = create_view(
    ...     woody, "+bugs", form_values)

    >>> open_bugtasks = list(distrorelease_search_listingview.search().batch)
    >>> [(bugtask.bug.id, bugtask.status.name) for bugtask in open_bugtasks]
    [(3, 'UNCONFIRMED'), (2, 'UNCONFIRMED')]

And now we'll change the status of one of the bugtasks, but first we need to
be logged in.
    >>> from canonical.launchpad.ftests import login

    >>> login("test@canonical.com")

    >>> from canonical.lp.dbschema import BugTaskStatus 
    >>> open_bugtasks[0].status = BugTaskStatus.REJECTED 

And the advanced form allows us to query for specific bug statuses.

    >>> form_values = {
    ...     'search': 'Search bugs in Woody',
    ...     'advanced': 1,
    ...     'field.status': 'Rejected', 
    ...     'field.searchtext': '',
    ...     'field.orderby': '-priority,-severity'}

    >>> rejected_bugtasks = create_view(woody, '+bugs', form_values)
# XXX: matsubara 2006-03-21: I'm leaving this tests commented out as per
# Kiko's request, he'll take a look and fix the weird bug that is causing this
# test to fail.
#    >>> rejected_bugtasks = list(rejected_bugtasks.search().batch)
#    >>> [(bugtask.bug.id, bugtask.status.name) 
#    ...     for bugtask in rejected_bugtasks]
#    [(3, 'REJECTED')]
