=== Concurrent Deletion of Packaging ===

When two browsers are used to concurrently delete the same packaging
association, only one of them can succeed. The other one must not oops,
but should display a different informational message.

The No Privilege User may open the same page in two browser tabs.

    >>> first_browser = setupBrowser(auth='Basic no-priv@canonical.com:test')
    >>> first_browser.open('http://launchpad.dev/ubuntu/+source/alsa-utils')

    >>> second_browser = setupBrowser(auth='Basic no-priv@canonical.com:test')
    >>> second_browser.open('http://launchpad.dev/ubuntu/+source/alsa-utils')

Then the user click the "Delete Link" button in the first tab. The
deletion succeeds and the usual informational message is displayed.

    >>> form = first_browser.getForm("delete_warty_alsa-utils_trunk")
    >>> form.getControl("Delete Link").click()
    >>> content = first_browser.contents
    >>> for tag in find_tags_by_class(content, 'informational'):
    ...     print extract_text(tag)
    Removed upstream association between alsa-utils trunk and Warty.

A few minutes later, the user sees the same packaging association in the
second tab, and clicks the "Delete Link" button again.

The packaging object has been deleted already, so this action cannot
succeed. The user intent is respected: the packaging no longer exists.

XXX: We would like to display an informational message and no error
message, but it would be too much trouble for a corner case like this.
So we resort to just displaying a helpful error message.
-- David Allouche 2007-12-07

    >>> form = second_browser.getForm("delete_warty_alsa-utils_trunk")
    >>> form.getControl("Delete Link").click()
    >>> content = second_browser.contents
    >>> for tag in find_tags_by_class(content, 'informational'):
    ...     print extract_text(tag)
    >>> for tag in find_tags_by_class(content, 'error'):
    ...     print extract_text(tag)
    There is 1 error.
    This upstream association was deleted already.
