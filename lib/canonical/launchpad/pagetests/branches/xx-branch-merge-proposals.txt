= Branch Merge Proposals =

Branch merge proposals are where you show the intent of merging
the code from one branch into another.

Any logged in user can register a merge proposal.  Registering
a merge proposal is done from the source branch, and the link
is `Register merge proposal`.


== Registering a merge proposal ==

Users who are not logged on do not see the link to register.

    >>> anon_browser.open(
    ...     'http://code.launchpad.dev/~name12/gnome-terminal/klingon')
    >>> anon_browser.getLink('Register merge proposal')
    Traceback (most recent call last):
    ...
    LinkNotFoundError

Logged in users can.

    >>> nopriv_browser = setupBrowser(auth="Basic no-priv@canonical.com:test")
    >>> nopriv_browser.open(
    ...     'http://code.launchpad.dev/~name12/gnome-terminal/klingon')
    >>> nopriv_browser.getLink('Register merge proposal').click()
    >>> nopriv_browser.getControl('Target Branch').value = (
    ...     '~name12/gnome-terminal/main')
    >>> nopriv_browser.getControl('Whiteboard').value = (
    ...     'This is the whiteboard')
    >>> nopriv_browser.getControl('Register').click()

Registering the merge proposal takes the user back to the
main page for the source branch.

    >>> print nopriv_browser.url
    http://code.launchpad.dev/~name12/gnome-terminal/klingon

Most of the time the merge proposal is looked at from the point
of view of either the source branch or the target branch.


== Landing Targets ==

When looked at from the point of view of the source branch, the
merge proposal is considered a "landing target" with an optional
"dependent branch".

    >>> print extract_text(find_tag_by_id(
    ...     nopriv_browser.contents, 'landing-targets'))
    GNOME Terminal Mainline registered by No Privileges Person
    This is the whiteboard

Since the user who registered the merge proposal is different
to the owner of the source branch, they are shown explicitly.
If the branch owner registers the merge proposal, they are not
shown.

    >>> sample_browser = setupBrowser(auth="Basic test@canonical.com:test")
    >>> sample_browser.open(
    ...     'http://code.launchpad.dev/~name12/gnome-terminal/scanned')
    >>> sample_browser.getLink('Register merge proposal').click()
    >>> sample_browser.getControl('Target Branch').value = (
    ...     '~name12/gnome-terminal/main')
    >>> sample_browser.getControl('Whiteboard').value = (
    ...     'This is the whiteboard')
    >>> sample_browser.getControl('Register').click()

    >>> print extract_text(find_tag_by_id(
    ...     sample_browser.contents, 'landing-targets'))
    GNOME Terminal Mainline
    This is the whiteboard

    >>> browser.open(
    ...     'http://code.launchpad.dev/~name12/gnome-terminal/main')
    >>> print browser.contents # .decode('us-ascii', 'replace')


== Landing Candidates ==

From the point of view of the target branch, the proposals are
"landing candidates".

#    >>> sample_browser.open(
#    ...     'http://code.launchpad.dev/~name12/gnome-terminal/main')
#    >>> print sample_browser.contents
#    >>> print anon_browser.contents.decode('us-ascii', 'replace')
#    >>> #print extract_text(find_tag_by_id(

#...     anon_browser.contents, 'landing-candidates'))



== Dependent Branches ==




== Marking as merged ==