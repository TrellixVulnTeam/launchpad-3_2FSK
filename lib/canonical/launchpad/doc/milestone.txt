Milestones
==========

A milestone is a significant event in a project. A release of a new version of
a piece of software is a significant event (we're geeks, give us a break.) In
Malone, milestones can be defined to assign bug fixes to a specific release of
some software.

This document is about milestones in Malone.

Working with Milestones in Malone
=================================

All Milestone creation and retrieval is done through IMilestoneSet.
IMilestoneSet can be accessed as a utility.

    >>> from zope.component import getUtility
    >>> from canonical.launchpad.interfaces import IMilestoneSet
    >>> milestoneset = getUtility(IMilestoneSet)

For the purposes of this document, we'll interact with the system as an
anonymous user:

XXX: Brad Bollenbach, 2005-02-03: This takes way too much code to do in a
doctest! Talk to SteveA about simplifying this.

    >>> import zope.security.management
    >>> from canonical.launchpad.interfaces import IPerson
    >>> from canonical.launchpad.database import Person
    >>> class Principal:
    ...     def __init__(self, id):
    ...         self.id = id
    ...         self.groups = []
    >>> principal = Principal('launchpad.anonymous')

    >>> class Participation:
    ...     interaction = None
    >>> anon_participation = Participation()
    >>> anon_participation.principal = principal

    >>> zope.security.management.newInteraction(anon_participation)

    >>> from canonical.launchpad.interfaces import ILaunchBag
    >>> from zope.app.tests import ztapi
    >>> from zope.interface import implements
    >>> class MockLaunchBag(object):
    ...     implements(ILaunchBag)
    ...     def __init__(self, login=None, user=None):
    ...         self.login = login
    ...         self.user = user
    >>> ztapi.provideUtility(ILaunchBag, MockLaunchBag())

To create a new Milestone, use IMilestoneSet.new:

    >>> from canonical.launchpad.interfaces import IProductSet
    >>> productset = getUtility(IProductSet)
    >>> upstream_firefox = productset.get(4)
    >>> firefox_ms = milestoneset.new(product = upstream_firefox, name = "1.1",
    ...                               title = "one dot one")
    >>> print firefox_ms.name
    1.1

To retrieve a specific Milestone, use IMilestoneSet.get:

    >>> firefox_ms_1_1 = milestoneset.get(1)
    >>> print firefox_ms_1_1.name
    1.1

Trying to retrieve a milestone that doesn't exist will raise a
zope.exceptions.NotFoundError:

    >>> milestoneset.get(-1)
    Traceback (most recent call last):
      ...
    NotFoundError: 'Milestone with ID -1 does not exist'

XXX: Brad Bollenbach, 2005-02-03: this shouldn't be in a doctest, but I don't
have time to think about a better place to put this at the moment.

    >>> zope.security.management.endInteraction()
