Check that some important fields are present in the builder index.
The overview-menu does not appear in public access.

  >>> from mechanize import LinkNotFoundError
  >>> from canonical.launchpad.helpers import backslashreplace

Check if the only public link is "Build History"

  >>> anon_browser.open("http://localhost/+builds/bob")
  >>> links = ["Show build history",
  ...          "Change details",
  ...          "Change mode",
  ...          "Cancel current job",
  ...          "Administer builder"]
  >>> for link in links:
  ...     try:
  ...         anon_browser.getLink(link)
  ...     except LinkNotFoundError:
  ...         print "Link not found: %s" % link
  <Link text='Show build history' url='http://localhost/+builds/bob/+history'>
  Link not found: Change details
  Link not found: Change mode
  Link not found: Cancel current job
  Link not found: Administer builder

Check page content, builder index page should present information
about the current job (mozilla-firefox) and the builder details in a
portlet (end of the html chunk):

  >>> backslashreplace(anon_browser.contents)
  '...Build machine \\u201cBob The Builder\\u201d...
  ...BUILDING...
  ...i386 build of mozilla-firefox 0.9 in ubuntu hoary RELEASE...
  ...Started...
  ...2005-06-15 09:20:12 UTC...
  ...Dummy sampledata entry, not processing...
  ...Bob The Builder...
  ...386...
  ...http://localhost:8221/...
  ...True...
  ...The default build-slave...
  ...NOT OK : None (AUTO)...
  ...Launchpad Buildd Admins...'


Check "Build History" contents, see the information about several
job processed by this builder, things like:

 * SUPERSEDED builds contain title
 * MANUALDEWAIT builds contain: title, dependencies-line, start,
   finished, duration and a link to the build log.
 * FAILEDTOBUILD builds are similar to MANUALDEPWAIT, but they don't
   contain dependencies-line.

  >>> anon_browser.getLink("Show build history").click()
  >>> builds = find_tags_by_class(anon_browser.contents,
  ...                             'builds_list')[0].renderContents()
  >>> print builds
  <BLANKLINE>
  ...
  ...FULLYBUILT...
  ...hppa build of mozilla-firefox 0.9 in ubuntu warty RELEASE...
  ...FULLYBUILT...
  ...hppa build of mozilla-firefox 0.9 in ubuntu warty RELEASE...
  ...FULLYBUILT...
  ...i386 build of pmount 0.1-1 in ubuntu warty RELEASE...
  ...FAILEDTOBUILD...
  ...i386 build of cdrkit 1.0 in ubuntu warty RELEASE...
  ...FAILEDTOBUILD...
  ...i386 build of cdrkit 1.0 in ubuntu warty RELEASE...

  # We had too many results. Some of them are on the second batch.
  >>> anon_browser.getLink("Next").click()
  >>> builds = find_tags_by_class(anon_browser.contents, 
  ...                             'builds_list')[0].renderContents()
  >>> print builds
  <BLANKLINE>
  ...
  ...FAILEDTOUPLOAD...
  ...i386 build of cdrkit 1.0 in ubuntu breezy-autotest RELEASE...
  ...FAILEDTOBUILD...
  ...i386 build of foobar 1.0 in ubuntu warty RELEASE...
  ...SUPERSEDED...
  ...i386 build of at 0.00 in ubuntu warty RELEASE...
  ...SUPERSEDED...
  ...i386 build of linux-source-2.6.15 2.6.15.3 in ubuntu warty RELEASE...
  ...SUPERSEDED...
  ...i386 build of netapplet 0.99.6-1 in ubuntu warty RELEASE...

  # We had too many results. Some of them are on the second batch.
  >>> anon_browser.getLink("Next").click()
  >>> builds = find_tags_by_class(anon_browser.contents, 
  ...                             'builds_list')[0].renderContents()
  >>> print builds
  <BLANKLINE>
  ...
  ...MANUALDEPWAIT...
  ...i386 build of libstdc++ b8p in ubuntu hoary RELEASE...
  ...Missing dep...
  ...cpp (&gt;= 4:4.0.1-3), gcc-4.0...
  ...Build started...
  ...2006-02-27...
  ...and finished...
  ...2006-02-28...
  ...six minutes...see the log...
  ...FAILEDTOBUILD...
  ...i386 build of pmount 0.1-1 in ubuntu warty RELEASE...
  ...Build started...
  ...2005-10-01...
  ...and finished...
  ...2005-10-02...
  ...three minutes...see the log...

Check if the overview-menu appears for an authorized access (admins
member):

  >>> admin_browser.open("http://localhost/+builds/bob")
  >>> for link in links:
  ...     admin_browser.getLink(link)
  <Link text=...>
  <Link text=...>
  <Link text=...>
  <Link text=...>
  <Link text=...>
