= Person Views of Branch Lists =

There are several views of the branches related to a person.

Branch lists for people also include branches that are owned by
teams that the person is participating in.

== Related Branches ==

First, check that the condensed branch listing page works:

  >>> browser.open('http://launchpad.dev/~name12/+branches')
  >>> print browser.contents
  <!DOCTYPE...
  ...Sample Person...
  ...Bazaar branches...

If a person does not have any related branches, we should print an informative
message.

  >>> browser.open('http://launchpad.dev/~kinnison/+branches')
  >>> print browser.contents
  <!DOCTYPE...
  ...There may be branches related to Daniel Silverstone but none 
  of them match the current filter criteria for this page. Try
  filtering on "Any Status"...

OK, lets follow the advice.

  >>> browser.getControl(name='field.lifecycle').displayValue = ['Any Status']
  >>> browser.getControl('Filter').click()
  >>> print browser.contents
  <!DOCTYPE...
  ...There are no branches related to Daniel Silverstone in Launchpad today.
  You can use Launchpad as a registry for Bazaar branches, and encourage
  broader community participation in your project using
  distributed version control...

== Default view for a person on code root site ==

The default view for a person on the code root site should be the 
normal branch listing view for that person.

  >>> browser.open('http://code.launchpad.dev/~kinnison')
  >>> print browser.contents
  <!DOCTYPE...
  ...There may be branches related to Daniel Silverstone but none 
  of them match the current filter criteria for this page. Try
  filtering on "Any Status"...


== Team Branches ==

Branches that are owned by a team that the user is a member of, they are
shown as 'Team Branch'.

   >>> browser.open('http://launchpad.dev/~ddaa/+branches')
   >>> table = find_tag_by_id(browser.contents, 'branchtable')
   >>> for row in table.tbody.fetch('tr'):
   ...     print extract_text(row)
   main   60 New   evolution   Team Branch
  
  
== Authored Branches ==

There should be a link in the branch context menu for person which points to
the authored branches page.

   >>> browser.open('http://code.launchpad.dev/~name12')
   >>> browser.getLink('View Authored Branches').click()
   >>> print browser.title
   Authored branches for Sample Person
   >>> table = find_tag_by_id(browser.contents, 'branchtable')
   >>> for row in table.tbody.fetch('tr'):
   ...     print extract_text(row)
   main         60 New           firefox
   klingon      30 Experimental  gnome-terminal
   junk.contrib 60 New


== Registered Branches ==

There should also be a link which points to the registered branches page.

   >>> browser.open('http://code.launchpad.dev/~name12')
   >>> browser.getLink('View Registered Branches').click()
   >>> print browser.title
   Registered branches for Sample Person 
   >>> table = find_tag_by_id(browser.contents, 'branchtable')
   >>> for row in table.tbody.fetch('tr'):
   ...     print extract_text(row)
   2.6                   10 Mature       gnome-terminal
   main                  20 Development  gnome-terminal
   pushed                60 New          gnome-terminal
   junk.dev Ubuntu Team  30 Experimental

== Subscribed branches ==

From the persons main listing page, there is also a link to subscribed
branches.

   >>> browser.open('http://code.launchpad.dev/~name12')
   >>> browser.getLink('View Subscribed Branches').click()
   >>> print browser.title
   Subscribed branches for Sample Person
   >>> table = find_tag_by_id(browser.contents, 'branchtable')
   >>> for row in table.tbody.fetch('tr'):
   ...     print extract_text(row)
   launchpad   Launchpad Developers 60 New gnome-terminal
   junk.dev    Ubuntu Team          30 Experimental

== Batched branch listing ==

Batching is applied to branch listings where there are many items.
Luckily for us, many is 5 in the tests.

   >>> browser.open('http://code.launchpad.dev/~name12')
   >>> links = find_tag_by_id(browser.contents, 'branch-batch-links')
   >>> print links.renderContents()
   <BLANKLINE>
   ...1...&rarr;...5...of 8 results...

   >>> table = find_tag_by_id(browser.contents, 'branchtable')
   >>> for row in table.tbody.fetch('tr'):
   ...     print extract_text(row)
   main      Sample Person        New          firefox         Author
   2.6                            Mature       gnome-terminal  Registrant
   main                           Development  gnome-terminal  Registrant
   klingon   Sample Person        Experimental gnome-terminal  Author
   launchpad Launchpad Developers New          gnome-terminal  Subscriber

   >>> browser.getLink('Next').click()
   >>> links = find_tag_by_id(browser.contents, 'branch-batch-links')
   >>> print links.renderContents()
   <BLANKLINE>
   ...6...&rarr;...8...of 8 results...

   >>> table = find_tag_by_id(browser.contents, 'branchtable')
   >>> for row in table.tbody.fetch('tr'):
   ...     print extract_text(row)
   pushed                     New          gnome-terminal Registrant
   junk.dev     Ubuntu Team   Experimental                Registrant
   junk.contrib Sample Person New                         Author

If the branch listing has few enough entries that batching isn't
needed, then the table is sortable and no batching navigation links are shown.

   >>> browser.open('http://code.launchpad.dev/~name12')
   >>> browser.getLink('View Subscribed Branches').click()
   >>> links = find_tag_by_id(browser.contents, 'branch-batch-links')
   >>> links is None
   True
   
== Branch filtering ==

When the branches for a person is first loaded, only the 'Current'
branches are shown.  Current branches are those that have a 
lifecycle status of New, Development, Experimental or Mature.
Merged or Abandoned branches are not shown.

   >>> browser.open('http://code.launchpad.dev/~name12')
   >>> table = find_tag_by_id(browser.contents, 'branchtable')
   >>> for row in table.tbody.fetch('tr'):
   ...     print extract_text(row)
   main      Sample Person        New          firefox         Author
   2.6                            Mature       gnome-terminal  Registrant
   main                           Development  gnome-terminal  Registrant
   klingon   Sample Person        Experimental gnome-terminal  Author
   launchpad Launchpad Developers New          gnome-terminal  Subscriber

There is a select control that is used to define which
subset of the branches are shown.
  
   >>> filter_control = browser.getControl(name='field.lifecycle')
   >>> filter_control
   <ListControl name='field.lifecycle' type='select'>
   >>> filter_control.value
   ['New, Experimental, Development or Mature']
   >>> filter_control.displayOptions
   ['New, Experimental, Development or Mature', 'Any Status', 'New', 'Experimental', 'Development', 'Mature', 'Merged', 'Abandoned']
    
Changing the value of the select control will (in a javascript
enabled browser) cause the form to be submitted automatically.
For browsers with javascript disabled, there is a form submit
button.

   >>> filter_control.displayValue = ['Any Status']
   >>> browser.getControl('Filter').click()

Now all types of branches should be shown.

   >>> links = find_tag_by_id(browser.contents, 'branch-batch-links')
   >>> print links.renderContents()
   <BLANKLINE>
   ...1...&rarr;...5...of 10 results...

   >>> table = find_tag_by_id(browser.contents, 'branchtable')
   >>> for row in table.tbody.fetch('tr'):
   ...     print extract_text(row)
   main      Sample Person        New          firefox         Author
   2.4                            Abandoned    gnome-terminal  Registrant
   slowness  Sample Person        Merged       gnome-terminal  Author
   2.6                            Mature       gnome-terminal  Registrant
   main                           Development  gnome-terminal  Registrant

   >>> browser.getLink('Next').click()
   >>> links = find_tag_by_id(browser.contents, 'branch-batch-links')
   >>> print links.renderContents()
   <BLANKLINE>
   ...6...&rarr;...10...of 10 results...

   >>> table = find_tag_by_id(browser.contents, 'branchtable')
   >>> for row in table.tbody.fetch('tr'):
   ...     print extract_text(row)
   klingon      Sample Person        Experimental gnome-terminal Author
   launchpad    Launchpad Developers New          gnome-terminal Subscriber
   pushed                            New          gnome-terminal Registrant
   junk.dev     Ubuntu Team          Experimental                Registrant
   junk.contrib Sample Person        New                         Author


Selecting an individual lifecycle status from the select control 
will cause only branches with that status to be listed.

   >>> browser.getControl(name='field.lifecycle').displayValue = ['Abandoned']
   >>> browser.getControl('Filter').click()
   >>> table = find_tag_by_id(browser.contents, 'branchtable')
   >>> for row in table.tbody.fetch('tr'):
   ...     print extract_text(row)
   2.4  50 Abandoned    gnome-terminal  Registrant

If anyone tries to hack the URL, and put in an invalid
status value, it will default to current branches.

   >>> browser.open(
   ...  'http://launchpad.dev/~name12/+branches?field.lifecycle=Fubar')
   >>> browser.getControl(name='field.lifecycle').displayValue
   ['New, Experimental, Development or Mature']
   >>> table = find_tag_by_id(browser.contents, 'branchtable')
   >>> for row in table.tbody.fetch('tr'):
   ...     print extract_text(row)
   main      Sample Person        New          firefox         Author
   2.6                            Mature       gnome-terminal  Registrant
   main                           Development  gnome-terminal  Registrant
   klingon   Sample Person        Experimental gnome-terminal  Author
   launchpad Launchpad Developers New          gnome-terminal  Subscriber

If the user does have branches, but they are not visible with
the current filter, the table is shown, and a (hopefully)
helpful message supplied.

  >>> browser.open('http://code.launchpad.dev/'
  ...   '~launchpad/+branches?field.lifecycle=Mature')
  >>> browser.getControl(name='field.lifecycle').displayValue
  ['Mature']
  >>> table = find_tag_by_id(browser.contents, 'branchtable')
  >>> cell = table.tbody.fetch('tr')[0].fetch('td')[0]
  >>> print cell.renderContents()
  There may be branches related to Launchpad Developers but none of
  them match the current filter criteria for this page.
  Try filtering on "Any Status".


== Branch Badge Decoration ==

We are wanting to have badges for associated bugs and blueprints.

  >>> def names_and_bugs(contents):
  ...     table = find_tag_by_id(contents, 'branchtable')
  ...     for row in table.tbody.fetch('tr'):
  ...         first_cell = row.fetch('td')[0]
  ...         anchors = first_cell.fetch('a')
  ...         print anchors[0].get('href')
  ...         for anchor in anchors[1:]:
  ...            print "  Bug:", anchor.get('href')

  >>> browser.open('http://code.launchpad.dev/~name12')
  >>> names_and_bugs(browser.contents)
  http://code.launchpad.dev/~name12/+branch/firefox/main
    Bug: http://launchpad.dev/bugs/4
    Bug: http://launchpad.dev/bugs/5
  http://code.launchpad.dev/~name12/+branch/gnome-terminal/2.6
  http://code.launchpad.dev/~name12/+branch/gnome-terminal/main
  http://code.launchpad.dev/~name12/+branch/gnome-terminal/klingon
  http://code.launchpad.dev/~launchpad/+branch/gnome-terminal/launchpad

