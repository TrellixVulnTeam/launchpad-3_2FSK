Non-Personal Subscriptions
==========================

In addition to subscribing / unsubscribing yourself, it is possible to add a
person as a subscriber to the bug. You would use this feature to subscribe
someone else to the bug.

Anonymous users should not be able to subscribe someone else to a bug.

    >>> anon_browser.open('http://bugs.launchpad.dev/firefox/+bug/1')
    >>> anon_browser.getLink('Subscribe someone else').click()
    Traceback (most recent call last):
    ...
    Unauthorized: ...

No Privileges wants to subscribe David Allouche to the bug because he knows
that he's interested in that feature.

    >>> user_browser.open('http://bugs.launchpad.dev/firefox/+bug/1')
    >>> user_browser.getLink('Subscribe someone else').click()
    >>> user_browser.url
    'http://bugs.launchpad.dev/firefox/+bug/1/+addsubscriber'

If No Privileges has a sudden change of heart, there's a cancel link
that will return the browser to the bug page.

    >>> cancel_link = user_browser.getLink('Cancel')
    >>> cancel_link.url
    'http://bugs.launchpad.dev/firefox/+bug/1'

By looking at the 'Subscribers' portlet, he sees that David Allouche is not
currently subscribed to the bug:

    >>> from lp.bugs.tests.bug import (
    ...     print_direct_subscribers, print_indirect_subscribers)

    >>> user_browser.open(
    ...     'http://bugs.launchpad.dev/bugs/1/'
    ...     '+bug-portlet-subscribers-content')
    >>> print_direct_subscribers(user_browser.contents)
    Sample Person (Subscribed by Launchpad Janitor)
    Steve Alexander (Subscribed by Launchpad Janitor)
    >>> print_indirect_subscribers(user_browser.contents)
    From duplicates:
    Also notified:
    Foo Bar
    Mark Shuttleworth
    Ubuntu Team

    >>> user_browser.open('http://bugs.launchpad.dev/firefox/+bug/1/+addsubscriber')

Unlike the main bug page, here the 'Subscribers' portlet does not have
any 'Subscribe' links.

    >>> user_browser.getLink('Subscribe')
    Traceback (most recent call last):
    ...
    LinkNotFoundError

He subscribes David Allouche to the bug using his Launchpad username.

    >>> user_browser.getControl("Person").value = 'ddaa'
    >>> user_browser.getControl("Subscribe user").click()
    >>> user_browser.url
    'http://bugs.launchpad.dev/firefox/+bug/1'

He is notified that David Allouche has been subscribed.

    >>> for tag in find_tags_by_class(user_browser.contents,
    ...     'informational message'):
    ...     extract_text(tag)
    u'David Allouche has been subscribed to this bug.'

The subscribers portlet now contains the new subscriber's name.

    >>> user_browser.open(
    ...     'http://bugs.launchpad.dev/bugs/1/'
    ...     '+bug-portlet-subscribers-content')
    >>> print_direct_subscribers(user_browser.contents)
    David Allouche (Subscribed by No Privileges Person)
    Sample Person (Subscribed by Launchpad Janitor)
    Steve Alexander (Subscribed by Launchpad Janitor)

David got a notification, saying that he was subscribed to the bug.

    >>> from lp.services.mail import stub
    >>> len(stub.test_emails)
    1
    >>> print stub.test_emails[0][2]
    MIME-Version: 1.0
    ...
    To: david.allouche@canonical.com
    Reply-To: Bug ... <...@bugs.launchpad.net>
    ...
    X-Launchpad-Message-Rationale: Subscriber
    ...
    You have been subscribed to a public bug by No Privileges Person (no-priv):
    ...
    http://bugs.launchpad.dev/bugs/...

He subscribes the Landscape developers team.

    >>> user_browser.open('http://bugs.launchpad.dev/firefox/+bug/1')
    >>> user_browser.getLink('Subscribe someone else').click()
    >>> user_browser.getControl("Person").value = 'landscape-developers'
    >>> user_browser.getControl("Subscribe user").click()
    >>> user_browser.url
    'http://bugs.launchpad.dev/firefox/+bug/1'

He is notified that Landscape developers team has been subscribed.

    >>> for tag in find_tags_by_class(user_browser.contents,
    ...     'informational message'):
    ...     extract_text(tag)
    u'Landscape Developers team has been subscribed to this bug.'

The subscribers portlet displays the new subscribed team.

    >>> user_browser.open(
    ...     'http://bugs.launchpad.dev/bugs/1/'
    ...     '+bug-portlet-subscribers-content')
    >>> print_direct_subscribers(user_browser.contents)
    David Allouche (Subscribed by No Privileges Person)
    Landscape Developers (Subscribed by No Privileges Person)
    Sample Person (Subscribed by Launchpad Janitor)
    Steve Alexander (Subscribed by Launchpad Janitor)


Subscription of private teams
-----------------------------

Private teams can be subscribed to bugs. The logged in user can see
the private team in the subscribers list if she is a member of the
private team.

    >>> # Create a private team with Foo Bar as the owner.
    >>> from zope.component import getUtility
    >>> from lp.registry.interfaces.person import IPersonSet, PersonVisibility
    >>> login('foo.bar@canonical.com')
    >>> foobar = getUtility(IPersonSet).getByEmail('foo.bar@canonical.com')
    >>> priv_team = factory.makeTeam(name='private-team',
    ...     displayname='Private Team',
    ...     owner=foobar,
    ...     visibility=PersonVisibility.PRIVATE)
    >>> logout()
    >>> foobar_browser = setupBrowser(auth='Basic foo.bar@canonical.com:test')
    >>> foobar_browser.open('http://bugs.launchpad.dev/firefox/+bug/1')
    >>> foobar_browser.getLink('Subscribe someone else').click()
    >>> foobar_browser.getControl("Person").value = 'private-team'
    >>> foobar_browser.getControl("Subscribe user").click()
    >>> foobar_browser.url
    'http://bugs.launchpad.dev/firefox/+bug/1'
    >>> foobar_browser.open(
    ...     'http://bugs.launchpad.dev/bugs/1/'
    ...     '+bug-portlet-subscribers-content')
    >>> print_direct_subscribers(foobar_browser.contents)
    Private Team (Subscribed by Foo Bar) (Unsubscribe Private Team)
    David Allouche (Subscribed by No Privileges Person)
    Landscape Developers (Subscribed by No Privileges Person)
    Sample Person (Subscribed by Launchpad Janitor)
    Steve Alexander (Subscribed by Launchpad Janitor)

Someone not in the team will not see the private team in the
subscribers list.

    >>> user_browser.open(
    ...     'http://bugs.launchpad.dev/bugs/1/'
    ...     '+bug-portlet-subscribers-content')
    >>> print_direct_subscribers(user_browser.contents)
    David Allouche (Subscribed by No Privileges Person)
    Landscape Developers (Subscribed by No Privileges Person)
    Sample Person (Subscribed by Launchpad Janitor)
    Steve Alexander (Subscribed by Launchpad Janitor)

An anonymous user will not be shown the private team in the subscribers
list.

    >>> anon_browser.open(
    ...     'http://bugs.launchpad.dev/bugs/1/'
    ...     '+bug-portlet-subscribers-content')
    >>> print_direct_subscribers(anon_browser.contents)
    David Allouche (Subscribed by No Privileges Person)
    Landscape Developers (Subscribed by No Privileges Person)
    Sample Person (Subscribed by Launchpad Janitor)
    Steve Alexander (Subscribed by Launchpad Janitor)
