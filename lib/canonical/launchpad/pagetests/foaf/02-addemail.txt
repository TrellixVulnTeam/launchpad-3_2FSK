'foo' adds two new email addresses in launchpad and confirms them.

The First One
=============

  Type the new email address and submit the form.

  >>> print http(r"""
  ... POST /people/foo/+editemails HTTP/1.1
  ... Authorization: Basic Zm9vQGJhei5jb206Zg==
  ... Content-Length: ...
  ... Content-Type: application/x-www-form-urlencoded
  ... 
  ... newemail=bar.foo%40canonical.com&ADD_EMAIL=Add""")
  HTTP/1.1 200 Ok
  Content-Length: ...
  Content-Type: text/html;charset=utf-8
  ...
  ...An email message was sent to...
  ...


  Add the same email again. While it's unconfirmed, you can try to add them as
  many times as you want, because you can have lost the token and then you'll
  need another one.

  >>> print http(r"""
  ... POST /people/foo/+editemails HTTP/1.1
  ... Authorization: Basic Zm9vQGJhei5jb206Zg==
  ... Content-Length: ...
  ... Content-Type: application/x-www-form-urlencoded
  ... 
  ... newemail=bar.foo%40canonical.com&ADD_EMAIL=Add""")
  HTTP/1.1 200 Ok
  Content-Length: ...
  Content-Type: text/html;charset=utf-8
  ...
  ...An email message was sent to...
  ...


  Get the token we'll have to use to finish the registration process.

  >>> import email, re
  >>> from canonical.launchpad.mail import stub
  >>> from_addr, to_addrs, raw_msg = stub.test_emails.pop()
  >>> msg = email.message_from_string(raw_msg)
  >>> body = msg.get_payload()
  >>> link = re.findall(r'http.*/token/.*', body)[0]
  >>> token = re.sub(r'.*token/', '', link)
  >>> base_path = '/token/%s' % token

  Check if the email was sent to the right address.

  >>> to_addrs
  ['bar.foo@canonical.com']


  Go to the link sent by email, to confirm the email address.

  >>> print http(r"""
  ... GET %s HTTP/1.1
  ... Authorization: Basic Zm9vQGJhei5jb206Zg==
  ... """ % base_path)
  HTTP/1.1 303 See Other
  Content-Length: ...
  Content-Type: text/html;charset=utf-8
  ...
  ...<h1>You're being redirected</h1>
  ...


  >>> path = '%s/+validateemail' % base_path
  >>> print http(r"""
  ... GET %s HTTP/1.1
  ... Authorization: Basic Zm9vQGJhei5jb206Zg==
  ... """ % path)
  HTTP/1.1 200 Ok
  Content-Length: ...
  Content-Type: text/html;charset=utf-8
  ...
  ...Confirm e-mail address...
  ...


  The address was confirmed.

  >>> print http(r"""
  ... POST %s HTTP/1.1
  ... Content-Type: application/x-www-form-urlencoded
  ... 
  ... password=f&SUBMIT_CHANGES=Submit""" % path)
  HTTP/1.1 303 See Other
  ...
  Location: http://localhost:9000/people/foo?lpnotification...
  ...
  ...info-notification">Email address successfully confirmed...
  ...


  Now we can see it on the person's emails page.

  >>> print http(r"""
  ... GET /people/foo/+editemails HTTP/1.1
  ... Authorization: Basic Zm9vQGJhei5jb206Zg==
  ... """)
  HTTP/1.1 200 Ok
  Content-Length: ...
  Content-Type: text/html;charset=utf-8
  ...
  ...bar.foo@canonical.com...
  ...
  

  Now that the address is confirmed, if you try to add it again, you'll get an
  error message explaining that it's already registered.

  >>> print http(r"""
  ... POST /people/foo/+editemails HTTP/1.1
  ... Authorization: Basic Zm9vQGJhei5jb206Zg==
  ... Content-Length: ...
  ... Content-Type: application/x-www-form-urlencoded
  ... 
  ... newemail=bar.foo%40canonical.com&ADD_EMAIL=Add""")
  HTTP/1.1 200 Ok
  Content-Length: ...
  Content-Type: text/html;charset=utf-8
  ...
  ...The email address...is already registered...
  ...



The Second One
==============

  This is just to show that if the user wants, he can be automatically logged
  in after validating an email address.

  >>> print http(r"""
  ... POST /people/foo/+editemails HTTP/1.1
  ... Authorization: Basic Zm9vQGJhei5jb206Zg==
  ... Content-Length: ...
  ... Content-Type: application/x-www-form-urlencoded
  ... 
  ... newemail=baz.foo%40canonical.com&ADD_EMAIL=Add""")
  HTTP/1.1 200 Ok
  Content-Length: ...
  Content-Type: text/html;charset=utf-8
  ...
  ...An email message was sent to...
  ...


  Get the token we'll have to use to finish the registration process.

  >>> import email, re
  >>> from canonical.launchpad.mail import stub
  >>> from_addr, to_addrs, raw_msg = stub.test_emails.pop()
  >>> msg = email.message_from_string(raw_msg)
  >>> body = msg.get_payload()
  >>> link = re.findall(r'http.*/token/.*', body)[0]
  >>> token = re.sub(r'.*token/', '', link)
  >>> base_path = '/token/%s' % token

  Check if the email was sent to the right address.

  >>> to_addrs
  ['baz.foo@canonical.com']


  Go to the link sent by email, to confirm the email address.

  >>> print http(r"""
  ... GET %s HTTP/1.1
  ... """ % base_path)
  HTTP/1.1 303 See Other
  ...
  Location: .../+validateemail
  ...


  >>> path = '%s/+validateemail' % base_path
  >>> print http(r"""
  ... GET %s HTTP/1.1
  ... """ % path)
  HTTP/1.1 200 Ok
  Content-Length: ...
  Content-Type: text/html;charset=utf-8
  ...
  ...Confirm e-mail address...
  ...


  Here the user wants to be logged in after validating his email address (see
  that "logmein=on" in the http request.

  >>> print http(r"""
  ... POST %s HTTP/1.1
  ... Content-Type: application/x-www-form-urlencoded
  ... Cookie: launchpad=8phgCR2ckQ2r6D3uhJhVdNOlPWgpNSQkD-p00VbpbzGV5kBF8vofQM
  ... 
  ... password=f&logmein=onSUBMIT_CHANGES=Submit""" % path)
  HTTP/1.1 303 See Other
  ...
  Location: http://localhost:9000/people/foo?lpnotification...
  ...
  ...info-notification">Email address successfully confirmed...
  ...
