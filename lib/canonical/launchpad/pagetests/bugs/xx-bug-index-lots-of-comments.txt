== Bugs with lots of comments ==

When a bug has a very large number of comments, only some of them are
displayed. A notice is added at the end of the comment list to tell
the user about this.

Bug 11 has quite a few comments.

    >>> user_browser.open('http://launchpad.dev/bugs/11')
    >>> comments = find_tags_by_class(user_browser.contents, 'bug-comment')
    >>> len(comments)
    6

Let's briefly override the configuration to push bug 11 over the
threshold.

    >>> from canonical.config import config
    >>> config.push('malone', '''
    ... [malone]
    ... comments_list_max_length: 5
    ... comments_list_truncate_to: 3
    ... ''')

Now only 3 comments will be displayed.

    >>> user_browser.open('http://launchpad.dev/bugs/11')
    >>> comments = find_tags_by_class(user_browser.contents, 'bug-comment')
    >>> len(comments)
    3

With a warning telling the user where the comments have gone:

    >>> print extract_text(first_tag_by_class(
    ...     user_browser.contents, 'warning message'))
    Displaying first 3 comments. View all 6 comments.

The add comment box is not present so people don't accidentally reply
to the wrong message.

    >>> print find_tag_by_id(user_browser.contents, 'add-comment-form')
    None

In amongst that message is a link that will let us see all the
comments and the add comment box.

    >>> user_browser.getLink('View all 6 comments').click()
    >>> comments = find_tags_by_class(user_browser.contents, 'bug-comment')
    >>> len(comments)
    6

    >>> print find_tag_by_id(user_browser.contents, 'add-comment-form').name
    fieldset

Anonymous users have a slightly different experience. If the comment
list is truncated, the usual "to post a comment you must log in" note
is also removed.

    >>> anon_browser.open('http://launchpad.dev/bugs/11')
    >>> print find_tag_by_id(
    ...     anon_browser.contents, 'add-comment-login-first')
    None

When an anonymous user views all comments, the "you must log in" note
returns.

    >>> anon_browser.getLink('View all 6 comments').click()
    >>> print extract_text(find_tag_by_id(
    ...     anon_browser.contents, 'add-comment-login-first'))
    To post a comment you must log in.

Restore the configuration to its previous setting.

    >>> config.pop('malone')
    (...)
