
Get text page for a single bug.

  >>> anon_browser.open('http://launchpad.dev/bugs/1/+text')
  >>> anon_browser.url
  'http://launchpad.dev/bugs/1/+text'
  >>> print anon_browser.headers['content-type']
  text/plain;charset=utf-8 

  >>> print anon_browser.contents
  bug: 1
  title: Firefox does not support SVG
  reporter: Sample Person (name12)
  duplicate-of: 
  duplicates: 
  subscribers: 
   Steve Alexander (stevea)
   Sample Person (name12)
  <BLANKLINE>
  task: firefox (upstream)
  status: Unconfirmed
  reporter: Sample Person (name12)
  importance: Low
  assignee: Mark Shuttleworth (sabdfl)
  milestone: 
  <BLANKLINE>
  task: mozilla-firefox (Ubuntu)
  status: Unconfirmed
  reporter: Foo Bar (name16)
  importance: Medium
  assignee: 
  milestone: 
  <BLANKLINE>
  task: mozilla-firefox (Debian)
  status: Confirmed
  reporter: Sample Person (name12)
  importance: Low
  assignee: 
  milestone: 
  <BLANKLINE>

Check a bug that is a duplicate.

  >>> anon_browser.open('http://launchpad.dev/bugs/6/+text')
  >>> anon_browser.url
  'http://launchpad.dev/bugs/6/+text'
  >>> print anon_browser.headers['content-type']
  text/plain;charset=utf-8 

  >>> print anon_browser.contents
  bug: 6
  ...
  duplicate-of: 5
  ...

Check the duplicate target.

  >>> anon_browser.open('http://launchpad.dev/bugs/5/+text')
  >>> anon_browser.url
  'http://launchpad.dev/bugs/5/+text'
  >>> print anon_browser.headers['content-type']
  text/plain;charset=utf-8 

  >>> print anon_browser.contents
  bug: 5
  ...
  duplicate-of: 
  duplicates: 6
  ...

Get bug text page for a product.

  >>> anon_browser.open('http://launchpad.dev/firefox/+bugs-text')
  >>> anon_browser.url
  'http://launchpad.dev/firefox/+bugs-text'
  >>> print anon_browser.headers['content-type']
  text/plain;charset=utf-8 

  >>> print anon_browser.contents
  1
  4
  5
  6
