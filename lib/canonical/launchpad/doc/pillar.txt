== Launchpad pillars ==

A few of the PillarsOfLaunchpad (tm) share a namespace to allow their name
to unambiguously refer to it. This allows us to make email interfaces
easier to use and to shorten some of our URLs. Currently, the objects that
share their name namespace are Product, Project and Distribution.

    >>> from canonical.launchpad.interfaces import (
    ...     IPillarNameSet, IProduct, IProject, IDistribution
    ...     )
    >>> pillar_set = getUtility(IPillarNameSet)

    >>> 'ubuntu' in pillar_set
    True
    >>> pillar_set['ubuntu'].name
    u'ubuntu'
    >>> IDistribution.providedBy(pillar_set['ubuntu'])
    True

    >>> 'tomcat' in pillar_set
    True
    >>> pillar_set['tomcat'].name
    u'tomcat'
    >>> IProduct.providedBy(pillar_set['tomcat'])
    True

    >>> 'apache' in pillar_set
    True
    >>> pillar_set['apache'].name
    u'apache'
    >>> IProject.providedBy(pillar_set['apache'])
    True

    >>> 'fnord' in pillar_set
    False
    >>> pillar_set['fnord']
    Traceback (most recent call last):
    ...
    NotFoundError: 'fnord'

Inactive products/projects are not available through PillarNameSet unless we
use the special getByName() method which returns active/inactive pillars..

    >>> from canonical.database.sqlbase import flush_database_updates
    >>> 'gimp' in pillar_set
    True
    >>> IProject.providedBy(pillar_set['gimp'])
    True
    >>> login('mark@hbd.com')
    >>> pillar_set['gimp'].active = False
    >>> flush_database_updates()
    >>> 'gimp' in pillar_set
    False
    >>> pillar_set['gimp']
    Traceback (most recent call last):
    ...
    NotFoundError: 'gimp'
    >>> IProject.providedBy(pillar_set.getByName('gimp'))
    True

It also works if you use Unicode strings.

    >>> u'launchpad' in pillar_set
    True
    >>> IProduct.providedBy(pillar_set[u'launchpad'])
    True
    >>> pillar_set[u'launchpad'].active = False
    >>> flush_database_updates()
    >>> u'launchpad' in pillar_set
    False
    >>> pillar_set[u'launchpad']
    Traceback (most recent call last):
    ...
    NotFoundError: 'launchpad'
    >>> IProduct.providedBy(pillar_set.getByName(u'launchpad'))
    True


== Searching for Pillars ==

We can also use PillarNameSet to do a search across some of our pillars.
Right now this search is done across Products, Projects and Distributions.
Products are decorated with ProductWithLicenses to cache the licenses
that were retrieved in PillarSet.search() to reduce the number of queries.

    >>> for row in pillar_set.search('mozilla', limit=3):
    ...     print ("%s: %s (%s)"
    ...            % (row.__class__.__name__, row.title, row.name))
    Project: The Mozilla Project (mozilla)
    ProductWithLicenses: Mozilla Firefox (firefox)
    ProductWithLicenses: Mozilla Thunderbird (thunderbird)

    >>> for row in pillar_set.search('ubuntu', limit=5):
    ...     print ("%s: %s (%s)"
    ...            % (row.__class__.__name__, row.title, row.name))
    Distribution: Ubuntu Linux (ubuntu)
    Distribution: Ubuntu Test (ubuntutest)
    ProductWithLicenses: The Evolution Groupware Application (evolution)
    ProductWithLicenses: Tomcat (tomcat)
    ProductWithLicenses: The Gnome Panel Applets (applets)

Note that inactive products and projects won't be included in the results.

    >>> pillar_set['firefox'].active = False
    >>> flush_database_updates()
    >>> for row in pillar_set.search('mozilla', limit=3):
    ...     print ("%s: %s (%s)"
    ...            % (row.__class__.__name__, row.title, row.name))
    Project: The Mozilla Project (mozilla)
    ProductWithLicenses: Mozilla Thunderbird (thunderbird)

    >>> pillar_set['applets'].active = False
    >>> flush_database_updates()
    >>> for row in pillar_set.search('ubuntu', limit=5):
    ...     print ("%s: %s (%s)"
    ...            % (row.__class__.__name__, row.title, row.name))
    Distribution: Ubuntu Linux (ubuntu)
    Distribution: Ubuntu Test (ubuntutest)
    ProductWithLicenses: The Evolution Groupware Application (evolution)
    ProductWithLicenses: Tomcat (tomcat)
    Distribution: GuadaLinex: Linux for Andalucia (guadalinex)


== PillarName objects ==

PillarName objects have a pillar attribute that returns the object referenced
by that pillar name

    >>> from canonical.launchpad.interfaces import (
    ...     IDistributionSet, IProjectSet)
    >>> from canonical.launchpad.database import PillarName

    >>> ubuntu = getUtility(IDistributionSet).getByName('ubuntu')
    >>> gnome = getUtility(IProjectSet).getByName('gnome')
    >>> ubuntu_pillarname = PillarName.selectOneBy(name='ubuntu')
    >>> ubuntu_pillarname.pillar == ubuntu
    True
    >>> gnome_pillarname = PillarName.selectOneBy(name='gnome')
    >>> gnome_pillarname.pillar == gnome
    True

