= Filing bugs on a Product from the front page =

On the Bugs front page there is a link to file a bug.

    >>> user_browser.open('http://bugs.launchpad.dev/')
    >>> user_browser.getLink('Report a bug').click()
    >>> user_browser.title
    'Report a bug'

Here we can select a product to file a bug on.

    >>> user_browser.getControl('Project') is not None
    True

Selecting a product that doesn't use Launchpad Bugs will produce a warning.

    >>> user_browser.getControl('Project').selected = True
    >>> user_browser.getControl(
    ...     name='field.bugtarget.product').value = 'thunderbird'
    >>> user_browser.getControl('Summary').value = 'Some harry'
    >>> user_browser.getControl('Continue').click()
    >>> for message in find_tags_by_class(user_browser.contents, 'highlight-message'):
    ...     print extract_text(message)
    Mozilla Thunderbird (Unspecified) does not use...

A link will be included to take the user back to the +filebug page:

    >>> user_browser.getLink('refine and resubmit').click()
    >>> user_browser.url
    'http://bugs.launchpad.dev/bugs/+filebug'

    >>> user_browser.getControl('Summary').value
    ''

We show a list of similar bugs later and it would be good to show at
least one completed bug. We need to prepare here:

    >>> user_browser.open(
    ...     'http://bugs.launchpad.dev/firefox/+bug/6/+editstatus')
    >>> user_browser.getControl('Status').value = ['Fix Released']
    >>> user_browser.getControl('Save Changes').click()

If we enter an non-existent product, we get an error message.

    >>> user_browser.open('http://bugs.launchpad.dev/bugs/+filebug/')
    >>> user_browser.getControl('Project').selected = True
    >>> user_browser.getControl(
    ...     name='field.bugtarget.product').value = 'non-existant'
    >>> user_browser.getControl('Summary').value = (
    ...     'SVG causes Firefox to crash')
    >>> user_browser.getControl('Continue').click()

    >>> for message in find_tags_by_class(user_browser.contents, 'message'):
    ...     print message.renderContents()
    There is 1 error.
    There is no project named 'non-existant' registered in Launchpad

Selecting a valid product will take us to the next filebug step.

    >>> user_browser.getControl(
    ...     name='field.bugtarget.product').value = 'firefox'
    >>> user_browser.getControl('Continue').click()

A list of similar bugs is shown. Duplicates are removed from the list
and replaced by the bug they duplicate. In the listing below bug 6
also matches, but is a duplicate of bug 5 so does not appear.

    >>> from lp.bugs.tests.bug import print_bugs_list
    >>> print_bugs_list(user_browser.contents, "similar-bugs")
    #5 Firefox install instructions should be complete
    Open (0 comments) last updated 2006-07-14...
    All ways of downloading firefox should...
    #1 Firefox does not support SVG
    Open (1 comment) last updated 2006-05-19...
    Firefox needs to support embedded SVG images...

A user can click on any of the "Yes, this is my bug" buttons to mark the
bug as affecting them.

    >>> user_browser.getControl(
    ...     name='field.actions.this_is_my_bug', index=0).click()
    >>> print user_browser.url
    http://bugs.launchpad.dev/firefox/+bug/5

    >>> for message in find_tags_by_class(user_browser.contents, 'message'):
    ...     print message.renderContents()
    This bug has been marked as affecting you.

If the current user is not permitted to view the duplicated bug (in
other words, the main bug) then it, and the duplicate it was found
from, are omitted from the search results.

First we make bug 5 private:

    >>> admin_browser.open(
    ...     'http://bugs.launchpad.dev/firefox/+bug/5/+secrecy')
    >>> admin_browser.getControl(
    ...     'This bug report should be private').selected = True
    >>> admin_browser.getControl('Change').click()

Then it no longer appears when we try the same search as before:

    >>> user_browser.open('http://bugs.launchpad.dev/bugs/+filebug/')
    >>> user_browser.getControl('Project').selected = True
    >>> user_browser.getControl(
    ...     name='field.bugtarget.product').value = 'firefox'
    >>> user_browser.getControl('Summary').value = (
    ...     'SVG causes Firefox to crash')
    >>> user_browser.getControl('Continue').click()

    >>> print_bugs_list(user_browser.contents, "similar-bugs")
    #1 Firefox does not support SVG
    Open (1 comment) last updated 2006-05-19...
    Firefox needs to support embedded SVG images...

Entering a description and submitting the bug takes the user to the bug
page.

    >>> user_browser.getControl('Further information').value = 'Crash.'
    >>> user_browser.getControl('Submit Bug Report').click()
    >>> user_browser.url
    'http://bugs.launchpad.dev/firefox/+bug/...'
    >>> user_browser.title
    'Bug #... in Mozilla Firefox: ...SVG causes Firefox to crash...'
