Test that the person's translation history page displays the latest
translations and translation groups related to the person in question.

    >>> anon_browser.open(
    ...     "http://translations.launchpad.dev/people/carlos/+translations")

    >>> extract_text(find_main_content(anon_browser.contents).findAll('h1')[0])
    u'Applications and packages translated'

The user can see in the page navigation that Carlos has so far worked
on six files, five of which are shown on this page.

    >>> extract_text(find_tag_by_id(anon_browser.contents, 'top-navigation'))
    u'1...5...of...6...results...'

The user sees a table with four columns with headings, with five POFiles
listed which Carlos has contributed to.

    # Prints a heading and formatted list of POFiles and latest submissions.
    >>> import re
    >>> def print_list_of_contributions(listing):
    ...     listing_head = listing.findAll('thead')[0].findAll('tr')[0]
    ...     heading_cells = listing_head.findAll('th')
    ...     print "%-24s %-8s %-8s %-26s" % (
    ...         extract_text(heading_cells[0]),
    ...         extract_text(heading_cells[1])[:6] + '...',
    ...         extract_text(heading_cells[2])[:6] + '...',
    ...         extract_text(heading_cells[3]))
    ...     listing_body = listing.find('tbody')
    ...     for row in listing_body.findAll('tr'):
    ...         cells = row.findAll('td')
    ...         pofile = extract_text(cells[0])
    ...         if len(pofile) > 24:
    ...             pofile = pofile[:21] + '...'
    ...         untranslated = extract_text(cells[1])
    ...         needs_review = extract_text(cells[2])
    ...         message = re.sub(' +', ' ', extract_text(cells[3]))
    ...         if len(message) > 26:
    ...             message = message[:23] + '...'
    ...         print "%-24s %-10s %-10s %-26s" % (
    ...             pofile, untranslated, needs_review, message)

    >>> listing = find_tags_by_class(anon_browser.contents, 'listing')[0]
    >>> print_list_of_contributions(listing)
    Translation file         Untra... Needs... Latest translation
    English (en) translat... 6        0        2007-07-12    auto, esddsp...
    Spanish (es) translat... 2        0        2007-04-07    _: EMAIL OF ...
    Spanish (es) translat... 0        0        2007-01-24    test man pag...
    Spanish (es) translat... 14       2        2006-12-22    have    lalalala
    Japanese (ja) transla... 21       0        2005-10-11    %d contact    %...

When the user clicks one of the entries, he is shown a page listing
all translations done by Carlos in this file.

    >>> alsa_utils_link = 'Spanish (es) translation of alsa-utils in alsa-utils trunk'
    >>> anon_browser.getLink(alsa_utils_link).click()
    >>> anon_browser.title
    'Translations by Carlos...of alsa-utils...'

From the full listing of all contributions, Carlos can jump to the pages
containing only untranslated or only translations that need reviewing.

    >>> anon_browser.goBack()
    >>> untranslated_link = find_tags_by_class(anon_browser.contents,
    ...                                        'untranslated-count')[1]
    >>> extract_link_from_tag(untranslated_link)
    u'/alsa-utils/trunk/+pots/alsa-utils/es/+translate?show=untranslated'

    >>> unreviewed_link = find_tags_by_class(anon_browser.contents,
    ...                                      'unreviewed-count')[1]
    >>> extract_link_from_tag(unreviewed_link)
    u'/alsa-utils/trunk/+pots/alsa-utils/es/+translate?show=new_suggestions'

A person is created with a name containing characters that need escaping
before being used in query strings.

    >>> login('carlos@canonical.com')
    >>> foobar = factory.makePerson(name='foo+bar', email='blah@test.com')
    >>> message = factory.makeTranslationMessage(translator=foobar)
    >>> person_url = canonical_url(foobar, rootsite='translations')
    >>> logout()

When that person goes to see the translations she has done, she sees
a correctly encoded link to a filtered PO file page.

    >>> user_browser.open(person_url)
    >>> table = first_tag_by_class(user_browser.contents, 'listing')
    >>> tbody = table.find('tbody')
    >>> link = tbody.find('a')
    >>> link['href'].split('/')[-1]
    u'+filter?person=foo%2Bbar'
