= Sprint Attendance Page =

SprintAttendanceAddView is the view that handles attendance to meetings.

  >>> from zope.component import getMultiAdapter
  >>> from canonical.launchpad.ftests import login
  >>> from canonical.launchpad.interfaces import ISprintSet
  >>> from canonical.launchpad.webapp.servers import LaunchpadTestRequest

First we define a helper function.

  >>> def create_sprint_attendence_view(sprint, dates):
  ...     time_starts, time_ends = dates
  ...     form = {
  ...         'field.time_starts': time_starts,
  ...         'field.time_ends': time_ends,
  ...         'field.actions.register': 'Register'}
  ...     request = LaunchpadTestRequest(form=form)
  ...     request.method = 'POST'
  ...     view = getMultiAdapter((sprint, request), name='+attend')
  ...     return view

Grab the sprint we'll need to test this view.

  >>> ubz = getUtility(ISprintSet)['ubz']

This sprint doesn't have any attendees.

  >>> [attendee.name for attendee in ubz.attendees]
  []
  >>> ubz.time_starts
  datetime.datetime(2005, 10, 7, 23, 30, tzinfo=<UTC>)
  >>> ubz.time_ends
  datetime.datetime(2005, 11, 17, 0, 11, tzinfo=<UTC>)

  >>> login('test@canonical.com')

Choosing a starting date after the ending date returns a nice error message.

  >>> dates = ['2005-11-17', '2005-10-07']
  >>> sprint_attendance_view = create_sprint_attendence_view(ubz, dates)
  >>> sprint_attendance_view.initialize()
  >>> print sprint_attendance_view.getFieldError('time_ends')
  The end time must be after the start time.

Choosing a starting date after the meeting's end returns an error message.

  >>> dates = ['2006-01-01', '2006-02-01']
  >>> sprint_attendance_view = create_sprint_attendence_view(ubz, dates)
  >>> sprint_attendance_view.initialize()
  >>> print sprint_attendance_view.getFieldError('time_starts')
  Choose an arrival time before the end of the meeting.

Choosing a ending date before the meeting's start returns an error message.

  >>> dates = ['2005-07-01', '2005-08-01']
  >>> sprint_attendance_view = create_sprint_attendence_view(ubz, dates)
  >>> sprint_attendance_view.initialize()
  >>> print sprint_attendance_view.getFieldError('time_ends')
  Choose a departure time after the start of the meeting.

Entering a starting date before the meeting's start date and a finishing
date after the meeting's end date works because we assume you wanted the
meeting's start and end dates respectively.

  >>> dates = ['2005-07-01', '2005-12-01']
  >>> sprint_attendance_view = create_sprint_attendence_view(ubz, dates)
  >>> sprint_attendance_view.initialize()
  >>> sprint_attendance_view.errors
  []

Sample Person is now listed as an attendee.

  >>> ubz = getUtility(ISprintSet)['ubz']
  >>> [attendee.name for attendee in ubz.attendees]
  [u'name12']
  >>> sprint_attendance = ubz.attendances[0]

  >>> ubz.time_starts == sprint_attendance.time_starts
  True
  >>> ubz.time_ends == sprint_attendance.time_ends
  True

