= Bug notifications for comment syncing =

The bug comment syncing feature can be limited to a specific team. If
the comment_syncing_team config variable is set, comment notifications
related to a bug watch will be sent only to members of that team.

    >>> from canonical.config import config
    >>> config.malone.comment_syncing_team
    'launchpad-beta-testers'

Only imported comments are affected. If a bug comment is associated with
a bug watch, or a comment is added from the Bug Watch Updater, it won't
be sent to people not in the syncing team. The latter happens when an
initial comment import is done for a bug watch. We don't have any way of
linking it to a bug watch, apart from marking it as a comment from the
Bug Watch Updater.

    >>> from lp.registry.interfaces.person import IPersonSet
    >>> no_priv = getUtility(IPersonSet).getByName('no-priv')
    >>> syncing_team = getUtility(IPersonSet).getByName(
    ...     config.malone.comment_syncing_team)
    >>> no_priv.inTeam(syncing_team)
    False

    >>> import transaction
    >>> from canonical.testing.layers import LaunchpadZopelessLayer
    >>> LaunchpadZopelessLayer.switchDbUser('launchpad')
    >>> from canonical.launchpad.interfaces.message import IMessageSet
    >>> from canonical.launchpad.interfaces.launchpad import (
    ...     ILaunchpadCelebrities)
    >>> bug = factory.makeBug(
    ...     owner=no_priv,
    ...     bug_watch_url='http://example.com/show_bug.cgi?id=42')
    >>> some_bug_watch = bug.watches[0]
    >>> bug_watch_comment = bug.newMessage(
    ...     owner=no_priv, content='Imported comment',
    ...     bugwatch=some_bug_watch)
    >>> initial_import = getUtility(IMessageSet).fromText(
    ...     subject='initial comment import',
    ...     content='Comments have been imported.',
    ...     owner=getUtility(ILaunchpadCelebrities).bug_watch_updater)
    >>> bug.addCommentNotification(initial_import)
    >>> transaction.commit()

    >>> LaunchpadZopelessLayer.switchDbUser('bugnotification')
    >>> from canonical.launchpad.database.bugnotification import (
    ...     BugNotification)
    >>> [comment_notification] = BugNotification.selectBy(
    ...     message=bug_watch_comment)

    >>> from canonical.launchpad.scripts.bugnotification import (
    ...     construct_email_notifications)
    >>> notifications, messages = construct_email_notifications(
    ...     [comment_notification, ])
    >>> [message['To'] for message in messages]
    []
    >>> [initial_import_notification] = BugNotification.selectBy(
    ...     message=initial_import)
    >>> notifications, messages = construct_email_notifications(
    ...     [initial_import_notification, ])
    >>> [message['To'] for message in messages]
    []

Members of the syncing team will get the notifications.

    >>> LaunchpadZopelessLayer.switchDbUser('launchpad')
    >>> syncing_team.addMember(no_priv, no_priv)
    >>> transaction.commit()

    >>> LaunchpadZopelessLayer.switchDbUser('bugnotification')
    >>> notifications, messages = construct_email_notifications(
    ...     [comment_notification])
    >>> [message['To'] for message in messages]
    ['no-priv@canonical.com']
    >>> notifications, messages = construct_email_notifications(
    ...     [initial_import_notification])
    >>> [message['To'] for message in messages]
    ['no-priv@canonical.com']

If comment_syncing_team isn't set, notications are sent to other people
related to the bug as well.

    >>> from textwrap import dedent
    >>> config.push(
    ...     'no-comment-syncing-team', dedent("""
    ...         [malone]
    ...         comment_syncing_team:
    ...         """))
    >>> notifications, messages = construct_email_notifications(
    ...     [comment_notification])
    >>> len(messages) > 1
    True
    >>> notifications, messages = construct_email_notifications(
    ...     [initial_import_notification])
    >>> len(messages) > 1
    True

    >>> ignored = config.pop('no-comment-syncing-team')
