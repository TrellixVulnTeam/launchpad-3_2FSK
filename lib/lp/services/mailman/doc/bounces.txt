=================
Bounce processing
=================

Currently, we do no bounce processing for Launchpad mailing lists.  We still
run the bounce processor occasionally though in order to clear any accumulated
bounce messages.

    >>> from lp.services.mailman.testing import helpers
    >>> list_one = helpers.create_list('itest-one')
    >>> helpers.subscribe('Anne', 'itest-one')

A (faked) DSN bounce message is received from Anne's mail server.

    >>> from Mailman.Post import inject
    >>> from Mailman import mm_cfg

    >>> inject('itest-one', """\
    ... From: <mailer-daemon@example.com>
    ... Message-ID: <aardvark>
    ... MIME-Version: 1.0
    ... Content-Type: multipart/report; report-type=delivery-status;
    ...  boundary="AAA"
    ...
    ... --AAA
    ... ignore
    ...
    ... --AAA
    ... Content-Type: message/delivery-status
    ...
    ... Original-Recipient: rfc822; anne.person@example.com
    ... Action: failed
    ...
    ... --AAA--
    ... """, qdir=mm_cfg.BOUNCEQUEUE_DIR)

    # Because bounce processing is disabled, and because the bounce runner
    # provides no feedback when it discards bounce messages, there really is
    # no good way to prove that nothing is processed for the right reasons.
    # This is the best we can do.  If bounce processing were not disabled,
    # this wait would not time out and the getBounceInfo() call below would
    # return an object.  Take my word for it.
    >>> bounce_watcher.expecting_timeout = True
    >>> print bounce_watcher.wait_for_processing()
    Timed out

Even though the bounce message was processed, Anne has no bounce score because
no bounces are being registered.

    >>> from Mailman.MailList import MailList
    >>> mailing_list = MailList('itest-one', lock=False)
    >>> info = mailing_list.getBounceInfo('anne.person@example.com')
    >>> print info
    None
