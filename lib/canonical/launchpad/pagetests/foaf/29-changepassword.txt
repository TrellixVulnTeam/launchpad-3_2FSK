'foo' wants to change his password, so he goes to
/~foo/+changepassword and DO IT, but inadvertently he uses an illegal 
character in the new password.


  >>> browser = setupBrowser(auth='Basic foo@baz.com:f')
  >>> browser.open('http://launchpad.dev/~foo/+changepassword')
  >>> print browser.contents
  <...
  ...Change your password...

  >>> browser.getControl('Current password').value = 'f'
  >>> browser.getControl('New password').value = 'tésté'
  >>> browser.getControl(name='field.password_dupe').value = 'tésté'
  >>> browser.getControl('Change Password').click()
  >>> print browser.contents
  <...
  ...The password provided contains non-ASCII characters...


He enters the wrong password!

  >>> browser.getControl('Current password').value = 'wrong'
  >>> browser.getControl('New password').value = 'test'
  >>> browser.getControl(name='field.password_dupe').value = 'test'
  >>> browser.getControl('Change Password').click()
  >>> print browser.contents
  <...
  ...The provided password doesn't match your current password...


XXX: 20060809 jamesh
If I remove this next test, it seems to trigger a failure in 30-mergeperson.txt

He uses an illegal character in his current password, which is also
the wrong password:

  >>> browser.getControl('Current password').value = 'ééé'
  >>> browser.getControl('New password').value = 'test'
  >>> browser.getControl(name='field.password_dupe').value = 'test'
  >>> browser.getControl('Change Password').click()
  >>> print browser.contents
  <...
  ...The provided password doesn't match your current password...


And finally he uses a legal password, containing only ascii characters.

  >>> browser.getControl('Current password').value = 'f'
  >>> browser.getControl('New password').value = 'abc'
  >>> browser.getControl(name='field.password_dupe').value = 'abc'
  >>> browser.getControl('Change Password').click()
  >>> print browser.url
  http://launchpad.dev/~foo
  >>> print browser.contents
  <...
  ...Password changed successfully...


Now he logs in with his new password.  We use a new browser instance
to get rid of the previously set headers.

  >>> browser = setupBrowser()
  >>> browser.open('http://launchpad.dev/+login')
  >>> browser.getControl('E-mail address:', index=0).value = (
  ...     'bar.foo@canonical.com')
  >>> browser.getControl('Password:').value = 'abc'
  >>> browser.getControl('Log In').click()
  >>> print browser.url
  http://launchpad.dev
  >>> print browser.contents
  <...
  ...Logged in as...
  ...foo...
