= ZopelessTransactionManager =

The ZopelessTransactionManager used to be an alternative to the Zope
transaction manager and SQLOS database adapter.

With the move to Storm, it was converted to a small compatibility shim
used to configure the database adapter.

== Initialization ==

The ZopelessTransactionManager is initialized with its initZopeless()
class method.

    >>> from canonical.database.sqlbase import ZopelessTransactionManager
    >>> ZopelessTransactionManager.initZopeless(dbuser='launchpad_main')

After initZopeless() has been called, the '_installed' attribute of
ZopelessTransactionManager will be set to the transaction manager:

    >>> ZopelessTransactionManager._installed is ZopelessTransactionManager
    True

The initZopeless() call defaults to read committed isolation:

    >>> from canonical.database.sqlbase import cursor
    >>> c = cursor()
    >>> c.execute("SHOW transaction_isolation")
    >>> print c.fetchone()[0]
    read committed

The uninstall() method can be used to uninstall the transaction
manager:

    >>> ZopelessTransactionManager.uninstall()
    >>> print ZopelessTransactionManager._installed
    None

We can log in as alternative users with initZopeless():

    >>> ZopelessTransactionManager.initZopeless(dbuser='testadmin')
    >>> c = cursor()
    >>> c.execute("SELECT current_user")
    >>> print c.fetchone()[0]
    testadmin
    >>> ZopelessTransactionManager.uninstall()

Or we can specify other transaction isolation modes:

    >>> from canonical.database.sqlbase import (
    ...     ISOLATION_LEVEL_SERIALIZABLE)
    >>> ZopelessTransactionManager.initZopeless(
    ...     dbuser='librarian', isolation=ISOLATION_LEVEL_SERIALIZABLE)
    >>> c = cursor()
    >>> c.execute("SHOW transaction_isolation")
    >>> print c.fetchone()[0]
    serializable
    >>> ZopelessTransactionManager.uninstall()
