#!/usr/bin/python2.4
# Copyright 2007 Canonical Ltd.  All rights reserved.

import logging
import sys

import _pythonpath

from canonical.config import config

from canonical.launchpad.scripts import execute_zcml_for_scripts
from canonical.launchpad.scripts.base import LaunchpadScript
from canonical.launchpad.scripts.listteammembers import process_team, NoSuchTeamError


class ListTeamMembersScript(LaunchpadScript):

    description = "Create a list of members of a team."
    usage = "usage: %s [-e|--email-only|-f|--full-details] team-name [team-name-2] .. [team-name-n]" % sys.argv[0]
    loglevel = logging.INFO

    def add_my_options(self):
        self.parser.add_option('-e', '--email-only', metavar='EMAILONLY',
                               action='store',
                               help='Only print email addresses',
                               type='string', dest='emailonly', default=None)
        self.parser.add_option('-f', '--full-details', metavar='FULLDETAILS',
                               action='store',
                               help='Print full details',
                               type='string', dest='fulldetails', default=None)

    def main(self):

        if self.options.emailonly:
            display_option = 'email'
            teamnames = sys.argv[2:]
        elif self.options.fulldetails:
            display_option = 'full'
            teamnames = sys.argv[2:]
        else:
            display_option = False
            teamnames = sys.argv[1:]

        if not teamnames: self.parser.error('No team specified')

        emails = []
        for teamname in teamnames:
            try:
                emails.extend(process_team(teamname, display_option))
            except NoSuchTeamError:
                print "Error, no such team: %s" % teamname
                sys.exit(1)
        print "\n".join(sorted(list(set(emails))))
        return 0

if __name__ == '__main__':
    script = ListTeamMembersScript('canonical.launchpad.scripts.listteammembers')
    script.run()
