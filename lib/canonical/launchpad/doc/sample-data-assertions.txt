= Sample Data Assertions =

This set of doctests makes a set of assertions about the sample data we have
in the Launchpad application. This is designed to prevent people from
changing sample data in ways that will cause unexpected failures in
pagetests elsewhere.

After you add sample data to Launchpad, or modify existing data, you should
AT LEAST run this test to see that you haven't broken any assumptions.

== User Accounts and Teams ==

  >>> from zope.component import getUtility
  >>> from lp.registry.interfaces.person import IPersonSet
  >>> personset = getUtility(IPersonSet)

Here we make assertions about each of the key user accounts which should be
used in Launchpad page tests. These should be the ONLY user accounts
specifically referenced in Launchpad tests.

* No Team Memberships
  This user is not supposed to be a member of any teams.

  >>> no_team_memberships = personset.getByName('no-team-memberships')
  >>> no_team_memberships.team_memberships.count()
  0

* One Team Membership
  This user is supposed to be a member of only one team, the "Simple Team".

  >>> one_membership = personset.getByName('one-membership')
  >>> for t in one_membership.team_memberships: print t.team.displayname
  Simple Team


== Mentorship Page Tests ==

We will use bugs #2 and #8 and a specific blueprint as the test vehicles
for the mentoring set of pagetests. Bug #2 should be incomplete, and bug #8
complete.  The specification should be incomplete too. Finally, Bug #6
should be a duplicate, and should be incomplete.

  >>> from zope.component import getUtility
  >>> from lp.bugs.interfaces.bug import IBugSet, IDistributionSet
  >>> bugset = getUtility(IBugSet)
  >>> distroset = getUtility(IDistributionSet)
  >>> from canonical.launchpad.ftests import login
  >>> login('no-priv@canonical.com')
  >>> b2 = bugset.get(2)
  >>> b2.is_complete
  False
  >>> b8 = bugset.get(8)
  >>> b8.is_complete
  True
  >>> b6 = bugset.get(6)
  >>> b6.is_complete
  False
  >>> b6.duplicateof is not None
  True
  >>> kubuntu = distroset.getByName('kubuntu')
  >>> cluster_blueprint = kubuntu.getSpecification('cluster-installation')
  >>> cluster_blueprint.is_complete
  False

There should be no mentorships on any of these.

  >>> b2.mentoring_offers.count()
  0
  >>> b8.mentoring_offers.count()
  0
  >>> cluster_blueprint.mentoring_offers.count()
  0

