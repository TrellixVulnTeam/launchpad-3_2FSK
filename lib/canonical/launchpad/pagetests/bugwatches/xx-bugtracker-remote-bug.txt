Remote Bug Information Pages
============================

Launchpad provides the ability for bugs to "watch" remote bugs.  You
can easily see which remote bugs a Launchpad bug watches by looking at
the "Remote Bug Watches" portlet on the bug's page.

To see what Launchpad bugs are watching a particular remote bug, we
use a URL of the form /bugs/bugtrackers/$bugtrackername/$remotebug.

If there are multiple Launchpad bugs watching a particular remote bug,
then a list of the relevant Launchpad bugs:

  >>> print http(r"""
  ... GET /bugs/bugtrackers/mozilla.org/42 HTTP/1.1
  ... """)
  HTTP/1.1 200 Ok
  Content-Length: ...
  Content-Type: text/html;charset=utf-8
  ...
  <title>Remote Bug #42 in The Mozilla.org Bug Tracker</title>
  ...
  <a href=".../bugs/1">#1: Firefox does not support SVG</a>
  ...
  <a href=".../bugs/2">#2: Blackhole Trash folder</a>
  ...


If there is only a single bug watching the remote bug, then we skip
the list page and redirect the user directly to that bug's page:

  >>> print http(r"""
  ... GET /bugs/bugtrackers/mozilla.org/2000 HTTP/1.1
  ... """)
  HTTP/1.1 303 See Other
  Content-Length: ...
  Content-Type: text/plain
  Location: .../bugs/1
  <BLANKLINE>


If there are no bug watches for a particular remote bug, then a Not
Found page is generated:

  >>> print http(r"""
  ... GET /bugs/bugtrackers/mozilla.org/99999 HTTP/1.1
  ... """)
  HTTP/1.1 404 Not Found
  Content-Length: ...
  Content-Type: text/html;charset=utf-8
  ...


Private Bugs
------------

If a bug is marked private, and multiple Launchpad bugs are watching a
particular remote bug, we do not expose the title of the remote bug.

Mark bug 1 as private:

  >>> browser.addHeader('Authorization', 'Basic test@canonical.com:test')
  >>> browser.open('http://launchpad.dev/firefox/+bug/1')
  >>> browser.getLink('Visibility/security').click()
  >>> browser.url
  'http://launchpad.dev/firefox/+bug/1/+secrecy'
  >>> browser.getControl('Keep bug confidential').selected = True
  >>> browser.getControl('Change').click()
  >>> browser.url
  'http://launchpad.dev/firefox/+bug/1'


List Launchpad bugs watching Mozilla bug 42:

  >>> print http(r"""
  ... GET /bugs/bugtrackers/mozilla.org/42 HTTP/1.1
  ... """)
  HTTP/1.1 200 Ok
  Content-Length: ...
  Content-Type: text/html;charset=utf-8
  ...
  <title>Remote Bug #42 in The Mozilla.org Bug Tracker</title>
  ...
  <a href=".../bugs/1">#1: Private Bug</a>
  ...
  <a href=".../bugs/2">#2: Blackhole Trash folder</a>
  ...


The bug title is still provided if the user can view the private bug:

  >>> print http(r"""
  ... GET /bugs/bugtrackers/mozilla.org/42 HTTP/1.1
  ... Authorization: Basic dGVzdEBjYW5vbmljYWwuY29tOnRlc3Q=
  ... """)
  HTTP/1.1 200 Ok
  Content-Length: ...
  Content-Type: text/html;charset=utf-8
  ...
  <title>Remote Bug #42 in The Mozilla.org Bug Tracker</title>
  ...
  <a href=".../bugs/1">#1: Firefox does not support SVG</a>
  ...
  <a href=".../bugs/2">#2: Blackhole Trash folder</a>
  ...


For the case where the private bug is the only one watching the given
remote bug, we still perform a redirect (which will lead to a page
telling the user they are unauthorised to view the bug):

  >>> print http(r"""
  ... GET /bugs/bugtrackers/mozilla.org/2000 HTTP/1.1
  ... """)
  HTTP/1.1 303 See Other
  Content-Length: 0
  Content-Type: text/plain
  Location: .../bugs/1
  <BLANKLINE>


Set the bug back to public:

  >>> browser.open('http://launchpad.dev/firefox/+bug/1')
  >>> browser.getLink('Visibility/security').click()
  >>> browser.url
  'http://launchpad.dev/firefox/+bug/1/+secrecy'
  >>> browser.getControl('Keep bug confidential').selected = False
  >>> browser.getControl('Change').click()
  >>> browser.url
  'http://launchpad.dev/firefox/+bug/1'
