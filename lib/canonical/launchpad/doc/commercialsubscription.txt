= Commercial Subscriptions =

The CommercialSubscription class is used to track whether a project,
which does not qualify for free hosting, has an unexpired subscription.

    >>> from zope.component import getUtility
    >>> from canonical.launchpad.webapp.testing import verifyObject
    >>> from canonical.launchpad.interfaces import (
    ...     ICommercialSubscription, IProductSet)
    >>> from canonical.launchpad.ftests import login, ANONYMOUS
    >>> login(ANONYMOUS)

An open source project should not have a commercial subscription,
indicated by 'None'.

    >>> product_set = getUtility(IProductSet)
    >>> bzr = product_set.getByName('bzr')
    >>> print bzr.commercial_subscription
    None

Redeem a voucher and check that the commercial_subscription
attribute is correct.

    >>> owner = bzr.owner
    >>> owner.isTeam()
    False
    >>> bzr.redeemSubscriptionVoucher('asdf123', owner, owner, 12, 'notes')
    >>> verifyObject(ICommercialSubscription, bzr.commercial_subscription)
    True
    >>> print bzr.commercial_subscription.product.name
    bzr
    >>> print bzr.commercial_subscription.sales_system_id
    asdf123

The expiration date can be extended by redeeming another voucher.  In
real life this would be done nearer to the expiration date.  For
testing consistency, let's force the start and expiry dates to a known
date.

    >>> from zope.security.proxy import removeSecurityProxy
    >>> from datetime import datetime, timedelta
    >>> from pytz import UTC
    >>> subscription = removeSecurityProxy(bzr.commercial_subscription)
    >>> subscription.date_starts = datetime(2008,1,15,tzinfo=UTC)
    >>> subscription.date_expires = datetime(2009,1,15,tzinfo=UTC)
    >>> old_date_expires = bzr.commercial_subscription.date_expires
    >>> old_date_starts = bzr.commercial_subscription.date_starts
    >>> bzr.redeemSubscriptionVoucher('foo456', owner, owner, 12, 'notes')
    >>> print bzr.commercial_subscription.sales_system_id
    foo456

The start date should not have changed.

    >>> bzr.commercial_subscription.date_starts == old_date_starts
    True

The difference between the expiration dates is one year -- 365 days
for 2009.

    >>> expiry_diff = (bzr.commercial_subscription.date_expires -
    ...                old_date_expires)
    >>> expiry_diff == timedelta(365)
    True

A voucher can be redeemed for any number of months (as reported by the
Salesforce proxy).  Test for a 6 month subscription.

    >>> old_date_expires = bzr.commercial_subscription.date_expires
    >>> old_date_starts = bzr.commercial_subscription.date_starts
    >>> bzr.redeemSubscriptionVoucher('foo457', owner, owner, 6, 'notes')
    >>> print bzr.commercial_subscription.sales_system_id
    foo457

The start date did not change.

    >>> bzr.commercial_subscription.date_starts == old_date_starts
    True

The expiration date has been increased by six months, from Jan-15-2010
to Jul-15-2010.

    >>> expiry_diff = (bzr.commercial_subscription.date_expires -
    ...                old_date_expires)
    >>> expiry_diff == (datetime(2010,7,15) - datetime(2010,1,15))
    True

The commercial_subscription_is_due attribute is true if the license
does not qualify for free hosting and the commercial subscription
is inactive or about to expire.  The is_permitted attribute is
true if the project either has a qualifying license or has an active
commercial subscription. The qualifies_for_free_hosting attribute is
true, if automatically qualifying licenses are the only ones selected,
or if the license has been reviewed and been manually approved.

The commercial subscription is about to expire here.

    >>> login('foo.bar@canonical.com')
    >>> subscription = removeSecurityProxy(bzr.commercial_subscription)
    >>> bzr.licenses
    ()
    >>> # The commercial subscription is due within 30 days of expiration.
    >>> subscription.date_expires = (
    ...     datetime.now(UTC) + timedelta(29))
    >>> bzr.qualifies_for_free_hosting
    False
    >>> bzr.commercial_subscription_is_due
    True
    >>> bzr.commercial_subscription.is_active
    True
    >>> bzr.is_permitted
    True

The subscription will not expire for more than 30 days so a new
subscription is not due yet.

    >>> subscription.date_expires = (
    ...     datetime.now(UTC) + timedelta(31))
    >>> bzr.commercial_subscription_is_due
    False

Make the subscription no longer active.

    >>> # Make the subscription last 0 seconds.
    >>> subscription.date_expires = subscription.date_starts
    >>> bzr.commercial_subscription.is_active
    False
    >>> bzr.commercial_subscription_is_due
    True
    >>> bzr.is_permitted
    False

The qualifies_for_free_hosting attribute is False
if the product has License.OTHER_PROPRIETARY.

    >>> from canonical.launchpad.interfaces import License
    >>> bzr.licenses = [License.OTHER_PROPRIETARY]
    >>> bzr.qualifies_for_free_hosting
    False
    >>> bzr.licenses = [License.GNU_GPL_V2]
    >>> bzr.qualifies_for_free_hosting
    True

When the products license is OTHER_OPEN_SOURCE or the license_info
attribute contains a description of another license, the product
requires approval for free hosting. The qualifies_for_free_hosting
attribute is false for products that have licenses that required
approval, but were not approved. If the licenses or license_info
attributes are changed, the license_reviewed attribute is reset to
false. However, qualifies_for_free_hosting remains true until
it has been reviewed (license_reviewed is set to true). The
OTHER_PROPRIETARY license does not need to be reviewed as do the
OTHER_OPEN_SOURCE license or an unknown license in license_info.

    >>> bzr.license_approved
    False
    >>> bzr.license_info = 'blah'
    >>> bzr.qualifies_for_free_hosting, bzr.commercial_subscription_is_due
    (True, False)

    >>> bzr.license_reviewed = True
    >>> bzr.qualifies_for_free_hosting, bzr.commercial_subscription_is_due
    (False, True)

    >>> bzr.license_info = ''
    >>> bzr.licenses = [License.OTHER_OPEN_SOURCE]
    >>> bzr.license_reviewed
    False
    >>> bzr.qualifies_for_free_hosting, bzr.commercial_subscription_is_due
    (True, False)

    >>> bzr.license_reviewed = True
    >>> bzr.qualifies_for_free_hosting, bzr.commercial_subscription_is_due
    (False, True)

When the license is manually approved, a product qualifies for free
hosting; there is no commercial subscription due.

    >>> bzr.license_approved = True
    >>> bzr.qualifies_for_free_hosting, bzr.commercial_subscription_is_due
    (True, False)
