Bug Lists on the Front Page
===========================

On the bugs front page there is a list of the most recently reported
and recently fixed bugs, across all products and distributions.

To demonstrate this, a few fixed bugs must be created.

    >>> from zope.component import getUtility
    >>> from canonical.launchpad.ftests import login, logout
    >>> import transaction
    >>> from canonical.launchpad.interfaces import (
    ...     BugTaskImportance, BugTaskStatus, ILaunchBag)
    >>> login('foo.bar@canonical.com')
    >>> bigfixer = factory.makeProduct(name='bigfixer')
    >>> for bug_x in range(1, 11):
    ...     summary = 'Summary for new bug %d' % bug_x
    ...     bug = factory.makeBug(title=summary, product=bigfixer)
    ...     bug.default_bugtask.transitionToStatus(
    ...         BugTaskStatus.FIXRELEASED, getUtility(ILaunchBag).user)
    ...     bug.default_bugtask.transitionToImportance(
    ...         BugTaskImportance.HIGH, getUtility(ILaunchBag).user)
    >>> transaction.commit()
    >>> logout()


Reported bugs
-------------

The bugs front page can be consulted now for the list of reported bugs.

    >>> anon_browser.open('http://bugs.launchpad.dev/')
    >>> reported_bugs = find_tag_by_id(anon_browser.contents, 'reported-bugs')

These bugs use a color-coded icon, via a sprite class, as an
indication of the importance assigned to the bug.

    >>> high_bugs = find_tags_by_class(str(reported_bugs), 'sprite bug-high')
    >>> print high_bugs[0]
    <span class="sprite bug-high">
    </span>

The list of recently reported bugs contains up to the last 5 bugs reported
across Launchpad.

    >>> for tr in reported_bugs('tr'):
    ...     icon_td, summary_td, = tr('td')
    ...     print "%s: %s" % (
    ...         summary_td.b.renderContents().strip(),
    ...         summary_td.a.renderContents())
    Bigfixer:
             Summary for new bug 10
    <BLANKLINE>
    Bigfixer:
             Summary for new bug 9
    <BLANKLINE>
    Bigfixer:
             Summary for new bug 8
    <BLANKLINE>
    Bigfixer:
             Summary for new bug 7
    <BLANKLINE>
    Bigfixer:
             Summary for new bug 6
    <BLANKLINE>


Fixed bugs
----------

The bugs front page also can be consulted for the list of fixed bugs.

    >>> fixed_bugs = find_tag_by_id(anon_browser.contents, 'fixed-bugs')

These bugs also use a color-coded icon as an indication of the
importance assigned to the bug.

    >>> high_bugs = find_tags_by_class(str(fixed_bugs), 'sprite bug-high')
    >>> print high_bugs[0]
    <span class="sprite bug-high">
    </span>

The list of recently fixed bugs contains up to the last 5 bugs fixed
across Launchpad.

    >>> for tr in fixed_bugs('tr'):
    ...     icon_td, summary_td, = tr('td')
    ...     print "%s: %s" % (
    ...         summary_td.b.renderContents().strip(),
    ...         summary_td.a.renderContents())
    Bigfixer:
             Summary for new bug 10
    <BLANKLINE>
    Bigfixer:
             Summary for new bug 9
    <BLANKLINE>
    Bigfixer:
             Summary for new bug 8
    <BLANKLINE>
    Bigfixer:
             Summary for new bug 7
    <BLANKLINE>
    Bigfixer:
             Summary for new bug 6
    <BLANKLINE>
