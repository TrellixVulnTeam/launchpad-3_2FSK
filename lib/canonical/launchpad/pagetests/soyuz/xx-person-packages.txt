= Person Packages =

Here we demonstrate a page that lists packages maintained by a particular
launchpad person.  

  >>> browser.open("http://launchpad.dev/~name16/+packages")
  >>> browser.title
  'Packages maintained by Foo Bar'

name16, aka the esteemed Foo Bar, has 9 maintained packages in the sample
data.  The page lists columns of data, "Name", "Uploaded To" and "Version"
that link to a distributionsourcepackage, distroseriessourcepackage and
distrosourcepackagerelease respectively:

  >>> distrosrcpackages = find_tags_by_class(browser.contents,
  ...     'distrosrcpackage')
  >>> distroseriessrcpackages = find_tags_by_class(browser.contents,
  ...     'distroseriessrcpackage')
  >>> distrosrcpackagereleases = find_tags_by_class(browser.contents,
  ...     'distrosrcpackagerelease')

Following a link in any item in distrosrcpackages should take us to a
distribution source package page.  We'll use "foobar" on the second line here
as it has working links in the sample data:

  >>> print distrosrcpackages[1]
  <a class="distrosrcpackage" href="/ubuntu/+source/foobar">foobar</a>
  >>> browser.getLink(url="/ubuntu/+source/foobar").click()
  >>> browser.title
  'Source Package "foobar" in Ubuntu Linux'

Same process for distroseriessrcpackages should take us to a
distribution series source package page:

  >>> print distroseriessrcpackages[1]
  <a class="distroseriessrcpackage" href="/ubuntu/breezy-autotest/+source/foobar">Ubuntu Breezy-autotest</a>
  >>> browser.goBack()
  >>> browser.getLink(
  ...     url="/ubuntu/breezy-autotest/+source/foobar").click()
  >>> browser.title
  'Breezy Badger Autotest source packages'

Same again for distrosrcpackagereleases should take us to a
distribution source package release page:

  >>> print distrosrcpackagereleases[1]
  <a class="distrosrcpackagerelease" href="/ubuntu/+source/foobar/1.0">1.0</a>
  >>> browser.goBack()
  >>> browser.getLink(url="/ubuntu/+source/foobar/1.0").click()
  >>> browser.title
  'foobar 1.0 (source) in Ubuntu'

