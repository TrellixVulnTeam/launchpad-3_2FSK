= Merging people or teams =

Launchpad admins can merge any two people or teams, without the need of any
email address confirmation or something like that.  There's one page for
merging people and another one for merging teams, which obviously are only
accessible to LP admins.

    >>> user_browser.open('http://launchpad.dev/people/+adminpeoplemerge')
    Traceback (most recent call last):
    ...
    Unauthorized: ...
    >>> user_browser.open('http://launchpad.dev/people/+adminteammerge')
    Traceback (most recent call last):
    ...
    Unauthorized: ...

When there are email addresses associated with the person/team being merged
into another one, a notification is shown to inform the user these emails
are going to be transfered.

    >>> admin_browser.open('http://launchpad.dev/people/+adminpeoplemerge')
    >>> admin_browser.getControl('Duplicated Person').value = 'spiv'
    >>> admin_browser.getControl('Target Person').value = 'salgado'
    >>> admin_browser.getControl('Merge').click()

    >>> admin_browser.url
    'http://launchpad.dev/people/+adminpeoplemerge'
    >>> print get_feedback_messages(admin_browser)[0]
    The following email addresses are owned by Andrew Bennetts and are going
    to be transferred to Guilherme Salgado: andrew.bennetts@ubuntulinux.com

If the user confirms, spiv will be merged into salgado.

    >>> admin_browser.getControl('Merge').click()
    >>> admin_browser.url
    'http://launchpad.dev/~salgado'

    >>> from zope.component import getUtility
    >>> from canonical.launchpad.ftests import ANONYMOUS, login, logout
    >>> from canonical.launchpad.interfaces import IMailingListSet, IPersonSet
    >>> login(ANONYMOUS)
    >>> person_set = getUtility(IPersonSet)
    >>> person_set.getByEmail('andrew.bennetts@ubuntulinux.com').name
    u'salgado'

    >>> spiv = person_set.getByName('spiv-merged', ignore_merged=False)
    >>> spiv.merged.name
    u'salgado'

    >>> logout()

As said before, there's a separate page for merging teams.  In this case
there's no email addresses to be transfered, so the merge is done without
asking the user for confirmation.

    >>> admin_browser.open('http://launchpad.dev/people/+adminteammerge')
    >>> admin_browser.getControl('Duplicated Team').value = (
    ...     'landscape-developers')
    >>> admin_browser.getControl('Target Team').value = 'guadamen'
    >>> admin_browser.getControl('Merge').click()

    >>> admin_browser.url
    'http://launchpad.dev/~guadamen'

    >>> login(ANONYMOUS)
    >>> landscape = person_set.getByName(
    ...     'landscape-developers-merged', ignore_merged=False)
    >>> landscape.merged.name
    u'guadamen'

If the duplicated team is associated to mailing list, it can't be merged,
though.

    >>> guadamen = person_set.getByName('guadamen')
    >>> mailing_list = getUtility(IMailingListSet).new(guadamen)
    >>> logout()

    >>> admin_browser.open('http://launchpad.dev/people/+adminteammerge')
    >>> admin_browser.getControl('Duplicated Team').value = 'guadamen'
    >>> admin_browser.getControl('Target Team').value = 'ubuntu-team'
    >>> admin_browser.getControl('Merge').click()

    >>> admin_browser.url
    'http://launchpad.dev/people/+adminteammerge'

    >>> print get_feedback_messages(admin_browser)
    [u'There is 1 error.',
     u"guadamen is associated with a Launchpad mailing list;
       we can't merge it."]

We also can't (for obvious reasons) merge any person/team into itself.

    >>> admin_browser.getControl('Duplicated Team').value = 'ubuntu-team'
    >>> admin_browser.getControl('Target Team').value = 'ubuntu-team'
    >>> admin_browser.getControl('Merge').click()

    >>> admin_browser.url
    'http://launchpad.dev/people/+adminteammerge'

    >>> print get_feedback_messages(admin_browser)
    [u'There is 1 error.', u"You can't merge ubuntu-team into itself."]

Nor can we merge a person into a team or a team into a person.

    >>> admin_browser.getControl('Duplicated Team').value = 'ubuntu-team'
    >>> admin_browser.getControl('Target Team').value = 'salgado'
    >>> admin_browser.getControl('Merge').click()

    >>> admin_browser.url
    'http://launchpad.dev/people/+adminteammerge'

    # Yes, the error message is not of much help, but this UI is only for
    # admins and they're supposed to know what they're doing.
    >>> print get_feedback_messages(admin_browser)
    [u'There is 1 error.', u'Constraint not satisfied']

