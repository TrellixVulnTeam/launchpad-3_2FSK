== Navigating a PPA ==

The PPA owned by a user are accessible from on the user page.

    >>> anon_browser.open('http://launchpad.dev/~cprov')

That 'Personal package archives' section in the page body can be
focused using the link in the navigation menu with the same name.

    >>> print anon_browser.getLink('Personal Package Archives').url
    http://launchpad.dev/~cprov#ppas

For context where a PPA is already present it is listed.

    >>> print_tag_with_id(anon_browser.contents, 'ppas')
    Personal package archives
    PPA for Celso Providelo

And the users can click on the item and will be taken to the PPA page.

    >>> anon_browser.getLink('PPA for Celso Providelo').click()

    >>> anon_browser.url
    'http://launchpad.dev/~cprov/+archive/ppa'

    >>> anon_browser.title
    'PPA for Celso Providelo'

The navigation menu item is presented also for person/team with no
PPA, and performs the same action, focus the inline PPA section which
allows users with permission to create a PPA.

    >>> cprov_browser = setupBrowser(
    ...     auth="Basic celso.providelo@canonical.com:cprov")
    >>> cprov_browser.open("http://launchpad.dev/~cprov")
    >>> cprov_browser.getLink('Launchpad Buildd Admins').click()

    >>> print cprov_browser.title
    Launchpad Buildd Admins in Launchpad

    >>> print cprov_browser.getLink('Personal Package Archives').url
    http://launchpad.dev/~launchpad-buildd-admins#ppas

    >>> print_tag_with_id(cprov_browser.contents, 'ppas')
    Personal package archives
    Create a new PPA

    >>> print cprov_browser.getLink('Create a new PPA').url
    http://launchpad.dev/~launchpad-buildd-admins/+activate-ppa

If the user has no permission, the link to create a new PPA is not
presented, but the navigation-menu artifact and the PPA section still
present.

    >>> browser.open('http://launchpad.dev/~launchpad-buildd-admins')

    >>> print browser.getLink('Personal Package Archives').url
    http://launchpad.dev/~launchpad-buildd-admins#ppas

    >>> print_tag_with_id(browser.contents, 'ppas')
    Personal package archives

While navigating around the PPA the "structural location" includes a PPA:

    >>> print_location(anon_browser.contents)
    Hierarchy: Launchpad > Celso Providelo > default PPA
    Tabs:
    * Overview (selected) - http://launchpad.dev/~cprov
    * Code - http://code.launchpad.dev/~cprov
    * Bugs - http://bugs.launchpad.dev/~cprov
    * Blueprints - http://blueprints.launchpad.dev/~cprov
    * Translations - http://translations.launchpad.dev/~cprov
    * Answers - http://answers.launchpad.dev/~cprov
    Main heading: PPA for Celso Providelo

You can see the build details of the packages in the archive by using
the 'View build records' link.

    >>> anon_browser.getLink('View build records').click()
    >>> anon_browser.title
    'Builds for PPA for Celso Providelo'

    >>> anon_browser.url
    'http://launchpad.dev/~cprov/+archive/ppa/+builds'

The user could return to the 'PPA' overview by using the breadcrumb link.

    >>> print anon_browser.getLink('default PPA').url
    http://launchpad.dev/%7Ecprov/+archive/ppa

The user can navigate to an individual build details:

    >>> anon_browser.getControl('All states').click()
    >>> anon_browser.getControl('Update').click()
    >>> anon_browser.getLink('i386 build of iceweasel').click()
    >>> anon_browser.title
    'i386 build of iceweasel 1.0 in ubuntu warty RELEASE'

    >>> print_location(anon_browser.contents)
    Hierarchy: Launchpad > Celso Providelo > default PPA
    Tabs:
    * Overview (selected) - http://launchpad.dev/~cprov
    * Code - http://code.launchpad.dev/~cprov
    * Bugs - http://bugs.launchpad.dev/~cprov
    * Blueprints - http://blueprints.launchpad.dev/~cprov
    * Translations - http://translations.launchpad.dev/~cprov
    * Answers - http://answers.launchpad.dev/~cprov
    Main heading:
    i386 build of iceweasel 1.0 in ubuntu warty RELEASE

From that page the user could return either to the build records listing
or the PPA overview.

    >>> anon_browser.getLink('View build records').url
    'http://launchpad.dev/~cprov/+archive/ppa/+builds'
    >>> anon_browser.getLink('View PPA').url
    'http://launchpad.dev/~cprov/+archive/ppa'

When the number of packages in the PPA is large the user will see them
displayed in batches.

    >>> anon_browser.open('http://launchpad.dev/~cprov/+archive/ppa?batch=1')

Since he is on the first page, the 'First' and 'Previous' links are
inactive:

    >>> 'Previous' in anon_browser.contents
    True
    >>> anon_browser.getLink('Previous')
    Traceback (most recent call last):
      ..
    LinkNotFoundError...
    >>> 'First' in anon_browser.contents
    True
    >>> anon_browser.getLink('First')
    Traceback (most recent call last):
      ..
    LinkNotFoundError...

The user does not see the package he is looking for and proceeds to the
next page.

    >>> anon_browser.getLink('Next').click()

The package of interest is not on this page either so he goes to the
next page.

    >>> anon_browser.getLink('Next').click()

This is the last page, so the next and last links are inactive.

    >>> 'Next' in anon_browser.contents
    True
    >>> anon_browser.getLink('Next')
    Traceback (most recent call last):
      ..
    LinkNotFoundError...
    >>> 'Last' in anon_browser.contents
    True
    >>> anon_browser.getLink('Last')
    Traceback (most recent call last):
      ..
    LinkNotFoundError...

The 'First' and 'Previous' links, however, are now active.

    >>> anon_browser.getLink('First').url
    'http://launchpad.dev/%7Ecprov/+archive/ppa/+index?start=0&batch=1'

    >>> anon_browser.getLink('Previous').url
    'http://launchpad.dev/%7Ecprov/+archive/ppa/+index?start=1&batch=1'
