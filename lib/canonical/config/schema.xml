<schema extends="../../zope/app/server/schema.xml">

    <!--
    The syntax of this file is documented in lib/ZConfig/doc/zconfig.pdf

    I think we should avoid using anything except strings as configuration
    items. Although we could stick complex objects into the configuration,
    this will make using the configuration complex and surprising. Instead,
    I suggest that the complex objects kept as utilities that use the
    configuration to set themselves up.

    It would be possible to split this file up into a number of smaller
    components, tieing the configuration to particular areas.
    -->

    <!-- First we define all the section types. -->

    <sectiontype name="launchpad">
        <key name="dbuser" datatype="string" default="launchpad" />
        <key name="root_url" datatype="canonical.config.urlbase"
            required="yes" />
        <key name="errors_address" datatype="string" required="yes" />
        <key name="bugs_domain" datatype="string" required="yes" />
        <key name="db_statement_timeout" datatype="integer" required="no" />
    </sectiontype>

    <sectiontype name="librarian_server">
        <!-- Not 'existing-directory' because the test runner needs to
        create it. Not 'existing-dirpath' because ZConfig will enforce it
        for all sections, not just the one we are using -->
        <key name="root" datatype="string" required="yes" />
        <key name="launch" datatype="boolean" required="no" default="no" />
        <key name="spew" datatype="boolean" required="no" default="no" />
        <key name="upstream_url" datatype="canonical.config.urlbase"
            required="no" />
        <key name="logfile" datatype="string" required="no" default="-" />
    </sectiontype>

    <sectiontype name="librarian">
        <key name="dbuser" datatype="string" default="librarian" />

        <key name="upload_port" datatype="port-number" required="yes">
            <description>
                Port number Librarian listens for storage requests on
            </description>
        </key>

        <key name="download_port" datatype="port-number" required="yes">
            <description>
                Port number Librarian listens for HTTP GET and 
                HEAD requests on
            </description>
        </key>

        <key name="upload_host" datatype="ipaddr-or-hostname" required="yes">
            <description>
                Host Librarian is listening on for storage requests
            </description>
        </key>

        <key name="download_host" datatype="ipaddr-or-hostname" required="yes">
            <description>
                Host Librarian is listening on for HTTP requests
            </description>
        </key>

        <key name="download_url" datatype="canonical.config.urlbase"
            required="yes">
            <description>
                The base URL used to generate URLs to the Library contents.
                Note that this might be on a different host or port to what is
                specified above if access to the Library is via Apache
                redirects.
            </description>
        </key>

        <section name="*" type="librarian_server" attribute="server" 
            required="no" />
    </sectiontype>

    <sectiontype name="zopeless">
        <description>
            Clusters zopeless specific configuration. Ideally, this section
            will disappear as Zope3 land and Python land grow closer
        </description>
        <key name="send_email" datatype="boolean" required="yes" />
        <key name="smtp_host" datatype="ipaddr-or-hostname" required="no" 
            default="localhost" />
        <key name="smtp_port" datatype="port-number" required="no"
            default="25" />
    </sectiontype>


    <sectiontype name="gpghandler">
        <description>
            This utility is resposible for GPG operations like:
        sign/verify and encrypt/decrypt. it needs a "home" to allocate
        the runtime build configuration file and keyring and an
        addresss, "host:port",  pointing a reliable keyserver.
        </description>    
        <key name="home" datatype="existing-dirpath" required="yes">
            <description>
                Current GNUPGHOME directory,  a configuration file will be
                allocated there according our aims and the current keyring
                will be stored there. 	      
            </description>
        </key>
        <key name="host" datatype="ipaddr-or-hostname" required="yes">
            <description>
                Host running PKS-like (SKS) keyserver Application.
            </description>
        </key>
        <key name="port" datatype="port-number" required="yes">
            <description>
                Port number on Host to access the keyserver
            </description>
        </key>
    </sectiontype>

    <sectiontype name="zeca">
        <description>
            Stubed Key server for test proposes, it's able to server
        in SKS fortmat, a restricted set of keys. (fixed address at
        localhost:11371) 
        </description>
        <!-- Not 'existing-directory' because the test runner needs to
            create it  as librarian one-->
        <key name="root" datatype="string" required="no">
            <description>
                Directory to be created to store the pre-installed key-files
            </description>
	</key>
    </sectiontype>

    <sectiontype name="dyson">
        <key name="dbuser" datatype="string" default="dyson" />

	<!-- Not 'existing-directory' because dyson will create it -->
	<key name="cache_path" datatype="string" required="yes">
	    <description>
	        Location on disk to store the visited URL cache, used to
		avoid utterly killing remote sites each time and play
		nice with the world.
	    </description>
	</key>
    </sectiontype>

    <sectiontype name="gina">
        <key name="dbuser" datatype="string" default="gina">
            <description>
                The database user wich will be used to make the
                package imports.
            </description>
	</key>
    </sectiontype>

    <sectiontype name="karmacacheupdater">
        <key name="dbuser" datatype="string" default="karma">
            <description>
                The database user wich will be used to update the karmacache
                table.
            </description>
	</key>
    </sectiontype>

    <sectiontype name="trebuchet_server">
        <!-- Not 'existing-directory' because the test runner needs to
        create it. Not 'existing-dirpath' because ZConfig will enforce it
        for all sections, not just the one we are using -->
        <key name="root" datatype="string" required="yes" />
        <key name="launch" datatype="boolean" required="no" default="no" />
        <key name="spew" datatype="boolean" required="no" default="no" />
        <key name="logfile" datatype="string" required="no" default="-" />
    </sectiontype>

    <sectiontype name="trebuchet">
        <key name="dbuser" datatype="string" default="trebuchet" />

        <key name="port" datatype="port-number" default="4280">
            <description>
                Port number Trebuchet listens for XML-RPC requests on.
            </description>
        </key>

        <section name="*" type="trebuchet_server" attribute="server" 
            required="no" />
    </sectiontype>

    <sectiontype name="canonical" type=".BaseConfig">
        <key name="dbhost" datatype="ipaddr-or-hostname" required="no" />
        <key name="dbname" datatype="string" required="yes" />
        <key name="chunkydiff" datatype="boolean"
            required="no" default="true" />
        <key name="show_tracebacks" datatype="boolean"
            required="no" default="false" />
        <key name="bounce_address" datatype="string" required="no"
            default="bounces@canonical.com" />
        <key name="admin_address" datatype="string" required="no"
            default="system-error@launchpad.ubuntu.com" />
        <key name="pid_dir" datatype="existing-directory" required="no"
            default="/tmp" />
        <section name="*" type="launchpad" attribute="launchpad" />
        <section name="*" type="librarian" attribute="librarian" />
        <section name="*" type="zopeless" attribute="zopeless" />
        <section name="*" type="gpghandler" attribute="gpghandler" />
        <section name="*" type="zeca" attribute="zeca" />
        <section name="*" type="dyson" attribute="dyson" />
        <section name="*" type="gina" attribute="gina" />
        <section name="*" type="trebuchet" attribute="trebuchet" />
        <section name="*" type="karmacacheupdater"
            attribute="karmacacheupdater" />
    </sectiontype>

    <!-- Now specify where the section types may be rooted in the config file
    -->
    <multisection name="+" type="canonical" attribute="canonical" />
</schema>
