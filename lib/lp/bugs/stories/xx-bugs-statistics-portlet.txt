= Bug statistics portlet =

The distribution, project group and project bug listings contain a
portlet that shows bug statistics for the target. Each statistic is a
link to filter the listing to show just those bugs. This portlet is
served in a separate request; the request is issued via Javascript and
inserted into the page later.

== Distribution ==

    >>> path = 'debian'

If the user is not logged-in a subscribe link is shown along with some
general stats.

    >>> from lp.bugs.tests.bug import (
    ...     print_bugfilters_portlet_unfilled,
    ...     print_bugfilters_portlet_filled)
    >>> print_bugfilters_portlet_unfilled(anon_browser, path)
    Open bugs
    Critical bugs
    Bugs fixed elsewhere
    New bugs
    Open CVE bugs - CVE reports
    Bugs with patches
    Subscribe to bug mail
      --> http://bugs.launchpad.dev/debian/+subscribe

    >>> print_bugfilters_portlet_filled(anon_browser, path)
    3 Open bugs
    0 Critical bugs
    0 Bugs fixed elsewhere
    1 New bugs
    2 Open CVE bugs - CVE reports
    0 Bugs with patches

Once the user has identified him or herself, information on assigned
bugs is also shown.

    >>> print_bugfilters_portlet_unfilled(user_browser, path)
    Open bugs
    Bugs assigned to me
    Critical bugs
    Bugs fixed elsewhere
    New bugs
    Open CVE bugs - CVE reports
    Bugs with patches
    Subscribe to bug mail
      --> http://bugs.launchpad.dev/debian/+subscribe

    >>> print_bugfilters_portlet_filled(user_browser, path)
    3 Open bugs
    0 Bugs assigned to me
    0 Critical bugs
    0 Bugs fixed elsewhere
    1 New bugs
    2 Open CVE bugs - CVE reports
    0 Bugs with patches

The content includes a link to the distribution CVE report.

    >>> print user_browser.getLink('CVE reports').url
    http://bugs.launchpad.dev/debian/+cve


== Distribution Series ==

    >>> path = 'debian/woody'

If the user is not logged-in general stats are shown. There is also a
link to review nominations.

    >>> print_bugfilters_portlet_unfilled(anon_browser, path)
    Open bugs
    Critical bugs
    Bugs fixed elsewhere
    New bugs
    Open CVE bugs - CVE reports
    Bugs with patches
    Subscribe to bug mail
      --> http://bugs.launchpad.dev/debian/woody/+subscribe
    Review nominations
      --> http://bugs.launchpad.dev/debian/woody/+nominations

    >>> print_bugfilters_portlet_filled(anon_browser, path)
    2 Open bugs
    0 Critical bugs
    0 Bugs fixed elsewhere
    2 New bugs
    1 Open CVE bugs - CVE reports
    0 Bugs with patches

Once the user has identified him or herself, information on assigned
bugs is also shown.

    >>> print_bugfilters_portlet_unfilled(user_browser, path)
    Open bugs
    Bugs assigned to me
    Critical bugs
    Bugs fixed elsewhere
    New bugs
    Open CVE bugs - CVE reports
    Bugs with patches
    Subscribe to bug mail
      --> http://bugs.launchpad.dev/debian/woody/+subscribe
    Review nominations
      --> http://bugs.launchpad.dev/debian/woody/+nominations

    >>> print_bugfilters_portlet_filled(user_browser, path)
    2 Open bugs
    0 Bugs assigned to me
    0 Critical bugs
    0 Bugs fixed elsewhere
    2 New bugs
    1 Open CVE bugs - CVE reports
    0 Bugs with patches

The content includes a link to the distribution CVE report.

    >>> print user_browser.getLink('CVE reports').url
    http://bugs.launchpad.dev/debian/woody/+cve


== Distribution Source Package ==

    >>> path = 'debian/+source/mozilla-firefox'

If the user is not logged-in general stats are shown.

    >>> print_bugfilters_portlet_unfilled(anon_browser, path)
    Open bugs
    Critical bugs
    Bugs fixed elsewhere
    New bugs
    Open CVE bugs
    Bugs with patches
    Subscribe to bug mail
      --> http://bugs.launchpad.dev/debian/+source/mozilla-firefox/+subscribe

    >>> print_bugfilters_portlet_filled(anon_browser, path)
    3 Open bugs
    0 Critical bugs
    0 Bugs fixed elsewhere
    1 New bugs
    2 Open CVE bugs
    0 Bugs with patches

Once the user has identified him or herself, information on assigned
bugs is also shown.

    >>> print_bugfilters_portlet_unfilled(user_browser, path)
    Open bugs
    Bugs assigned to me
    Critical bugs
    Bugs fixed elsewhere
    New bugs
    Open CVE bugs
    Bugs with patches
    Subscribe to bug mail
      --> http://bugs.launchpad.dev/debian/+source/mozilla-firefox/+subscribe

    >>> print_bugfilters_portlet_filled(user_browser, path)
    3 Open bugs
    0 Bugs assigned to me
    0 Critical bugs
    0 Bugs fixed elsewhere
    1 New bugs
    2 Open CVE bugs
    0 Bugs with patches

Note that the "CVE reports" link is not shown above; distribution
source packages do not have a CVE reports page.

    >>> print user_browser.getLink('CVE reports').url
    Traceback (most recent call last):
    ...
    LinkNotFoundError


== Source Package in Distribution Series ==

    >>> path = 'debian/woody/+source/mozilla-firefox'

If the user is not logged-in general stats are shown. There is no
option to subscribe to bug mail.

    >>> print_bugfilters_portlet_unfilled(anon_browser, path)
    Open bugs
    Critical bugs
    Bugs fixed elsewhere
    New bugs
    Open CVE bugs
    Bugs with patches

    >>> print_bugfilters_portlet_filled(anon_browser, path)
    2 Open bugs
    0 Critical bugs
    0 Bugs fixed elsewhere
    2 New bugs
    1 Open CVE bugs
    0 Bugs with patches

Once the user has identified him or herself, information on assigned
bugs is also shown.

    >>> print_bugfilters_portlet_unfilled(user_browser, path)
    Open bugs
    Bugs assigned to me
    Critical bugs
    Bugs fixed elsewhere
    New bugs
    Open CVE bugs
    Bugs with patches
    
    >>> print_bugfilters_portlet_filled(user_browser, path)
    2 Open bugs
    0 Bugs assigned to me
    0 Critical bugs
    0 Bugs fixed elsewhere
    2 New bugs
    1 Open CVE bugs
    0 Bugs with patches

Note that the "CVE reports" link is not shown above; source packages
do not have a CVE reports page.

    >>> print user_browser.getLink('CVE reports').url
    Traceback (most recent call last):
    ...
    LinkNotFoundError


== Project group ==

    >>> path = 'mozilla'

If the user is not logged-in general stats are shown.

    >>> print_bugfilters_portlet_unfilled(anon_browser, path)
    Open bugs
    Critical bugs
    Bugs fixed elsewhere
    New bugs
    Open CVE bugs
    Bugs with patches
    Subscribe to bug mail
      --> http://bugs.launchpad.dev/mozilla/+subscribe

    >>> print_bugfilters_portlet_filled(anon_browser, path)
    4 Open bugs
    1 Critical bugs
    0 Bugs fixed elsewhere
    4 New bugs
    1 Open CVE bugs
    0 Bugs with patches

Once the user has identified him or herself, information on assigned
bugs is also shown.

    >>> print_bugfilters_portlet_unfilled(user_browser, path)
    Open bugs
    Bugs assigned to me
    Critical bugs
    Bugs fixed elsewhere
    New bugs
    Open CVE bugs
    Bugs with patches
    Subscribe to bug mail
      --> http://bugs.launchpad.dev/mozilla/+subscribe

    >>> print_bugfilters_portlet_filled(user_browser, path)
    4 Open bugs
    0 Bugs assigned to me
    1 Critical bugs
    0 Bugs fixed elsewhere
    4 New bugs
    1 Open CVE bugs
    0 Bugs with patches

Note that the "CVE reports" link is not shown above; project groups do
not have a CVE reports page.

    >>> print user_browser.getLink('CVE reports').url
    Traceback (most recent call last):
    ...
    LinkNotFoundError


== Project ==

    >>> path = 'firefox'

If the user is not logged-in general stats are shown.

    >>> print_bugfilters_portlet_unfilled(anon_browser, path)
    Open bugs
    Critical bugs
    Bugs fixed elsewhere
    New bugs
    Open CVE bugs - CVE reports
    Bugs with patches
    Subscribe to bug mail
      --> http://bugs.launchpad.dev/firefox/+subscribe

    >>> print_bugfilters_portlet_filled(anon_browser, path)
    3 Open bugs
    1 Critical bugs
    0 Bugs fixed elsewhere
    3 New bugs
    1 Open CVE bugs - CVE reports
    0 Bugs with patches

Once the user has identified him or herself, information on assigned
bugs is also shown.

    >>> print_bugfilters_portlet_unfilled(user_browser, path)
    Open bugs
    Bugs assigned to me
    Critical bugs
    Bugs fixed elsewhere
    New bugs
    Open CVE bugs - CVE reports
    Bugs with patches
    Subscribe to bug mail
      --> http://bugs.launchpad.dev/firefox/+subscribe

    >>> print_bugfilters_portlet_filled(user_browser, path)
    3 Open bugs
    0 Bugs assigned to me
    1 Critical bugs
    0 Bugs fixed elsewhere
    3 New bugs
    1 Open CVE bugs - CVE reports
    0 Bugs with patches


The content includes a link to the distribution CVE report.

    >>> print user_browser.getLink('CVE reports').url
    http://bugs.launchpad.dev/firefox/+cve
