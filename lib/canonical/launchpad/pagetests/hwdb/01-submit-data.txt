= Submissions to the hardware database =

Submissions to the hardware database are done at the following URL:

    >>> browser.open('http://launchpad.dev/+hwdb/+submit')

All form fields must be filled with valid values.

    >>> from StringIO import StringIO
    >>> submit_data = {
    ...     'Date Created:': '2007-01-01',
    ...     'Format Version:': ['VERSION_1'],
    ...     'Unique Submission Key:': 'unique-id-1',
    ...     'Email address:': 'test@canonical.com',
    ...     'Distribution:': 'ubuntu',
    ...     'Distribution Release:': '5.04',
    ...     'Processor Architecture:': 'i386',
    ...     'System name:': 'Fujitsu_CY26',
    ... }
    >>> submit_data_checkboxes = {
    ...     'Private Submission': False,
    ...     'Contactable': False,
    ... }
    >>> submit_file = StringIO('some data')
    >>> def fill_form(
    ...     browser, submit_data, submit_data_checkboxes, filedata, filename):
    ...     for label in submit_data.keys():
    ...         control = browser.getControl(label)
    ...         control.value = submit_data[label]
    ...     for label in submit_data_checkboxes.keys():
    ...         control = browser.getControl(label)
    ...         control.selected = submit_data_checkboxes[label]
    ...     if filedata is not None:
    ...         filedata.seek(0)
    ...         control = browser.getControl('Submission data:')
    ...         control.add_file(filedata, 'text/plain', filename)
    >>> fill_form(
    ...     browser, submit_data, submit_data_checkboxes, submit_file,
    ...     'test.txt')
    >>> browser.getControl('Upload').click()

For easy error checks by the HWDB client, an extra header is added, if the
data has successfully been uploaded.

    >>> print browser.headers
    Status: 200 Ok
    Content-Length: ...
    Content-Type: text/html;charset=utf-8
    Vary: ...
    X-Launchpad-Hwdb-Submission: OK data stored
    ...

Human users get a message too.

    >>> for tag in find_tags_by_class(
    ...     browser.contents, 'informational message'):
    ...     print tag
    <div class="informational message">Thank you for your submission.</div>

If fields are not set, the response contains a header explaining this
error.

    >>> submit_data['Unique Submission Key:'] = 'unique-id-2'
    >>> for field in ('Date Created:', 'Distribution Release:',
    ...               'Distribution:', 'Email address:',
    ...               'Processor Architecture:', 'System name:',
    ...               'Unique Submission Key:'):
    ...     wrong_data = submit_data.copy()
    ...     del wrong_data[field]
    ...     browser.open('http://launchpad.dev/+hwdb/+submit')
    ...     fill_form(
    ...         browser, wrong_data, submit_data_checkboxes, submit_file,
    ...         'test.txt')
    ...     browser.getControl('Upload').click()
    ...     print "--- missing field", field
    ...     print browser.headers
    --- missing field Date Created:
    Status: 200 Ok
    ...
    X-Launchpad-Hwdb-Submission: Error in field 'date_created' - Required input is missing.
    ...
    --- missing field Distribution Release:
    Status: 200 Ok
    ...
    X-Launchpad-Hwdb-Submission: Error in field 'distroseries' - Required input is missing.
    ...
    --- missing field Distribution:
    Status: 200 Ok
    ...
    X-Launchpad-Hwdb-Submission: Error in field 'distribution' - Required input is missing.
    ...
    --- missing field Email address:
    Status: 200 Ok
    ...
    X-Launchpad-Hwdb-Submission: Error in field 'emailaddress' - Required input is missing.
    ...
    --- missing field Processor Architecture:
    Status: 200 Ok
    ...
    X-Launchpad-Hwdb-Submission: Error in field 'architecture' - Required input is missing.
    ...
    --- missing field System name:
    Status: 200 Ok
    ...
    X-Launchpad-Hwdb-Submission: Error in field 'system' - Required input is missing.
    ...
    --- missing field Unique Submission Key:
    Status: 200 Ok
    ...
    X-Launchpad-Hwdb-Submission: Error in field 'submission_key' - Required input is missing.
    ...

The file with the test data must also be provided.

    >>> browser.open('http://launchpad.dev/+hwdb/+submit')
    >>> fill_form(
    ...     browser, wrong_data, submit_data_checkboxes, None, 'test.txt')
    >>> browser.getControl('Upload').click()
    >>> print browser.headers
    Status: 200 Ok
    ...
    X-Launchpad-Hwdb-Submission: Error in field 'submission_data' - Required input is missing.
    ...

If a submission uses an already existing submission key, the submission
is rejected and an explaining header is added to the response.

    >>> wrong_data = submit_data.copy()
    >>> wrong_data['Unique Submission Key:'] = 'unique-id-1'
    >>> browser.open('http://launchpad.dev/+hwdb/+submit')
    >>> fill_form(
    ...     browser, wrong_data, submit_data_checkboxes, submit_file,
    ...     'test.txt')
    >>> browser.getControl('Upload').click()
    >>> print browser.headers
    Status: 200 Ok
    ...
    X-Launchpad-Hwdb-Submission: Error in field 'submission_key' - Submission key already exists.
    ...

The field "Date Created" must contain a valid timestamp.

    >>> wrong_data = submit_data.copy()
    >>> wrong_data['Date Created:'] = 'no timestamp'
    >>> browser.open('http://launchpad.dev/+hwdb/+submit')
    >>> fill_form(
    ...     browser, wrong_data, submit_data_checkboxes, submit_file,
    ...     'test.txt')
    >>> browser.getControl('Upload').click()
    >>> print browser.headers
    Status: 200 Ok
    ...
    X-Launchpad-Hwdb-Submission: Error in field 'date_created' - Invalid datetime data
    ...

The field "Submission Key" may contain only ASCII characters.

    >>> wrong_data = submit_data.copy()
    >>> wrong_data['Unique Submission Key:'] = u'wrong id \xc0'.encode('utf8')
    >>> browser.open('http://launchpad.dev/+hwdb/+submit')
    >>> fill_form(
    ...     browser, wrong_data, submit_data_checkboxes, submit_file,
    ...     'test.txt')
    >>> browser.getControl('Upload').click()
    >>> print browser.headers
    Status: 200 Ok
    ...
    X-Launchpad-Hwdb-Submission: Error in field 'submission_key' - Invalid textual data
    ...

The field "Email address:" musr contain a valid email address.

    >>> wrong_data = submit_data.copy()
    >>> wrong_data['Email address:'] = 'no email'
    >>> browser.open('http://launchpad.dev/+hwdb/+submit')
    >>> fill_form(
    ...     browser, wrong_data, submit_data_checkboxes, submit_file,
    ...     'test.txt')
    >>> browser.getControl('Upload').click()
    >>> print browser.headers
    Status: 200 Ok
    ...
    X-Launchpad-Hwdb-Submission: Error in field 'emailaddress' - Invalid email address
    ...

The examples above about missing form data all used the form as
represented in the test browser. "Required data missing" simply meant
that a form field stayed empty, but the test broswer sent data _for_
this field anyway. However, checkbox, the HTTP client which is normally
used to submit the data, does _not_ first read the HTML page containing
the form data and then POSTs (possibly empty) values for all fields of
the form. Instead, it simply assumes that it knows which fields are
present in the form and submits this data. Unfortunately, it sometimes
simply omits some fields. In such a case, we return an extra header
"Required fields not contained in POST data".

    >>> from urllib import urlencode
    >>> form_data = {
    ...     'field.date_created': '2009-01-01',
    ...     'field.format': 'VERSION_1',
    ...     'field.private.used': '',
    ...     'field.contactable.used': '',
    ...     'field.submission_key': '123',
    ...     'field.emailaddress': 'test@canonical.com',
    ...     'field.distribution': 'ubuntu',
    ...     'field.distroseries': '5.04',
    ...     'field.architecture': 'i386',
    ...     'field.system': 'whatever',
    ...     'field.actions.upload': 'Upload',
    ... }
    >>> browser.open('http://launchpad.dev/+hwdb/+submit',
    ...     data=urlencode(form_data))
    >>> print browser.headers
    Status: 200 Ok
    ...
    X-Launchpad-Hwdb-Submission: Error: Required fields not contained in
    POST data: submission_data
    ...

Also, an OOPS is reported.

    >>> from canonical.launchpad.webapp.errorlog import ErrorReportingUtility
    >>> error_utility = ErrorReportingUtility()
    >>> error_report = error_utility.getLastOopsReport()
    >>> fp = StringIO()
    >>> error_report.write(fp)
    >>> print fp.getvalue()
    Oops-Id:...
    Exception-Type: HWSubmissionMissingFields
    Exception-Value: Missing form fields: submission_data
    Date:...
    Page-Id: HWDBApplication:+submit
    ...
    Traceback (most recent call last):
    HWSubmissionMissingFields: Missing form fields: submission_data
    <BLANKLINE>

    >>> del form_data['field.distribution']
    >>> browser.open('http://launchpad.dev/+hwdb/+submit',
    ...     data=urlencode(form_data))
    >>> print browser.headers
    Status: 200 Ok
    ...
    X-Launchpad-Hwdb-Submission: Error: Required fields not contained in
    POST data: distribution, submission_data
    ...

    >>> error_report = error_utility.getLastOopsReport()
    >>> fp = StringIO()
    >>> error_report.write(fp)
    >>> print fp.getvalue()
    Oops-Id:...
    Exception-Type: HWSubmissionMissingFields
    Exception-Value: Missing form fields: distribution, submission_data
    Date:...
    Page-Id: HWDBApplication:+submit
    ...
    Traceback (most recent call last):
    HWSubmissionMissingFields: Missing form fields: distribution,
    submission_data
    <BLANKLINE>
