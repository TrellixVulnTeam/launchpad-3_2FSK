DistributionSourcePackageView
=============================

The DistributionSourcePackageView is used to present a source
package within a distribution.

    # Setup the breezy autotest distroseries
    >>> login("foo.bar@canonical.com")
    >>> from lp.soyuz.tests.test_publishing import SoyuzTestPublisher
    >>> publisher = SoyuzTestPublisher()
    >>> publisher.prepareBreezyAutotest()
    >>> ubuntutest = publisher.ubuntutest
    >>> from lp.registry.interfaces.distroseries import DistroSeriesStatus
    >>> publisher.distroseries.status = DistroSeriesStatus.DEVELOPMENT

    # Publish the source 'gedit' in the ubuntutest main archive.
    >>> from datetime import datetime
    >>> import pytz
    >>> from lp.soyuz.interfaces.publishing import PackagePublishingStatus
    >>> gedit_main_src_hist = publisher.getPubSource(
    ...     sourcename="gedit", archive=ubuntutest.main_archive,
    ...     date_uploaded=datetime(2010, 12, 30, tzinfo=pytz.UTC),
    ...     status=PackagePublishingStatus.PUBLISHED)

The DistributionSourcePackageView includes a helper property
'all_published_in_active_distroseries' that returns a list of
all the published versions of the source package within the distribution's
serieses.

    >>> from canonical.launchpad.webapp.servers import LaunchpadTestRequest
    >>> from zope.component import getMultiAdapter
    >>> ubuntu_gedit = ubuntutest.getSourcePackage('gedit')
    >>> ubuntu_gedit_view = getMultiAdapter(
    ...     (ubuntu_gedit, LaunchpadTestRequest()), name="+index")
    >>> for result in ubuntu_gedit_view.all_published_in_active_distroseries:
    ...     print "%s - %s" % (
    ...         result['suite'], result['description'])
    Breezy-autotest - (666): main/base


Latest published PPA versions
-----------------------------

The view includes a latest_published_ppa_versions property which returns
a list of dictionaries describing 3 PPAs with the most-recently-uploaded
versions of the package.

    # Create two PPAs to which we can publish sources.
    >>> ppa_nightly = factory.makeArchive(name="nightly",
    ...                                   distribution=ubuntutest)
    >>> ppa_beta = factory.makeArchive(name="beta",
    ...                                distribution=ubuntutest)

    # Publish gedit to both PPAs
    >>> gedit_nightly_src_breezy = publisher.getPubSource(
    ...     sourcename="gedit", archive=ppa_nightly,
    ...     date_uploaded=datetime(2010, 12 ,1, tzinfo=pytz.UTC),
    ...     status=PackagePublishingStatus.PUBLISHED, version='0.8.2n3')
    >>> gedit_beta_src_breezy = publisher.getPubSource(
    ...     sourcename="gedit", archive=ppa_beta,
    ...     date_uploaded=datetime(2010, 11, 30, tzinfo=pytz.UTC),
    ...     status=PackagePublishingStatus.PUBLISHED, version='0.8.1')
    >>> gedit_beta_src_hoary = publisher.getPubSource(
    ...     sourcename="gedit", archive=ppa_beta,
    ...     date_uploaded=datetime(2010, 11, 30, tzinfo=pytz.UTC),
    ...     status=PackagePublishingStatus.PUBLISHED, version='0.8.0',
    ...     distroseries=ubuntutest.serieses[0])

    >>> for archive_pub in ubuntu_gedit_view.latest_published_ppa_versions:
    ...     print "%s - %s" % (
    ...         archive_pub['archive'].displayname,
    ...         archive_pub['versions']
    ...         )
    PPA named nightly for Person-name2 - Breezy Badger Autotest (0.8.2n3)
    PPA named beta for Person-name5 - Breezy Badger Autotest (0.8.1),
        Hoary Mock (0.8.0)

The view also calculates the url for finding further PPA versions.

    >>> print ubuntu_gedit_view.further_ppa_versions_url
    http://launchpad.dev/ubuntutest/+ppas?name_filter=gedit

