= OpenID Discovery =

Launchpad provides a number of pages that can be used as OpenID URLs.
The OpenID discovery process can be run on them to discover the
endpoints.

To test this, we will set up the python-openid to talk directly to the
Zope publisher:

    >>> from openid.fetchers import setDefaultFetcher
    >>> from canonical.signon.testing.openidhelpers import (
    ...     PublisherFetcher, print_endpoints)
    >>> setDefaultFetcher(PublisherFetcher())


== Persistent User Identity URLs ==

Launchpad assigns a persistent identifier to each user:

    >>> print_endpoints('http://openid.launchpad.dev/+id/sabdfl_oid')
    Claimed ID: http://openid.launchpad.dev/+id/sabdfl_oid
    ----
    Local ID: http://openid.launchpad.dev/+id/sabdfl_oid
    Server URL: http://openid.launchpad.dev/+openid
    Supports:
      http://specs.openid.net/auth/2.0/signon
    ----
    Local ID: http://openid.launchpad.dev/+id/sabdfl_oid
    Server URL: http://openid.launchpad.dev/+openid
    Supports:
      http://openid.net/signon/1.1
    ----
    Local ID: http://openid.launchpad.dev/+id/sabdfl_oid
    Server URL: http://openid.launchpad.dev/+openid
    Supports:
      http://openid.net/signon/1.0
    ----

If the user enters a non-canonical form of the identifier, it is
normalised to the standard form:

    >>> print_endpoints(
    ...     'http://openid.launchpad.dev/+id/sabdfl_oid/+index?foo=bar')
    Claimed ID: http://openid.launchpad.dev/+id/sabdfl_oid
    ...


== OP Identifier Discovery ==

It is also possible to run discovery on the root directory as an OP
identifier.  This allows any Launchpad user to log in by entering this
URL.

    >>> print_endpoints('http://openid.launchpad.dev/')
    Claimed ID: http://openid.launchpad.dev/
    ----
    Local ID: None
    Server URL: http://openid.launchpad.dev/+openid
    Supports:
      http://specs.openid.net/auth/2.0/server
    ----


== Invalid Persistent Identifiers ==

Discovery is not possible on non-existent persistent identifiers:

    >>> anon_browser.open('http://openid.launchpad.dev/+id/no-such-id')
    Traceback (most recent call last):
      ...
    NotFound: ...

    >>> print_endpoints('http://openid.launchpad.dev/+id/no-such-id')
    Traceback (most recent call last):
      ...
    DiscoveryFailure: ...


== No OpenID for Invalid Users ==

People who are not valid Launchpad users do not have OpenID
Identifiers:

    >>> print_endpoints('http://launchpad.dev/~matsubara')
    Claimed ID: http://launchpad.dev/~matsubara
    ----
    No services discovered

    >>> print_endpoints('http://openid.launchpad.dev/+id/matsubara_oid')
    Traceback (most recent call last):
      ...
    DiscoveryFailure: ...


== Cleanup ==

    >>> setDefaultFetcher(None)

