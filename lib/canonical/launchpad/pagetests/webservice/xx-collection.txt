= Introduction =

The Launchpad web service exposes a collection of people and teams,
which responds to GET.

  >>> people_collection = webservice(r"""
  ... GET /people HTTP/1.1
  ... Host: api.launchpad.dev
  ... """).jsonBody()

  >>> import pdb; pdb.set_trace()
  >>> sorted(people_collection)[0]['name']
  u'skacel'
  >>> sorted(people_collection)[0]['self_link']
  u'http://api.launchpad.dev/people/skacel'
  >>> sorted(people_collection)[-1]['name']
  u'rosetta-admins'

The elements of a collection can be looked up by unique identifier:

  >>> admins_team = webservice(r"""
  ... GET /people/admins HTTP/1.1
  ... Host: api.launchpad.dev
  ... """).jsonBody()
  >>> sorted(admins_team.items())
  [(u'datecreated', u'2005-06-06T08:59:51.571899+00:00'),
   (u'displayname', u'Launchpad Administrators'),
   (u'member_memberships_collection_link',
    u'http://api.launchpad.dev/people/admins/member_memberships'),
   (u'members_collection_link',
      u'http://api.launchpad.dev/people/admins/members'),
   (u'name', u'admins'),
   (u'self_link', u'http://api.launchpad.dev/people/admins'),
   (u'team_memberships_collection_link',
    u'http://api.launchpad.dev/people/admins/team_memberships'),
   (u'teamowner_link', u'http://api.launchpad.dev/people/sabdfl')]

A collection may be scoped to an element:

  >>> team_members = webservice(r"""
  ... GET /people/admins/members HTTP/1.1
  ... Host: api.launchpad.dev
  ... """).jsonBody()
  >>> len(team_members)
  11
  >>> team_members[0]['name']
  u'spiv'
  >>> team_members[-1]['name']
  u'kinnison'

But not every element may have that collection scoped to it:

  >>> print webservice(r"""
  ... GET /people/spiv/members HTTP/1.1
  ... Host: api.launchpad.dev
  ... """).getStatus()
  404

