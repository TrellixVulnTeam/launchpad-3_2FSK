TeamParticipation
=================

The TeamParticipation table stores both direct and indirect members of a team.
More information can be found in the TeamParticipationUsage spec.

First of all, create some teams:

>>> from datetime import datetime
>>> from canonical.launchpad.database import Person, TeamParticipationSet
>>> from canonical.lp.dbschema import TeamSubscriptionPolicy
>>> from canonical.lp.dbschema import TeamMembershipStatus
>>> teampart = TeamParticipationSet()
>>> OPEN = int(TeamSubscriptionPolicy.OPEN)
>>> MODERATED = int(TeamSubscriptionPolicy.MODERATED)
>>> expires = datetime(2005, 12, 01)
>>> p = Person.byName('name16')
>>> t1 = Person(subscriptionpolicy=OPEN, name='t1', teamowner=p)
>>> t2 = Person(subscriptionpolicy=OPEN, name='t2', teamowner=p)
>>> t3 = Person(subscriptionpolicy=MODERATED, name='t3', teamowner=p)
>>> t4 = Person(subscriptionpolicy=OPEN, name='t4', teamowner=p)
>>> t5 = Person(subscriptionpolicy=OPEN, name='t5', teamowner=p)

We don't return results in any particular order, so we should define
a comparison function for the tests to use

>>> def tcmp(a,b):
...     return cmp(a.name,b.name)

Now, add p as a member of t3.

>>> p.joinTeam(t3)
True
>>> [m.name for m in teampart.getAllMembers(t3)]
[]

But t3 is a MODERATED team, somebody have to approve the membership:

>>> t3.setMembershipStatus(p, int(TeamMembershipStatus.APPROVED), expires, p)
>>> [m.name for m in teampart.getAllMembers(t3)]
[u'name16']

Now we add t3 as a member of t2, ...

>>> t3.joinTeam(t2)
True
>>> l = teampart.getAllMembers(t2)
>>> l.sort(tcmp)
>>> [m.name for m in l]
[u'name16', u't3']

... t2 as a member of t1, ...

>>> t2.joinTeam(t1)
True
>>> l = teampart.getAllMembers(t1)
>>> l.sort(tcmp)
>>> [m.name for m in l]
[u'name16', u't2', u't3']

... t2 as a member of t5, ...

>>> t2.joinTeam(t5)
True
>>> l = teampart.getAllMembers(t5)
>>> l.sort(tcmp)
>>> [m.name for m in l]
[u'name16', u't2', u't3']

... t5 as a member of t4

>>> t5.joinTeam(t4)
True
>>> l = teampart.getAllMembers(t4)
>>> l.sort(tcmp)
>>> [m.name for m in l]
[u'name16', u't2', u't3', u't5']


Now let's remove some members to see what happens:

>>> p.unjoinTeam(t3)
True
>>> len(teampart.getAllMembers(t3))
0

>>> l = teampart.getAllMembers(t2)
>>> l.sort(tcmp)
>>> [m.name for m in l]
[u't3']

>>> l = teampart.getAllMembers(t4)
>>> l.sort(tcmp)
>>> [m.name for m in l]
[u't2', u't3', u't5']

>>> l = teampart.getAllMembers(t5)
>>> l.sort(tcmp)
>>> [m.name for m in l]
[u't2', u't3']

>>> t2.unjoinTeam(t5)
True
>>> len(teampart.getAllMembers(t5))
0

>>> l = teampart.getAllMembers(t4)
>>> l.sort(tcmp)
>>> [m.name for m in l]
[u't5']

