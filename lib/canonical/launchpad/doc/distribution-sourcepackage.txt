Distribution Source Packages
============================

A distribution source package represents a named source package in a
distribution, independant of any particular release of that source
package.

This is useful for, among other things, tracking bugs in source
packages, ensuring that bug reports automatically carry forward from one
distribution series to the next.

Fetching a Distribution Source Package
======================================

A common way to fetch a distribution source package is to start with the
distribution object:

    >>> from zope.component import getUtility
    >>> from canonical.launchpad.interfaces import (
    ...     IDistributionSet, IDistributionSourcePackage)

    >>> debian = getUtility(IDistributionSet).getByName("debian")

Call IDistribution.getSourcePackage to get a specific package by name:

    >>> debian_firefox = debian.getSourcePackage("mozilla-firefox")
    >>> debian_firefox.name
    u'mozilla-firefox'

Test more advanced features of IDistributionSourcePackage:

    >>> ubuntu = getUtility(IDistributionSet).getByName("ubuntu")
    >>> dsp = ubuntu.getSourcePackage("pmount")
    >>> IDistributionSourcePackage.providedBy(dsp)
    True

Useful properties:

    >>> dsp.displayname
    u'pmount in ubuntu'

List of current 'pmount in Ubuntu' as ISourcePackage:

    >>> [(sp.name, sp.distroseries.name) for sp in dsp.by_distroseriess]
    [(u'pmount', u'hoary')]

Publishing history of 'pmount in Ubuntu':

    >>> for p in dsp.publishing_history:
    ...     print " ".join((p.sourcepackagerelease.name,
    ...                     p.sourcepackagerelease.version,
    ...                     p.distroseries.name))
    pmount 0.1-2 hoary
    pmount 0.1-1 hoary

Current publishing records for 'pmount in Ubuntu':

    >>> for p in dsp.current_publishing_records:
    ...     print " ".join((p.sourcepackagerelease.name,
    ...                     p.sourcepackagerelease.version,
    ...                     p.distroseries.name))
    pmount 0.1-2 hoary

Releases of 'pmount in Ubuntu':

    >>> [release.version for release in dsp.releases]
    [u'0.1-2', u'0.1-1']

Binary packages of 'pmount in Ubuntu':

    >>> dsp.binary_package_names
    u'pmount'

Current release of 'pmount in Ubuntu':

    >>> dsp.currentrelease.version
    u'0.1-2'

Check if 'currentrelease' works with version containing letters
(bug # 6040):

    >>> dsp2 = ubuntu.getSourcePackage("alsa-utils")
    >>> dsp2.currentrelease.version
    u'1.0.9a-4ubuntu1'

    >>> dsp3 = ubuntu.getSourcePackage("cnews")
    >>> dsp3.currentrelease.version
    u'cr.g7-37'

Useful methods:

    >>> dsp.bugtasks().count()
    0

Retrieve a version of 'pmount in Ubuntu' as a
IDistributionSourcePackageRelease (IDSPR) or None if not found:

    >>> dsp.getVersion('1.0') is None
    True

    >>> pmount_dspr = dsp.getVersion('0.1-1')
    >>> pmount_dspr.title
    u'pmount 0.1-1 (source) in Ubuntu'

    >>> for pub in pmount_dspr.publishing_history:
    ...     print pub.distroseries.name, pub.status.name
    hoary SUPERSEDED

'getVersion' also return IDSPRs for REMOVED version which allows
developers to investigate history of files already removed from the
archive (bug #60440):

    >>> ubuntutest = getUtility(IDistributionSet)["ubuntutest"]
    >>> alsa_dsp = ubuntutest.getSourcePackage("alsa-utils")
    >>> alsa_dspr = alsa_dsp.getVersion('1.0.9a-4')
    >>> alsa_dspr.title
    u'alsa-utils 1.0.9a-4 (source) in ubuntutest'

    >>> for pub in alsa_dspr.publishing_history:
    ...     print pub.distroseries.name, pub.status.name
    breezy-autotest REMOVED
