= Creating a new team =

== As a regular user ==

Regular users can create teams.

    >>> browser = setupBrowser(auth='Basic test@canonical.com:test')
    >>> browser.open('http://launchpad.dev/people/')
    >>> browser.getLink('Register a team').click()

    >>> browser.url
    'http://launchpad.dev/people/+newteam'

    >>> browser.title
    'Register a new team in Launchpad'

    >>> browser.getControl(name='field.name').value = 'myemail'
    >>> browser.getControl('Display Name').value = 'your own team'
    >>> browser.getControl(
    ...     'Team Description').value = 'my own team description'
    >>> browser.getControl('Subscription period').value = '365'
    >>> browser.getControl('Renewal period').value = '365'
    >>> browser.getControl('Open Team').selected = True
    >>> browser.getControl('Create').click()

    >>> browser.url
    'http://launchpad.dev/~myemail'

    >>> browser.title
    'your own team in Launchpad'

The owner of a team is always added as an administrator of his team.

    >>> from canonical.launchpad.database import Person
    >>> [a.name for a in Person.byName('myemail').adminmembers]
    [u'name12']

When creating a new team you can optionally provide a contact email address
for that team. This contact address must not be registered in Launchpad.

    >>> browser.open('http://launchpad.dev/people/+newteam')

    >>> browser.getControl(name='field.name').value = 'newtestteam'
    >>> browser.getControl('Display Name').value = 'newtestteam'
    >>> browser.getControl(
    ...     'Contact Email Address').value = 'test@canonical.com'
    >>> browser.getControl('Team Description').value = 'another test team'
    >>> browser.getControl('Moderated Team').selected = True
    >>> browser.getControl('Create').click()

    >>> for tag in find_tags_by_class(browser.contents, 'message'):
    ...     print extract_text(tag)
    There is 1 error.
    test@canonical.com is already registered in Launchpad and is associated
    with Sample Person.

We also check if the given email address is syntatically valid.

    >>> browser.getControl(
    ...     'Contact Email Address').value = 'testcanonical.com'
    >>> browser.getControl('Create').click()

    >>> for tag in find_tags_by_class(browser.contents, 'message'):
    ...     print extract_text(tag)
    There is 1 error.
    testcanonical.com isn't a valid email address.

Now we enter a valid email address that's not registered in Launchpad.

    >>> browser.getControl('Contact Email Address').value = 'team-foo@bar.com'
    >>> browser.getControl('Create').click()

    >>> browser.url
    'http://launchpad.dev/~newtestteam'

    >>> for tag in find_tags_by_class(
    ...     browser.contents, 'informational message'):
    ...     print tag.renderContents()
    A confirmation message has been sent to 'team-foo@bar.com'. Follow the
    instructions in that message to confirm the new contact address for this
    team. (If the message doesn't arrive in a few minutes, your mail provider
    might use 'greylisting', which could delay the message for up to an hour
    or two.)

== As an administrator ==

Administrators can create teams in much the same manner but they will
also be given the ability to change the team's visibility

    >>> admin_browser.open('http://launchpad.dev/people/')
    >>> admin_browser.getLink('Register a team').click()

    >>> admin_browser.url
    'http://launchpad.dev/people/+newteam'

    >>> admin_browser.title
    'Register a new team in Launchpad'

    >>> admin_browser.getControl(name='field.name').value = 'super-secret'
    >>> admin_browser.getControl('Display Name').value = 'Shhhh'
    >>> admin_browser.getControl(
    ...     'Team Description').value = 'my own team description'
    >>> admin_browser.getControl('Subscription period').value = '365'
    >>> admin_browser.getControl('Renewal period').value = '365'
    >>> admin_browser.getControl('Open Team').selected = True
    >>> admin_browser.getControl(
    ...     'Subscription policy').value = 'Restricted Team'
    >>> admin_browser.getControl('Visibility').value = 'Private Membership'
    >>> admin_browser.getControl('Create').click()

    >>> admin_browser.url
    'http://launchpad.dev/~super-secret'

    >>> admin_browser.title
    'Shhhh Launchpad'

A team with Private Membership visibility must be Restricted.

    >>> admin_browser.open('http://launchpad.dev/people/')
    >>> admin_browser.getLink('Register a team').click()

    >>> admin_browser.getControl(name='field.name').value = 'super-secret'
    >>> admin_browser.getControl('Display Name').value = 'Shhhh'
    >>> admin_browser.getControl(
    ...     'Team Description').value = 'my own team description'
    >>> admin_browser.getControl('Subscription period').value = '365'
    >>> admin_browser.getControl('Renewal period').value = '365'
    >>> admin_browser.getControl('Open Team').selected = True
    >>> admin_browser.getControl(
    ...     'Subscription policy').value = 'Open Team'
    >>> admin_browser.getControl('Visibility').value = 'Private Membership'
    >>> admin_browser.getControl('Create').click()
    >>> for message in get_feedback_messages(user_browser.contents):
    ...     print message
    There is 1 error.
    Private teams must have a Restricted subscription policy.
