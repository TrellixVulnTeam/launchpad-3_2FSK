POTemplateSet
=============

Test that the security setup for IPOTemplateSet is working

  >>> from zope.component import getUtility
  >>> from canonical.launchpad.interfaces import IPOTemplateSet
  >>> potemplate_set = getUtility(IPOTemplateSet)

getAllByName
------------

This method will return all IPOTemplate that have a given name.

  >>> evolution_templates = potemplate_set.getAllByName('evolution-2.2')
  >>> len(evolution_templates)
  2
  >>> titles = [potemplate.title
  ...           for potemplate in evolution_templates
  ...          ]
  >>> 'Template "evolution-2.2" in Ubuntu Hoary package "evolution"' in titles
  True
  >>> 'Template "evolution-2.2" in Evolution trunk' in titles
  True

getAllOrderByDateLastUpdated
----------------------------

This method will give us all available IPOTemplate sorted by their
modification date.

  >>> templates = list(potemplate_set.getAllOrderByDateLastUpdated())
  >>> len(templates)
  8
  >>> templates[0].date_last_updated >= templates[5].date_last_updated
  True
  >>> templates[1].date_last_updated >= templates[5].date_last_updated
  True
  >>> templates[2].date_last_updated >= templates[5].date_last_updated
  True
  >>> templates[3].date_last_updated >= templates[5].date_last_updated
  True
  >>> templates[4].date_last_updated >= templates[5].date_last_updated
  True


POTemplateSubset
================

getPOTemplateByName
-------------------

This method gives us the IPOTemplate that belongs to this subset and its name
is the given one.

  >>> from canonical.launchpad.database import ProductSeries
  >>> productseries = ProductSeries.get(3)
  >>> potemplatesubset = potemplate_set.getSubset(
  ...     productseries=productseries)
  >>> potemplate = potemplatesubset.getPOTemplateByName(
  ...     'evolution-2.2')
  >>> print potemplate.title
  Template "evolution-2.2" in Evolution trunk

getPOTemplateByPath
-------------------

This method gives us the IPOTemplate that belongs to this subset and its path
in the source code is the given one.

  >>> potemplate = potemplatesubset.getPOTemplateByPath(
  ...     'po/evolution-2.2-test.pot')
  >>> print potemplate.title
  Template "evolution-2.2-test" in Evolution trunk

getAllOrderByDateLastUpdated
----------------------------

This method will give us all available IPOTemplate for this subset sorted
by their modification date.

  >>> templates = list(potemplatesubset.getAllOrderByDateLastUpdated())
  >>> len(templates)
  2
  >>> templates[0].date_last_updated >= templates[1].date_last_updated
  True

getPOTemplateByTranslationDomain
--------------------------------

This method gives us the IPOTemplate that belongs to this subset and its
translation domain is the given one.

  >>> productseries = ProductSeries.get(5)
  >>> potemplatesubset = potemplate_set.getSubset(
  ...     productseries=productseries)
  >>> potemplate = potemplatesubset.getPOTemplateByTranslationDomain(
  ...     'NetApplet')
  >>> print potemplate.title
  Template "netapplet" in NetApplet releases

getPOTemplateCloser
-------------------

With this method, we get the IPOTemplate from this Subset that has the bigger
part of the path in common.

To do this test, first we check the evolution product, it has two potemplates
in the same path and thus, this method should not get any value.

  >>> productseries = ProductSeries.get(3)
  >>> potemplatesubset = potemplate_set.getSubset(
  ...     productseries=productseries)
  >>> potemplatesubset.getPOTemplateCloser('po') is None
  True

Now, we move to the NetApplet product, we should detect it.

  >>> productseries = ProductSeries.get(5)
  >>> potemplatesubset = potemplate_set.getSubset(
  ...     productseries=productseries)
  >>> potemplatesubset.getPOTemplateCloser('po') is None
  False

But if we give the empty string or None, we get nothing

  >>> potemplatesubset.getPOTemplateCloser('') is None
  True
  >>> potemplatesubset.getPOTemplateCloser('') is None
  True

POTemplate
==========

Check that we can get IPOFile based on its path.

  >>> from canonical.launchpad.database import POTemplate
  >>> potemplate = POTemplate.get(1)
  >>> pofile = potemplate.getPOFileByPath('es.po')
  >>> print pofile.title
  Spanish (es) translation of evolution-2.2 in Evolution trunk


newPOFile
---------

The Portuguese translation has not been started yet; therefore,
when we call IPOTemplate.newPOFile() a DummyPOFile instance will
be created. We'll use the following test to verify if DummyPOFile
implements the required IPOFile interface:

  >>> pofile = potemplate.newPOFile('pt')

Lets try to access untranslated entries here.

  >>> potmsgsets = list(pofile.getPOTMsgSetUntranslated())
  >>> len(potmsgsets) == potemplate.getPOTMsgSetsCount(current=True)
  True

And there shouldn't be any translated entries

  >>> potmsgsets = list(pofile.getPOTMsgSetTranslated())
  >>> len(potmsgsets)
  0

Or any fuzzy (need-review) entries:

  >>> potmsgsets = list(pofile.getPOTMsgSetFuzzy())
  >>> len(potmsgsets)
  0
  >>> pofile.fuzzy_count
  0
