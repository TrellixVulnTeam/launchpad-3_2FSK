== Merge queues ==


    >>> login('foo.bar@canonical.com')
    >>> from zope.component import getUtility
    >>> from canonical.launchpad.interfaces import (
    ...     BranchSubscriptionNotificationLevel,
    ...     CodeReviewNotificationLevel, IBranchSet, IPersonSet)
    >>> subscriber = getUtility(IPersonSet).getByEmail(
    ...     'foo.bar@canonical.com')
    >>> branch = getUtility(IBranchSet).getByUniqueName(
    ...     '~name12/firefox/main')
    >>> _unused = branch.subscribe(subscriber,
    ...     BranchSubscriptionNotificationLevel.NOEMAIL, None,
    ...     CodeReviewNotificationLevel.FULL)
    >>> logout()


    >>> sample_browser = setupBrowser(auth="Basic test@canonical.com:test")
    >>> sample_browser.open(
    ...     'http://code.launchpad.dev/~sabdfl/firefox/release-0.9')
    >>> sample_browser.getLink('Propose for merging').click()
    >>> sample_browser.getControl(
    ...     name='field.target_branch.target_branch').value = (
    ...         '~name12/firefox/main')
    >>> sample_browser.getControl('Whiteboard').value = (
    ...     'This is the whiteboard')
    >>> sample_browser.getControl('Register').click()

When a branch is the target of one or more merge proposals, a
merge queue is visible for that branch.  The merge queue contains
the branch merge proposals that target the branch and that are
queued.  When a branch merge proposal is queued it indicates that
the branch is ready to be merged with the target branch.

    >>> sample_browser.open(
    ...     'http://launchpad.dev/~name12/firefox/main/+merges')

    >>> def printMergeProposals(browser, id):
    ...     tag = find_tag_by_id(browser.contents, id)
    ...     if tag is None:
    ...         print tag
    ...     else:
    ...         for mp in tag.findAll(attrs={'class': 'mergeproposal'}):
    ...             print extract_text(mp)

    >>> printMergeProposals(sample_browser, 'landing-candidates')
    ~sabdfl/firefox/release-0.9 (New) - view proposal details
    This is the whiteboard
    Merge proposed by Sample Person
    Needs review

    >>> sample_browser.getLink('View merge queue').click()
    >>> def print_merge_queue(browser):
    ...     print extract_text(find_tag_by_id(browser.contents, 'merge-queue'))
    >>> print_merge_queue(sample_browser)
    The queue is empty.

You can queue an approved proposal for landing. If you're a reviewer,
you can queue any proposal for landing, whether it is approved or not.

    >>> sample_browser.open(
    ...     'http://launchpad.dev/~name12/firefox/main/+merges')
    >>> sample_browser.getLink('view proposal details').click()
    >>> sample_browser.getLink('Queue for merging').click()

Since the user is a reviewer of the target branch, the revision to queue
is writable, and defaults to the tip of the branch.

    >>> print sample_browser.getControl('Queue Revision').value
    1

When enqueuing a proposal, a commit message is needed.  This message
will be used as the commit message of the merge.

    >>> sample_browser.getControl('Commit Message').value = (
    ...     'This is the commit message')
    >>> sample_browser.getControl('Enqueue').click()

The status of the branch is now Queued, and Sample Person is also
recorded as the reviewer of the proposal.

    >>> def print_summary(browser):
    ...     print extract_text(find_tag_by_id(
    ...         browser.contents, 'proposal-heading'))
    >>> print_summary(sample_browser)
    Proposed ...
    Queued for merging into lp://dev/~name12/firefox/main (view queue)


An email notification is also generated.

    >>> from canonical.launchpad.tests.mail_helpers import pop_notifications
    >>> [_unused, notification] = pop_notifications()
    >>> print notification.get_payload(decode=True)
    The proposal to merge Mozilla Firefox 0.9 into Mozilla Firefox Mainline
    has been updated.
    <BLANKLINE>
        Status: Needs review => Queued
        Queue Position: (not set) => 1
    <BLANKLINE>
    Commit Message changed to:
    This is the commit message
    -- 
    http://code.launchpad.dev/~sabdfl/firefox/release-0.9/+merge/1
    You are subscribed to branch Mozilla Firefox Mainline.
    <BLANKLINE>

Next to the status in the summary is a link to view the queue that the
proposal is queued in.

    >>> sample_browser.getLink('view queue').click()
    >>> print_merge_queue(sample_browser)
    Position   Branch details  Commit message
    1
    ~sabdfl/firefox/release-0.9 - view proposal details
    This is the commit message

If the user is not a reviewer of the target branch they can only
queue for merging branches that have been approved.

    >>> nopriv_browser = setupBrowser(auth="Basic no-priv@canonical.com:test")
    >>> nopriv_browser.open(
    ...     'http://code.launchpad.dev/~sabdfl/firefox/release-0.9.2')
    >>> nopriv_browser.getLink('Propose for merging').click()
    >>> nopriv_browser.getControl(
    ...     name='field.target_branch.target_branch').value = (
    ...         '~name12/firefox/main')
    >>> cancel = nopriv_browser.getLink('Cancel')
    >>> nopriv_browser.getControl('Register').click()

Consume notification.

    >>> [_unused] = pop_notifications()


Have Sample Person approve the branch.

    >>> sample_browser.open(
    ...     'http://code.launchpad.dev/~sabdfl/firefox/release-0.9.2/+merges')
    >>> sample_browser.getLink('view proposal details').click()
    >>> sample_browser.getLink('Review proposal').click()
    >>> sample_browser.getControl('Approve').click()

Approving a proposal causes a notification.

    >>> [notification] = pop_notifications()
    >>> print notification.get_payload(decode=True)
    The proposal to merge Mozilla Firefox 0.9.2 into Mozilla Firefox
    Mainline has been updated.
    <BLANKLINE>
        Status: Needs review => Code approved
    -- 
    http://code.launchpad.dev/~sabdfl/firefox/release-0.9.2/+merge/2
    You are subscribed to branch Mozilla Firefox Mainline.
    <BLANKLINE>

No Privileges Person can now queue the branch.

    >>> nopriv_browser.reload()
    >>> print_summary(nopriv_browser)
    Proposed ...
    Approved for merging into lp://dev/~name12/firefox/main

    >>> nopriv_browser.getLink('Queue for merging').click()

No Privileges Person however cannot set the revision number to enqueue,
only the revision that was approved.

    >>> control = nopriv_browser.getControl('Queue Revision')
    Traceback (most recent call last):
    LookupError: label 'Queue Revision'

A commit message is still required.

    >>> nopriv_browser.getControl('Commit Message').value = (
    ...     "This work was done by sabdfl and I think it's cool")
    >>> nopriv_browser.getControl('Enqueue').click()

Consume notification.

    >>> [_unused] = pop_notifications()

No Privileges Person can see the queue, and remove their proposal
from the queue, but not any other.

    >>> nopriv_browser.getLink('view queue').click()
    >>> def print_detailed_queue(browser):
    ...     div = find_tag_by_id(browser.contents, 'merge-queue')
    ...     table = div.table
    ...     for row in table.findAll('tr'):
    ...         for cell in row.findAll('td'):
    ...             print extract_text(cell)
    ...             for button in cell.findAll('input'):
    ...                 if button['type'] == 'submit':
    ...                     print button['value']

    >>> print_detailed_queue(nopriv_browser)
    1
    ~sabdfl/firefox/release-0.9 - view proposal details
    This is the commit message
    2  Dequeue
    ~sabdfl/firefox/release-0.9.2 - view proposal details
       Bug #4: Reflow problems ...
    This work was done by sabdfl and I think it's cool

Someone who is a reviewer of the target branch however, can dequeue
any item, or move items to the front of the queue.

    >>> sample_browser.open(nopriv_browser.url)
    >>> print_detailed_queue(sample_browser)
    1  Dequeue
    ~sabdfl/firefox/release-0.9 - view proposal details
    This is the commit message
    2  Dequeue    Move to front
    ~sabdfl/firefox/release-0.9.2 - view proposal details
       Bug #4: Reflow problems ...
    This work was done by sabdfl and I think it's cool

Clicking on the "Move to front" button will move that proposal to the
front of the queue.

    >>> sample_browser.getControl('Move to front').click()
    >>> print_detailed_queue(sample_browser)
    1  Dequeue
    ~sabdfl/firefox/release-0.9.2 - view proposal details
       Bug #4: Reflow problems ...
    This work was done by sabdfl and I think it's cool
    2  Dequeue    Move to front
    ~sabdfl/firefox/release-0.9 - view proposal details
    This is the commit message

A notification is sent.

    >>> [notification] = pop_notifications()
    >>> print notification.get_payload(decode=True)
    The proposal to merge Mozilla Firefox 0.9.2 into Mozilla Firefox
    Mainline has been updated.
    <BLANKLINE>
        Queue Position: 2 => 0
    -- 
    http://code.launchpad.dev/~sabdfl/firefox/release-0.9.2/+merge/2
    You are subscribed to branch Mozilla Firefox Mainline.
    <BLANKLINE>

Clicking on the "Dequeue" button removes it from the queue.

    >>> sample_browser.getControl('Dequeue', index=0).click()
    >>> print_detailed_queue(sample_browser)
    1  Dequeue
    ~sabdfl/firefox/release-0.9 - view proposal details
    This is the commit message

A notification is sent.

    >>> [notification] = pop_notifications()
    >>> print notification.get_payload(decode=True)
    The proposal to merge Mozilla Firefox 0.9.2 into Mozilla Firefox
    Mainline has been updated.
    <BLANKLINE>
        Status: Queued => Code approved
        Queue Position: 0 => (not set)
    -- 
    http://code.launchpad.dev/~sabdfl/firefox/release-0.9.2/+merge/2
    You are subscribed to branch Mozilla Firefox Mainline.
    <BLANKLINE>

The proposal can also be removed from the queue by choosing the
'Remove from queue' option on the proposal details page.

    >>> sample_browser.getLink('view proposal details').click()
    >>> sample_browser.getLink('Remove from queue').click()

The user is taken to a form where they can update the whiteboard.

    >>> sample_browser.getControl('Whiteboard').value = (
    ...     'Removed from the queue as I forgot a test.')
    >>> sample_browser.getControl('Dequeue').click()
    >>> [notification] = pop_notifications()
    >>> print notification.get_payload(decode=True)
    The proposal to merge Mozilla Firefox 0.9 into Mozilla Firefox
    Mainline has been updated.
    <BLANKLINE>
        Status: Queued => Code approved
        Queue Position: 1 => (not set)
    Whiteboard changed to:
    <BLANKLINE>
    Removed from the queue as I forgot a test.
    -- 
    http://code.launchpad.dev/~sabdfl/firefox/release-0.9/+merge/1
    You are subscribed to branch Mozilla Firefox Mainline.
    <BLANKLINE>

Once out of the queue, the proposal goes back to "Code approved" status.

    >>> print_summary(sample_browser)
    Proposed ...
    Approved for merging into lp://dev/~name12/firefox/main

It can then be reset as Work in progress.

    >>> sample_browser.getLink('Work in progress').click()
    >>> sample_browser.getControl('Set as work in progress').click()
    >>> print_summary(sample_browser)
    Proposed ...
    On hold for merging into lp://dev/~name12/firefox/main

An email notification is generated.

    >>> [notification] = pop_notifications()
    >>> print notification.get_payload(decode=True)
    The proposal to merge Mozilla Firefox 0.9 into Mozilla Firefox
    Mainline has been updated.
    <BLANKLINE>
        Status: Code approved => Work in progress
    -- 
    http://code.launchpad.dev/~sabdfl/firefox/release-0.9/+merge/1
    You are subscribed to branch Mozilla Firefox Mainline.
    <BLANKLINE>

The branch can be rejected.

    >>> sample_browser.getLink('Review proposal').click()
    >>> sample_browser.getControl('Reject').click()

    Rejecting a proposal causes a notification.

    >>> [notification] = pop_notifications()
    >>> print notification.get_payload(decode=True)
    The proposal to merge Mozilla Firefox 0.9 into Mozilla Firefox
    Mainline has been updated.
    <BLANKLINE>
        Status: Work in progress => Rejected
    -- 
    http://code.launchpad.dev/~sabdfl/firefox/release-0.9/+merge/1
    You are subscribed to branch Mozilla Firefox Mainline.
    <BLANKLINE>

The status is now set to rejected.

    >>> print_summary(sample_browser)
    Proposed ...
    Rejected for merging into lp://dev/~name12/firefox/main


Remove the proposal created by No Privileges Person.

    >>> nopriv_browser.open(
    ...     'http://code.launchpad.dev/~sabdfl/firefox/release-0.9.2/+merges')
    >>> nopriv_browser.getLink('view proposal details').click()
    >>> nopriv_browser.getLink('Delete proposal to merge').click()
    >>> nopriv_browser.getControl('Delete proposal').click()



