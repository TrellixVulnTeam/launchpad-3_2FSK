= Subscriptions to bug notifications =

Any logged in user can subscribe themselves to bug notifications for any
Launchpad structure, as well as subscribe any of the teams to which
they belong.

    >>> browser.addHeader('Authorization', 'Basic test@canonical.com:test')

We subscribe the Landscape team to Ubuntu.

    >>> browser.open(
    ... 'http://bugs.launchpad.dev/ubuntu/+subscribe')
    >>> subscribe_team = browser.getControl('Landscape')
    >>> subscribe_team.selected = True
    >>> browser.getControl('Save these changes').click()

    >>> print extract_text(find_portlet(browser.contents, 'Bug subscriptions'))
    Bug subscriptions
      For Ubuntu Linux:
        Landscape Developers

And subscribe some people to the Firefox source package in Ubuntu.

    >>> browser.open(
    ... 'http://bugs.launchpad.dev/ubuntu/+source/mozilla-firefox')
    >>> browser.getLink('Subscribe to bug mail').click()
    >>> subscribe_myself = browser.getControl(
    ...    'I want to receive these notifications by e-mail')
    >>> subscribe_myself.selected
    False
    >>> subscribe_myself.selected = True
    >>> subscribe_team = browser.getControl('Landscape')
    >>> subscribe_team.selected
    False
    >>> subscribe_team.selected = True
    >>> browser.getControl('Save these changes').click()

Sample Person and the Landscape team are now subscribed.

    >>> print extract_text(find_portlet(
    ...     browser.contents, 'Bug subscriptions')).encode(
    ...     'ascii', 'backslashreplace')
    Bug subscriptions
      For...mozilla-firefox...package in Ubuntu:
        Foo Bar
        Landscape Developers
        Sample Person
      For Ubuntu Linux:
        Landscape Developers

Sample Person can also unsubscribe himself and the Landscape team.

    >>> subscribe_myself = browser.getControl(
    ...    'I want to receive these notifications by e-mail')
    >>> subscribe_myself.selected = False
    >>> subscribe_team = browser.getControl('Landscape')
    >>> subscribe_team.selected = False
    >>> browser.getControl('Save these changes').click()
    >>> print extract_text(find_portlet(browser.contents, 'Bug subscriptions'))
    Bug subscriptions
      For...mozilla-firefox...package in Ubuntu:
        Foo Bar
      For Ubuntu Linux:
        Landscape Developers


== Additional options for distribution drivers ==

When editing the subscriptions for a package, a distribution driver
can subscribe any Launchpad user.

Firstly, we appoint Sample Person as the driver for the distribution.

    >>> from canonical.database.sqlbase import flush_database_updates
    >>> from lp.registry.interfaces.person import IPersonSet
    >>> from lp.registry.interfaces.distribution import IDistributionSet
    >>> from canonical.launchpad.ftests import login, logout
    >>> from zope.component import getUtility
    >>> login('foo.bar@canonical.com')
    >>> driver = getUtility(IPersonSet).getByEmail('test@canonical.com')
    >>> from zope.component import getUtility
    >>> ubuntu = getUtility(IDistributionSet).get(1)
    >>> ubuntu.driver = driver
    >>> flush_database_updates()
    >>> logout()

The driver sees an extended form in the +subscribe view, which allows him
to subscribe other people.

    >>> browser.open(
    ... 'http://bugs.launchpad.dev/ubuntu/+source/mozilla-firefox/+subscribe')
    >>> subscribe_other = browser.getControl('Subscribe someone else:')
    >>> subscribe_other.value = 'no-priv'
    >>> browser.getControl('Save these changes').click()

No Privileges Person is now subscribed...

    >>> for message in find_tags_by_class(browser.contents, 'message'):
    ...     print message.renderContents()
    No Privileges Person will now receive an e-mail each time someone reports or changes a public bug in "mozilla-firefox in ubuntu".

    >>> print extract_text(find_portlet(browser.contents, 'Bug subscriptions'))
    Bug subscriptions
      For...mozilla-firefox...package in Ubuntu:
        Foo Bar
        No Privileges Person
      For Ubuntu Linux:
        Landscape Developers

...has an entry in the "Remove subscriptions" list...

    >>> remove_other = browser.getControl('\xa0No Privileges Person')

...and can be unsubscribed again.

    >>> remove_other.selected = True
    >>> browser.getControl('Save these changes').click()
    >>> print find_tags_by_class(
    ...    browser.contents, 'informational message')[0].contents[0]
    No Privileges Person will no longer automatically receive e-mail about public bugs in "mozilla-firefox in ubuntu".
    >>> print extract_text(find_portlet(browser.contents, 'Bug subscriptions'))
    Bug subscriptions
      For...mozilla-firefox...package in Ubuntu:
        Foo Bar
      For Ubuntu Linux:
        Landscape Developers

The checkbox to unsubscribe No Privileges Person is no longer present on
the page.

    >>> remove_other = browser.getControl('\xa0No Privileges Person')
    Traceback (most recent call last):
    ...
    LookupError: label '\xa0No Privileges Person'

We clean up by removing Sample Person as the distribution driver.

    >>> login('foo.bar@canonical.com')
    >>> ubuntu.driver = None
    >>> flush_database_updates()
    >>> logout()

An attempt by Sample Person to remove Foo Bar from the subscription list
and to add Sample Person is now silently ignored, because LaunchpadFormView
purges the submitted form data from now unexpected values.

    >>> print extract_text(find_portlet(browser.contents, 'Bug subscriptions'))
    Bug subscriptions
      For...mozilla-firefox...package in Ubuntu:
        Foo Bar
      For Ubuntu Linux:
        Landscape Developers

    >>> remove_other = browser.getControl('\xa0Foo Bar')
    >>> remove_other.selected = True
    >>> subscribe_other = browser.getControl('Subscribe someone else:')
    >>> subscribe_other.value = 'nopriv'
    >>> browser.getControl('Save these changes').click()
    >>> print extract_text(find_portlet(browser.contents, 'Bug subscriptions'))
    Bug subscriptions
      For...mozilla-firefox...package in Ubuntu:
        Foo Bar
      For Ubuntu Linux:
        Landscape Developers

When Sample Person now visits the bug subscription page, he no longer sees
the UI elements for the subscription/unsubscription of arbitrary persons.

    >>> browser.open(
    ... 'http://bugs.launchpad.dev/ubuntu/+source/mozilla-firefox/+subscribe')
    >>> browser.getControl('Subscribe someone else:')
    Traceback (most recent call last):
    ...
    LookupError: label 'Subscribe someone else:'

    >>> print browser.getControl('\xa0Foo Bar')
    Traceback (most recent call last):
    ...
    LookupError: label '\xa0Foo Bar'


== Bug #462742 ==

Loading pages with the subscription menu works fine for anonymous users, even
when there are existing subscriptions.

    >>> browser.open('http://launchpad.dev/bzr')
    >>> browser.getLink('Subscribe to bug mail').click()
    >>> browser.getControl(
    ...     'I want to receive these '
    ...     'notifications by e-mail.').selected = True
    >>> browser.getControl('Save these changes').click()

    >>> anon_browser.open('http://launchpad.dev/bzr')
    >>> print anon_browser.title
    Bazaar Version Control System in Launchpad
