= Demo and launchpad.net =

== Demo sites ==

Launchpad can brand instances as 'demo' instances to make it obvious to
users that they are working in a playpen and changes they make do not
affect the launchpad.net database.

This is controlled by a pair of config variables.

    >>> from canonical.config import config
    >>> config.launchpad.is_demo
    False
    >>> config.launchpad.site_message
    ''

(We could hard-code database names rather than using config variables.
But using config variables future-proofs us against changes such as
using multiple launchpad databases. It also makes testing and examining
instance-specific customizations much easier.)

When you are on a demo site, the is_demo setting is advertised by both
the page background, and the text "demo site" in the page footer.

Note: during the transition to 3.0 we test a non-3-0 page as well as
a 3-0 page to ensure that both display the correct demo/lp-net
information and styles.

    # Set config to pretend we're on a demo site:
    >>> from textwrap import dedent
    >>> site_message = ('This is a demo site mmk. '
    ...                 '<a href="http://example.com">File a bug</a>.')
    >>> test_data = dedent("""
    ...     [launchpad]
    ...     is_demo: True
    ...     site_message: %s
    ...     """ % site_message)
    >>> config.push('test_data', test_data)
    >>> print config.launchpad.is_demo
    True

The demo style is applied and the site_message is also included as part
of the header. The site-message is structured so that any links will not
be escaped.

For a 3-0 page:

    >>> browser.open('http://launchpad.dev/ubuntu')
    >>> print browser.contents
    <...
    <style...url(/@@/demo)...</style>
    ...
    >>> print extract_text(find_tag_by_id(browser.contents, 'lp-version'))
    &bull;...Launchpad...) devmode demo site

    >>> print extract_text(find_tags_by_class(
    ...     browser.contents, 'sitemessage')[0])
    This is a demo site mmk. File a bug.
    >>> print browser.getLink(url="http://example.com").text
    File a bug

And for a non-3-0 page:

    >>> browser.open('http://launchpad.dev/')
    >>> print browser.contents
    <...
    <style...url(/@@/demo)...</style>
    ...
    >>> print extract_text(find_tag_by_id(browser.contents, 'lp-version'))
    |...Launchpad...) devmode demo site

    >>> print extract_text(find_tags_by_class(
    ...     browser.contents, 'sitemessage')[0])
    This is a demo site mmk. File a bug.
    >>> print browser.getLink(url="http://example.com").text
    File a bug


When you are not on a demo site, the text no longer appears.

    >>> # Restore the previous config:
    >>> config_data = config.pop('test_data')
    >>> print config.launchpad.is_demo
    False

First for a 3-0 page:

    >>> browser.open('http://launchpad.dev/ubuntu')
    >>> print extract_text(find_tag_by_id(browser.contents, 'lp-version'))
    &bull;...Launchpad...) devmode
    >>> len(find_tags_by_class(browser.contents, 'sitemessage'))
    0


And for a non-3-0 page:

    >>> browser.open('http://launchpad.dev/')
    >>> print extract_text(find_tag_by_id(browser.contents, 'lp-version'))
    |...Launchpad...) devmode
    >>> len(find_tags_by_class(browser.contents, 'sitemessage'))
    0


== Launchpad Edge ==

Additionally, when a server is running as an edge server, the site-message
is appended with a link to disable edge redirects.

In addition to this prominent display on the root page, each page will
also include the disable-redirect link in the site_message - if the
user is a member of the beta group and has not already disabled
the redirects.

    # Now setup an edge site-message config and re-check.
    >>> edge_config_data = """
    ...     [launchpad]
    ...     site_message: This is a beta site.
    ...     is_edge: True
    ...     """
    >>> config.push('edge_config_data', edge_config_data)
    >>> beta_browser = setupBrowser(
    ...     auth='Basic beta-admin@launchpad.net:test')
    >>> beta_browser.open('http://launchpad.dev/ubuntu')
    >>> site_message = find_tags_by_class(
    ...     beta_browser.contents, 'sitemessage')[0]
    >>> print extract_text(site_message)
    This is a beta site. Disable edge redirect.
    >>> print extract_text(site_message.find(
    ...     'a', onclick="setBetaRedirect(false)"))
    Disable edge redirect.

The disable-redirect link will not appear in the site_message when
browsed by non-beta users.

    >>> browser.open('http://launchpad.dev/ubuntu')
    >>> print extract_text(find_tags_by_class(
    ...     browser.contents, 'sitemessage')[0])
    This is a beta site.

Similarly, once the redirection has been inhibited, the link will no longer
appear in the footer of edge pages.

    # Workaround bug in mechanize where you cannot use the Cookie
    # header with the CookieJar
    >>> from mechanize._clientcookie import Cookie
    >>> cookiejar = (
    ...     beta_browser.mech_browser._ua_handlers['_cookies'].cookiejar)
    >>> cookiejar.set_cookie(
    ...     Cookie(
    ...         version=0, name='inhibit_beta_redirect', value='1', port=None,
    ...         port_specified=False, domain='.launchpad.dev',
    ...         domain_specified=True, domain_initial_dot=True, path='/',
    ...         path_specified=True, secure=False, expires=None,
    ...         discard=None, comment=None, comment_url=None, rest={}))
    >>> beta_browser.open('http://launchpad.dev/ubuntu')
    >>> site_message = find_tags_by_class(
    ...     beta_browser.contents, 'sitemessage')[0]
    >>> print extract_text(site_message)
    This is a beta site.
    >>> print site_message.find('a')
    None

    # Remove the specific site-message config data before continuing.
    >>> dummy = config.pop('edge_config_data')


== Launchpad.net ==

On every instance except launchpad.net, Launchpad's version and
revision numbers are displayed in the page footer.

    >>> print config.launchpad.is_lpnet
    False
    >>> browser.open('http://launchpad.dev/ubuntu')
    >>> print extract_text(find_tag_by_id(browser.contents, 'lp-version'))
    &bull;...Launchpad ... (r...)...

On launchpad.net, however, the version and revision numbers are
presented only in an HTML comment.

    >>> # Pretend that we're on launchpad.net:
    >>> test_data = dedent("""
    ...     [launchpad]
    ...     is_lpnet: True
    ...     """)
    >>> config.push('test_data', test_data)

    >>> browser.open('http://launchpad.dev/ubuntu')
    >>> print find_tag_by_id(browser.contents, 'lp-version')
    None
    >>> print browser.contents
    <...
    <!--
      Facet name: overview
      ...
      Launchpad ... (...)
    -->

    >>> # Restore the previous config:
    >>> config_data = config.pop('test_data')
    >>> print config.launchpad.is_lpnet
    False
