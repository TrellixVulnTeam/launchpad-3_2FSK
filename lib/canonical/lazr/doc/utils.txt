= Various utility functions =


== safe_hasattr() ==

LAZR provides a safe_hasattr() that doesn't hide exception from the
caller. This behaviour of the builtin hasattr() is annoying because it
makes problems harder to diagnose.

    >>> from canonical.lazr.utils import safe_hasattr

    >>> class Oracle(object):
    ...     @property
    ...     def is_full_moon(self):
    ...         return full_moon
    >>> oracle = Oracle()
    >>> hasattr(oracle, 'is_full_moon')
    False
    >>> safe_hasattr(oracle, 'is_full_moon')
    Traceback (most recent call last):
      ...
    NameError: global name 'full_moon' is not defined

    >>> full_moon = True
    >>> hasattr(oracle, 'is_full_moon')
    True
    >>> safe_hasattr(oracle, 'is_full_moon')
    True

    >>> hasattr(oracle, 'weather')
    False
    >>> safe_hasattr(oracle, 'weather')
    False


== smartquote() ==

smartquote() converts pairs of feet marks (") in a string to typographical
quotation marks.

    >>> from canonical.lazr.utils import smartquote
    >>> smartquote('')
    u''
    >>> smartquote('foo "bar" baz')
    u'foo \u201cbar\u201d baz'
    >>> smartquote('foo "bar baz')
    u'foo \u201cbar baz'
    >>> smartquote('foo bar" baz')
    u'foo bar\u201d baz'
    >>> smartquote('""foo " bar "" baz""')
    u'""foo " bar "" baz""'
    >>> smartquote('" foo "')
    u'" foo "'
    >>> smartquote('"foo".')
    u'\u201cfoo\u201d.'
    >>> smartquote('a lot of "foo"?')
    u'a lot of \u201cfoo\u201d?'
