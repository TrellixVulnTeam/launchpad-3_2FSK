= Modifying a DistroSeries =


Only users with administration rights are allowed to modify a
distroseries.

That can be done using the 'Change details' (+edit) and 'Administer'
(+admin) action menu items.

Anonymous or unprivileged access to these forms is denied, the action
item is not even presented.

    >>> anon_browser.open('http://launchpad.dev/ubuntu/warty')
    >>> anon_browser.getLink('Change details').click()
    Traceback (most recent call last):
    ...
    LinkNotFoundError

    >>> anon_browser.getLink("Administer").click()
    Traceback (most recent call last):
    ...
    LinkNotFoundError

    >>> user_browser.open('http://launchpad.dev/ubuntu/warty')
    >>> user_browser.getLink('Change details').click()
    Traceback (most recent call last):
    ...
    LinkNotFoundError

    >>> user_browser.getLink("Administer").click()
    Traceback (most recent call last):
    ...
    LinkNotFoundError


== Changing DistroSeries details ==

A administrator can see and access 'Change Details' form.

    >>> admin_browser.open('http://launchpad.dev/ubuntu/warty')
    >>> admin_browser.getLink('Change details').click()
    >>> admin_browser.url
    'http://launchpad.dev/ubuntu/warty/+edit'

Save sampledata values for warty, so they can be restored later.

    >>> old_name = admin_browser.getControl("Display name").value
    >>> old_title = admin_browser.getControl("Title").value
    >>> old_summary = admin_browser.getControl("Summary").value
    >>> old_description = admin_browser.getControl("Description").value

Fill out the form with different data and submit.

    >>> admin_browser.getControl("Display name").value = 'WartyII'
    >>> admin_browser.getControl("Title").value = 'The Warty Warthog II Release'
    >>> admin_browser.getControl("Summary").value = 'summary'
    >>> admin_browser.getControl("Description").value = 'description'
    >>> admin_browser.getControl("Change").click()

Once submitted the form redirects to the distroseries overview page,
which already contains the new information.

    >>> admin_browser.url
    'http://launchpad.dev/ubuntu/warty'

    >>> print admin_browser.title
    Ubuntu Linux 4.10 in Launchpad

    >>> print extract_text(find_main_content(admin_browser.contents))
    Your changes have been applied.
    WartyII
    summary
    description
    ...

Restore old information to not disturb the other tests.

    >>> admin_browser.getLink('Change details').click()

    >>> admin_browser.getControl("Display name").value = old_name
    >>> admin_browser.getControl("Title").value = old_title
    >>> admin_browser.getControl("Summary").value = old_summary
    >>> admin_browser.getControl("Description").value = old_description
    >>> admin_browser.getControl("Change").click()


== DistroSeries administration ==

Via the administration form the following information can be changed:

 * 'name': the distroseries name (identifier);
 * version: the distroseries version (also a identifier);
 * 'changeslist': the emailaddress to where the upload announcements
   will be sent;
 * 'status': the distroseries status;

    >>> admin_browser.getLink("Administer").click()

Modifying 'name', 'version' and 'changeslist'.

    >>> admin_browser.getControl(name="field.name").value = 'boing'
    >>> admin_browser.getControl(name="field.version").value = '1.23'
    >>> admin_browser.getControl("Changeslist").value = 'foo@bar.com'
    >>> admin_browser.getControl("Change").click()

Once submitted the +admin form also redirects to the distroseries
overview page.

    >>> admin_browser.url
    'http://launchpad.dev/ubuntu/boing'

    >>> print admin_browser.title
    Ubuntu Linux 1.23 in Launchpad

    >>> for message in get_feedback_messages(admin_browser.contents):
    ...     print message
    Your changes have been applied.

Restore old information and modify the changeslist address field
(supposed to be an email address).

    >>> admin_browser.getLink("Administer").click()
    >>> admin_browser.getControl(name="field.name").value = 'warty'
    >>> admin_browser.getControl(name="field.version").value = '4.10'
    >>> admin_browser.getControl("Change").click()

Original url restored.

    >>> admin_browser.url
    'http://launchpad.dev/ubuntu/warty'

The information entered as 'changeslist' is validaded as a 'email',
anything else than 'user@url' will be rejected.

    >>> admin_browser.getLink("Administer").click()
    >>> admin_browser.getControl("Changeslist").value = 'foo bar'
    >>> admin_browser.getControl("Change").click()

    >>> for message in get_feedback_messages(admin_browser.contents):
    ...     print message
    There is 1 error.
    Constraint not satisfied

