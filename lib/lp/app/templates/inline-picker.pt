<span tal:attributes="id view/content_box_id">
    <span class="yui3-activator-data-box">
      <tal:attribute replace="structure view/default_html"/>
    </span>
    <button class="lazr-btn yui3-activator-act yui3-activator-hidden">
      Edit
    </button>

    <a tal:condition="view/help_link"
       tal:attributes="href view/help_link"
       target="help"
       class="sprite maybe">&nbsp;
       <span class="invisible-link">Driver help</span>
    </a>

    <noscript tal:condition="view/can_write">
      <a tal:attributes="href view/edit_url;
                         title view/edit_title"
         class="sprite edit"></a>
      <a tal:condition="view/help_link"
         tal:attributes="href view/help_link"
         target="help"
         class="sprite maybe">&nbsp;
         <span class="invisible-link">Driver help</span>
      </a>
    </noscript>
    <div class="yui3-activator-message-box yui3-activator-hidden"></div>
</span>

<script tal:condition="view/can_write"
        tal:define="needs_check python: view.needs_disclosure_check(True)"
        tal:content="structure string:
LPS.use('lp.app.picker', 'lp.client', function(Y) {
    if (Y.UA.ie) {
        return;
    }

    var picker_config = ${view/json_config}

    if (${needs_check}) {
        var check_disclosure_callback = function(
            picker, picker_result, do_save, do_cancel) {
            var client = new Y.lp.client.Launchpad();
            var private = null;
            config = {
            on: {
                    success: function (person) {
                        private = person.get('private'); 
                        if (private) {
                            var yesno_content =
                                '<p>The team you are assigning to this role is private; ' +
                                ' continuing will expose the existence of this team.</p>' +
                                '<p>Do you wish to continue?</p>'
                            Y.lp.app.picker.yesno_save_confirmation(
                                    picker, yesno_content, 'Yes', 'Choose Again',
                                    do_save, do_cancel);
                        } else {
                            do_save(); 
                        }
                    }
                }
            }
            client.get(picker_result.api_uri, config);

        };
        picker_config.validate_callback = check_disclosure_callback;
    }

    Y.on('load', function(e) {
      Y.lp.app.picker.addPickerPatcher(
        ${view/json_vocabulary_name},
        ${view/json_resource_uri},
        ${view/json_attribute},
        ${view/json_content_box_id},
        picker_config);
      }, window);
});
"/>
