
Those pages are based in the BuildRecordView class and
template/builds-list.pt. Basically they have a buildstate selector
action via HTTP GET and present a batched list of build records
according the selected buildstate, by default All

  >>> from zope.testbrowser import Browser
  >>> browser = Browser()

  >>> browser.open("http://localhost:9000/distros/ubuntu/+builds")
  >>> browser.contents
  '...i386 build of pmount 0.1-1 in ubuntu hoary...
  ...i386 build of mozilla-firefox 0.9 in ubuntu warty...'

  >>> browser.getControl(name="build_state").value = ['built']
  >>> browser.getControl("Update").click()
  >>> browser.contents
  '...i386 build of mozilla-firefox 0.9 in ubuntu warty...'

  >>> browser.getControl(name="build_state").value = ['depwait']
  >>> browser.getControl("Update").click()
  >>> browser.contents
  '...i386 build of libstdc++ b8p in ubuntu hoary...'

  >>> browser.getControl(name="build_state").value = ['failed']
  >>> browser.getControl("Update").click()
  >>> browser.contents
  '...i386 build of pmount 0.1-1 in ubuntu warty...'

Since the other pages tends to present a similar result and use, in
fact, the same mechanisms, we simply check if they render with no
tracebacks:

  >>> browser.open("http://localhost:9000/distros/ubuntu/hoary/+builds")
  >>> browser.open("http://localhost:9000/distros/ubuntu/hoary/i386/+builds")
  >>> browser.open("http://localhost:9000/distros/ubuntu/hoary/+source/pmount/+builds")

Check Build home pages and friends:

  >>> browser.open("http://localhost:9000/+builds/+build/7")

