= Private PPA Subscription Stories =

The owner or admin of a private PPA can add subscribers - people
or teams - to the private archive. This will enable subscribers to obtain
a custom sources.list entry and access the repository.

The owner or admin of a private archive can also edit or cancel
subscribers related to the archive.

== Story: An archive owner can add a subscription for a private archive ==

 * As a software developer who plans to release some private software
 * I want to add certain users or teams as subscribers of my PPA
 * So that they can download my software.

=== Scenario 1: A user is added as a subscriber ===

Given a private PPA for Celso

    >>> admin_browser.open("http://launchpad.dev/~cprov/+archive/ppa")
    >>> admin_browser.getLink("Administer archive").click()
    >>> admin_browser.getControl(name="field.private").value = True
    >>> admin_browser.getControl(name="field.buildd_secret").value = "secret"
    >>> admin_browser.getControl("Save").click()

And a browser for Celso currently navigated to the Manage Subscriptions page

    >>> cprov_browser = setupBrowser(
    ...     auth="Basic celso.providelo@canonical.com:cprov")
    >>> cprov_browser.open(
    ...     "http://launchpad.dev/~cprov/+archive/ppa/+subscriptions")

And a client of Celso's who has a launchpad name of 'joesmith'

    >>> login('foo.bar@canonical.com')
    >>> client = factory.makePerson(name="joesmith", displayname="Joe Smith",
    ...     password="test", email="joe@example.com")
    >>> logout()

When Celso fills in the form with 'joesmith' as the subscriber
And a blank subscription expiry
And a description of "Joe is my friend"
And clicks on the "Add subscriber" button

    >>> cprov_browser.getControl(name='field.subscriber').value = 'joesmith'
    >>> cprov_browser.getControl(
    ...     name='field.description').value = "Joe is my friend"
    >>> cprov_browser.getControl(name="field.actions.add").click()

Then Celso is redirected to the subscribers page
And the new subscription is displayed,
And a notification about the new subscriber is also displayed.

Create a helper function to print subscriptions:
    >>> def print_archive_subscriptions(contents):
    ...     subscriptions = find_tags_by_class(contents,
    ...                                        'archive_subscriber_row')
    ...     for subscription in subscriptions:
    ...         print extract_text(subscription)

    >>> print_archive_subscriptions(cprov_browser.contents)
    Name                Expires     Comment
    Joe Smith                       Joe is my friend

    >>> for msg in get_feedback_messages(cprov_browser.contents):
    ...     print msg
    Joe Smith has been added as a subscriber.

=== Scenario 2: A team is added as a subscriber ===

Given a private PPA for Celso
And a browser for Celso currently navigated to the Manage Subscriptions page

    >>> cprov_browser.open(
    ...     "http://launchpad.dev/~cprov/+archive/ppa/+subscriptions")

When Celso fills in the form with the 'launchpad' team as the subscriber
And an expiry date of '2200-08-01'
And a description of "Launchpad developer access."
And clicks on the "Add subscriber" button

    >>> cprov_browser.getControl(name='field.subscriber').value = 'launchpad'
    >>> cprov_browser.getControl(
    ...     name='field.date_expires').value = '2200-08-01'
    >>> cprov_browser.getControl(
    ...     name='field.description').value = "Launchpad developer access."
    >>> cprov_browser.getControl(name="field.actions.add").click()

Then Celso is redirected to the subscribers page
And the new subscription for the launchpad team is displayed,
And a notification about the new subscriber is also displayed.

    >>> print_archive_subscriptions(cprov_browser.contents)
    Name                    Expires       Comment
    ...
    Launchpad Developers    2200-08-01    Launchpad developer access.

    >>> for msg in get_feedback_messages(cprov_browser.contents):
    ...     print msg
    Launchpad Developers has been added as a subscriber.

== Story 2: An owner edits a subscription for his private archive ==

 * As a software developer who has released some private software
 * I want to edit subscriptions to my private PPA
 * So that I can adjust who can download my software.

== Story 3: A subscriber activates a subscription ==

 * As a user of Celso's software,
 * I want to obtain a private sources.list entry
 * So that I can download and get updates for the software in
   Celso's private PPA.

=== Scenario 1: A user activates a personal subscription ===

Given a subscription for Celso's private PPA

When Joe visits his profile (?? where would be the logical place for this?)
And clicks on the 'Private software subscriptions' link (only displayed to those with subscriptions)

    >>> joe_browser = setupBrowser(auth="Basic joe@example.com:test")
    >>> joe_browser.open(
    ...     "http://launchpad.dev/~joesmith/+archivesubscriptions")

Then a list of Andrew's current subscriptions is displayed

    >>> subscription_table = find_tag_by_id(joe_browser.contents,
    ...     "archive-subscriptions")
    >>> print extract_text(subscription_table)
    Archive                             Subscription description
    Private PPA for Celso Providelo     Joe is my friend

And the private_sources.list file is not displayed.

When Andrew clicks on the 'Activate subscription' button for Celso's PPA
Then the sources.list snippet is updated to include a line for Celso's PPA
And a notification is displayed on the screen

=== Scenario 2: A user activates a team subscription ===

== Story 4: A user's subscription expires or is cancelled ==

 * As a user of Celso's software
 * I want to know (eventually, be notified) when my subscription expires
 * So that I understand why I can no longer download Celso's software

=== Scenario 1: Accessing details for an expired subscription ===

Given an expired subscription for Celso's private PPA

When Andrew visits his subscriptions
Then the page clearly identifies the subscription as no longer valid
And there is no entry in the sources.list for the expired subscription.

=== Scenario 2: Accessing details for a cancelled subscription ===

Given a cancelled subscription for Celso's private PPA

When Andrew visits his subscriptions
Then the page clearly identifies the subscription as no longer valid
And there is no entry in the sources.list for the expired subscription.


