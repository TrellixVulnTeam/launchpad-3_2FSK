We will verify that we do not put session cookies in anonymous requests. This
is important for cacheing anonymous requests in front of Zope, such as with
Squid.

Because testbrowser does not have easy access to cookies, we'll start with a
helper class. We want to check whether the browser has a session cookie set,
not whether the server has sent a "set-cookie" header, so we have to dig into
the underlying mechanize browser.

    >>> from canonical.launchpad.testing.cookie import Cookies
    >>> cookies = Cookies(browser)

Now we'll actually begin the demonstration. When we go to launchpad as an
anonymous user, the browser has no cookies.

    >>> browser.open('http://launchpad.dev:8085')
    >>> len(cookies)
    0

Now let's log in and show that the session cookie is set.

    # XXX: We also need cookie auth here; another tricky one.
    >>> import datetime
    >>> import pytz
    >>> now = datetime.datetime.now(pytz.UTC).replace(microsecond=0)
    >>> year_from_now = now + datetime.timedelta(days=365)
    >>> year_plus_from_now = year_from_now + datetime.timedelta(minutes=1)
    >>> browser.open('http://launchpad.dev:8085/+login')

    # On a browser with JS support, this page would've been automatically
    # submitted (thanks to the onload handler), but testbrowser doesn't support
    # JS, so we have to submit the form manually.
    >>> print browser.contents
    <html>...<body onload="document.forms[0].submit();"...
    >>> browser.getControl('Continue').click()

    >>> browser.getControl(name='field.email').value = 'foo.bar@canonical.com'
    >>> browser.getControl(name='field.password').value = 'test'
    >>> browser.getControl('Continue').click()
    >>> print extract_text(find_tag_by_id(browser.contents, 'logincontrol'))
    Foo Bar...

    # We have one cookie for the OpenID provider (testopenid) and one for
    # Launchpad itself (launchpad_tests).
    >>> len(cookies)
    2
    >>> sorted(cookies.keys())
    ['launchpad_tests', 'testopenid']
    >>> expires = cookies.getInfo('launchpad_tests')['expires']
    >>> year_from_now <= expires < year_plus_from_now
    True
    >>> cookies.getInfo('launchpad_tests')['domain']
    '.launchpad.dev'

The cookie will be set to expire in ten minutes when you log out.  The ten
minute time interval (set in canonical.launchpad.webapp.login and enforced
with an assert in canonical.launchpad.webapp.session) is intended to be fudge
time for browsers with bad system clocks.

    >>> browser.getControl('Log Out').click()
    >>> len(cookies)
    2
    >>> expires = cookies.getInfo('launchpad_tests')['expires']
    >>> ten_minutes_from_now = now + datetime.timedelta(minutes=10)
    >>> eleven_minutes_from_now = now + datetime.timedelta(minutes=11)
    >>> ten_minutes_from_now <= expires < eleven_minutes_from_now
    True
