= Creating mailing lists =

When a Launchpad user creates a mailing list for a team, and that mailing list
is approved by a special 'mailing list expert', Mailman will eventually notice
this and create the mailing list itself.

First, No Privileges Person creates a new team.

    >>> import itest_helper
    >>> browser = itest_helper.make_browser()
    >>> browser.open('http://launchpad.dev/people/+newteam')
    >>> browser.getControl(name='field.name').value = 'itest-one'
    >>> browser.getControl('Display Name').value = 'ITest One'
    >>> browser.getControl(name='field.subscriptionpolicy').displayValue = [
    ...     'Open Team']
    >>> browser.getControl('Create').click()
    >>> browser.title
    'ITest One in Launchpad'

To request a mailing list, No Privileges Person navigates to the 'Configure
mailing list' page and registers their application for a mailing list.

    >>> serial_watcher = itest_helper.LogWatcher('serial')
    >>> browser.reload()
    >>> browser.getLink('Configure mailing list').click()
    >>> browser.getControl('Apply for Mailing List').click()

At this point, Mailman has still not created the mailing list.

    # This will time out because no changes have been propagated to Mailman.
    >>> serial_watcher.wait()
    'Timed out'
    >>> from Mailman.Utils import list_names
    >>> sorted(name for name in list_names() if name.startswith('itest-'))
    []


== Approved requests ==

In order for Mailman to create the mailing list, a Launchpad 'mailing list
expert' must approve the application.  This cannot currently be done through
the web, so we'll go behind the scenes to do this.

    >>> list_one = itest_helper.review_list('itest-one')
    >>> sorted(name for name in list_names() if name.startswith('itest-'))
    ['itest-one']


== Declined requests ==

Now, No Privileges Person creates another team, and requests a mailing list
for this new team.

    >>> browser.open('http://launchpad.dev/people/+newteam')
    >>> browser.getControl(name='field.name').value = 'itest-two'
    >>> browser.getControl('Display Name').value = 'ITest Two'
    >>> browser.getControl(name='field.subscriptionpolicy').displayValue = [
    ...     'Open Team']
    >>> browser.getControl('Create').click()
    >>> browser.getLink('Configure mailing list').click()
    >>> browser.getControl('Apply for Mailing List').click()

This time, however, the mailing list expert declines the application for a new
mailing list.

    >>> from canonical.launchpad.interfaces import MailingListStatus
    >>> list_two = itest_helper.review_list(
    ...     'itest-two', MailingListStatus.DECLINED)

    >>> sorted(name for name in list_names() if name.startswith('itest-'))
    ['itest-one']
