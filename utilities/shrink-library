#!/bin/sh
# Copyright (c) 2004 Jan Hudec
#
# See the file "COPYING" for further information about
# the copyright and warranty status of this work.

die () {
    echo "* Error: $1" >&2
    exit $2
}

log () {
    echo "+ $1"
}

# Get revision library first...
library=$(cat ${HOME}/.arch-params/\=revision-library)
test -z "$library" && die "Revision library not configured"

# Get parameters...
if test -z "$1"; then
    maxage=2419200 # 28 days in seconds
elif expr "$1" : '[0-9]\+[Ww]$' > /dev/null; then
    maxage=$(expr 604800 \* ${1%[Ww]})
elif expr "$1" : '[0-9]\+[Dd]$' > /dev/null; then
    maxage=$(expr 86400 \* ${1%[Dd]})
elif expr "$1" : '[0-9]\+[Hh]$' > /dev/null; then
    maxage=$(expr 3600 \* ${1%[Hh]})
elif expr "$1" : '[0-9]\+[Mm]$' > /dev/null; then
    maxage=$(expr 60 \* ${1%[Mm]})
elif expr "$1" : '[0-9]\+$' > /dev/null; then
    maxage=$1
else
    cat >&2 <<EOH
shrink-library: Remove revisions older than some time from baz revlib.

Usage: shrink-library [age]
    age		It can be a number (in seconds by default) with optional suffix
		m for minutes, h for hours or d for days and w for weeks.

This script will remove all revisions from a library, that were not accessed
for a specified period of time, except it won't remove latest revision of each
version. Default age is 4 weeks.

This script is intended to be run from crontab once a while, but of course can
be run manualy too. With argument 0 it will behave just as prune-library.
EOH
    exit 1;
fi

# Ancient? -- test whether file (directory) was not accessed for $maxage
# seconds
ancient_since=$(expr $(date '+%s') - "$maxage")

ancient_p () {
for lib in $1; do
    if [ -d "$lib/$2" ]; then
        test $(stat -c '%X' -- "$lib/$2") -lt "$ancient_since"
	return $?
    fi
done
}

for archive in $(baz library-archives); do
    for category in $(baz library-categories "$archive"); do
	for branch in $(baz library-branches "$archive/$category"); do
	    for version in $(baz library-versions "$archive/$branch"); do
		revision=''
		for nextrev in $(baz library-revisions "$archive/$version"); do
		    if test -n "$revision"; then
			if ancient_p "$library" "$archive/$category/$branch/$version/$version--$revision"; then
			    log "Removing $archive/$version--$revision"
			    baz library-remove "$archive/$version--$revision"
			fi
		    fi
		    revision=$nextrev
		done
	    done
	done
    done
done

# arch-tag: a5277605-939d-44f7-8325-326a968a45ac
