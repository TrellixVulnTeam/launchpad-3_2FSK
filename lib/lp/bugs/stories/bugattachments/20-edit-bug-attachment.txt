We can also edit the attachment details, let's navigate to that page.

    >>> user_browser.open('http://bugs.launchpad.dev/firefox/+bug/1')
    >>> user_browser.getLink(url='+attachment/1').click()
    >>> user_browser.url
    'http://bugs.launchpad.dev/firefox/+bug/1/+attachment/1'

    >>> 'Bug #1 - Edit attachment' in user_browser.contents
    True

There's also an option to cancel, which takes you back to the bug
page, maintaining the firefox context.

    >>> user_browser.getLink('Cancel')
    <Link text='Cancel' url='http://bugs.launchpad.dev/firefox/+bug/1'>

After editing the attachment details (we leave some leading and trailing
whitespace to test that's correctly stripped)...

    >>> user_browser.getControl('Title').value = '   Another title  '
    >>> user_browser.getControl('Content Type').value = 'text/html'
    >>> user_browser.getControl('Change').click()

...we're redirected to the bug page

    >>> user_browser.url
    'http://bugs.launchpad.dev/firefox/+bug/1'

    >>> 'Another title' in user_browser.contents
    True

We can edit the attachment to be a patch.

    >>> user_browser.getLink(url='+attachment/1').click()
    >>> user_browser.getControl('This attachment is a patch').selected = True
    >>> user_browser.getControl('Change').click()

    >>> user_browser.url
    'http://bugs.launchpad.dev/firefox/+bug/1'

The attachment that became a patch is now shown in the portlet "Patches"...

    >>> patches = find_portlet(user_browser.contents, 'Patches')
    >>> for li_tag in patches.findAll('li', 'download-attachment'):
    ...   print li_tag.a.renderContents()
    Another title

...while it is gone from the portlet "Bug attachments".

    >>> attachments = find_portlet(user_browser.contents, 'Bug attachments')
    >>> for li_tag in attachments.findAll('li', 'download-attachment'):
    ...   print li_tag.a.renderContents()
    bar.txt

The content type of a patch is automatically changed to text/plain.

    >>> user_browser.getLink(url='+attachment/1').click()
    >>> user_browser.getControl('Content Type').value
    'text/plain'

Clicking the link "Add patch" in the patches portlet open the form
to add bug comments with the checkbox "This attachment is a patch"
enabled.

    >>> user_browser.open('http://bugs.launchpad.dev/firefox/+bug/1')
    >>> user_browser.getLink('Add patch').click()
    >>> patch_checkbox = user_browser.getControl('This attachment is a patch')
    >>> patch_checkbox.selected
    True
