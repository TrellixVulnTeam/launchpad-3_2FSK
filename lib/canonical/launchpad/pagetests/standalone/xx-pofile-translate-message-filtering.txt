This test will check that our message filtering feature is working as
expected.

We know that the valid msgsets that this form uses are the ones with
the ids between 130 and 151 and, by default, the batch are of 10 items.

We define first a function we are going to use in this test.

  >>> def print_shown_messages(browser):
  ...     """Print the id/value of all shown translations on the page."""
  ...     from BeautifulSoup import BeautifulSoup
  ...
  ...     for msgset_id in range(130, 152):
  ...         try:
  ...             translation_ctrl = browser.getControl(
  ...                 name='msgset_%d_es_translation_0_new' % msgset_id)
  ...         except LookupError:
  ...             pass
  ...         else:
  ...             translation_form_soup = BeautifulSoup(browser.contents)
  ...             translation_tbody = translation_form_soup.findAll('tbody')[1]
  ...             translation_tbody_content = translation_tbody.renderContents()
  ...             translation_table_soup = BeautifulSoup(translation_tbody_content)
  ...             tr_list = translation_table_soup.findAll('tr')
  ...             msgset_searched = '"msgset_%d"' % msgset_id
  ...             if msgset_id in (137, 142):
  ...                 translation_index = 1
  ...             elif msgset_id == 151:
  ...                 translation_index = 3
  ...             elif msgset_id < 149:
  ...                 translation_index = 2
  ...             else:
  ...                 translation_index = 4
  ...             for index in range(len(tr_list)):
  ...                 if msgset_searched in str(tr_list[index]):
  ...                     tr_translation = tr_list[index + translation_index]
  ...                     td_ignore, td_translation = tr_translation('td')
  ...                     print (msgset_id, td_translation.renderContents())
  ...                     break

Let's see the list of untranslated messsages that the pofile has with the
first batch of entries:

  >>> browser.addHeader('Authorization', 'Basic carlos@canonical.com:test')
  >>> browser.open(
  ...     'http://localhost/ubuntu/hoary/+source/evolution/+pots/evolution-2.2/es/+translate?show=untranslated')
  >>> browser.url
  'http://localhost/ubuntu/hoary/+source/evolution/+pots/evolution-2.2/es/+translate?show=untranslated'

  >>> print_shown_messages(browser)
  (133, '\n          (no translation yet)\n        ')
  (135, '\n          (no translation yet)\n        ')
  (136, '\n          (no translation yet)\n        ')
  (137, '\n          (no translation yet)\n        ')
  (138, '\n          (no translation yet)\n        ')
  (139, '\n          (no translation yet)\n        ')
  (140, '\n          (no translation yet)\n        ')
  (141, '\n          (no translation yet)\n        ')
  (142, '\n          (no translation yet)\n        ')
  (148, '\n          (no translation yet)\n        ')

The set of messages that are untranslated in the second batch:

  >>> browser.getLink('Next').click()
  >>> browser.url
  'http://localhost/ubuntu/hoary/+source/evolution/+pots/evolution-2.2/es/+translate?show=untranslated&start=10'

  >>> print_shown_messages(browser)
  (149, '\n          (no translation yet)\n        ')
  (150, '\n          (no translation yet)\n        ')
  (151, '\n          (no translation yet)\n        ')

Now, we are going to select the amount of entries that need to be reviewed.

  >>> browser.open(
  ...     'http://localhost/ubuntu/hoary/+source/evolution/+pots/evolution-2.2/es/+translate?show=need_review')
  >>> browser.url
  'http://localhost/ubuntu/hoary/+source/evolution/+pots/evolution-2.2/es/+translate?show=need_review'

  >>> print_shown_messages(browser)
  (132, 'tiene ')
  (146, '%d foo')

We are now at the end of this template. Let's try the form submission
to be sure that we don't redirect to a broken URL but to the first batch.

  >>> browser.getControl(name='submit_translations').click()
  >>> browser.url
  'http://localhost/ubuntu/hoary/+source/evolution/+pots/evolution-2.2/es/+translate?show=need_review'
