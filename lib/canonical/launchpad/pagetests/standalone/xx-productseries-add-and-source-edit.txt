Open the "Upstream Source Import" page for a series.

  >>> browser.addHeader('Authorization', 'Basic test@canonical.com:test')
  >>> browser.open('http://launchpad.dev/products/firefox/trunk')
  >>> browser.getLink('Edit Source').click()
  >>> print browser.url
  http://launchpad.dev/products/firefox/trunk/+source

  >>> print browser.contents
  <...
  ...<h1>Upstream source import</h1>...
  ...


Currently, no revision details are selected.  We can submit the form
as is, which will leave us with no revision control system selected:

  >>> browser.getControl('No revision control system, or Bazaar').click()
  >>> browser.getControl('Update RCS Details').click()
  >>> print browser.url
  http://launchpad.dev/products/firefox/trunk


Now we'll go back to the edit source form and add some CVS details:

  >>> browser.getLink('Edit Source').click()
  >>> print browser.url
  http://launchpad.dev/products/firefox/trunk/+source
  >>> browser.getControl('CVS').click()
  >>> browser.getControl('Repository root').value = (
  ...     ':pserver:anonymous@cvs-mirror.mozilla.org:/cvsroot')
  >>> browser.getControl('Module').value = 'mozilla'
  >>> browser.getControl('Branch name').value = 'main'
  >>> browser.getControl('Update RCS Details').click()
  >>> print browser.url
  http://launchpad.dev/products/firefox/trunk

We check if the info we just entered on the form is displayed correctly

  >>> print find_main_content(browser.contents)
  <...
  ...<td>CVS root:</td>...
  ...<td>:pserver:anonymous@cvs-mirror.mozilla.org:/cvsroot</td>...
  ...

And we test if the validator is working adding the same CVS details to
another product

  >>> browser.open('http://launchpad.dev/products/netapplet/trunk/+source')
  >>> browser.getControl('CVS').click()
  >>> browser.getControl('Repository root').value = (
  ...     ':pserver:anonymous@cvs-mirror.mozilla.org:/cvsroot')
  >>> browser.getControl('Module').value = 'mozilla'
  >>> browser.getControl('Branch name').value = 'main'
  >>> browser.getControl('Update RCS Details').click()
  >>> for tag in find_tags_by_class(browser.contents, 'error'):
  ...     print tag
  <...
  ...CVS repository details already in use by another product...
  
Now we test if we can edit again changing the RCS to Subversion:

  >>> browser.open('http://launchpad.dev/products/firefox/trunk/+source')
  >>> browser.getControl('Subversion').click()
  >>> browser.getControl('Repository', index=1).value = (
  ...     'svn://svn.mozilla.org/firefox/trunk')
  >>> browser.getControl('Update RCS Details').click()
  >>> print browser.url
  http://launchpad.dev/products/firefox/trunk

  >>> print find_main_content(browser.contents)
  <...
  ...<td>Subversion Repository:</td>...
  ...<td>svn://svn.mozilla.org/firefox/trunk</td>...
  ...


Test if the RCS details validator is working properly by adding the same
svnrepository to another ProductSeries

  >>> browser.open('http://launchpad.dev/products/netapplet/trunk/+source')
  >>> browser.getControl('Subversion').click()
  >>> browser.getControl('Repository', index=1).value = (
  ...     'svn://svn.mozilla.org/firefox/trunk')
  >>> browser.getControl('Update RCS Details').click()
  >>> for tag in find_tags_by_class(browser.contents, 'error'):
  ...     print tag
  <...
  ...Subversion repository details already in use by another product...

