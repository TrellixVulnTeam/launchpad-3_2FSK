= XMLRPC urllib2 transport =

When using XMLRPC for connecting to external bug trackers, we need to
use a special transport, which processes http cookies correctly, and
which can connect through an http proxy server.

    >>> from canonical.launchpad.ftests.externalbugtracker import (
    ...     patch_transport_opener)
    >>> from canonical.launchpad.components.externalbugtracker.xmlrpc import (
    ...     UrlLib2Transport)

We create the transport, and pass it a wrapper which returns a response
without actually opening a connection. The response returns the request
url as an XMLRPC parameter, and sets a cookie from the server, 'foo=bar'.

    >>> transport = UrlLib2Transport('http://www.example.com/xmlrpc')

The transport uses an opener with a ProxyHandler, to make sure it works
in environments where http connections are made over a proxy.

    >>> transport.opener.handlers
    [<urllib2.ProxyHandler instance ...]

We patch the opener to return a fixed response without actually opening
a connection.

    >>> patch_transport_opener(transport)

Before sending the request, the transport's cookie jar is empty.

    >>> transport.cookie_processor.cookiejar
    <cookielib.CookieJar[]>

    >>> request_body = """<?xml version="1.0"?>
    ... <methodCall>
    ...   <methodName>examples.testMethod</methodName>
    ...   <params>
    ...     <param>
    ...       <value>
    ...         <int>42</int>
    ...       </value>
    ...     </param>
    ...   </params>
    ... </methodCall>
    ... """
    >>> transport.request('www.example.com', 'xmlrpc', request_body)
    ('http://www.example.com/xmlrpc',)

We received the url as the single XMLRPC result, and the cookie jar now
contains the 'foo=bar' cookie sent by the server.

    >>> transport.cookie_processor.cookiejar
    <cookielib.CookieJar[Cookie(version=0, name='foo', value='bar'...)]>

In addition to cookies sent by the server, we can set cookies locally.

    >>> transport.setCookie('ding=dong')
    >>> transport.cookie_processor.cookiejar
    <cookielib.CookieJar[Cookie(version=0, name='ding', value='dong'...),
                         Cookie(version=0, name='foo', value='bar'...)]>
