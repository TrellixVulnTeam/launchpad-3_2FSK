= Validating of branch URLs =

First, let's define a helper to post to the Person +addbranch form.

>>> add_branch_form = 'http://launchpad.dev/people/lifeless/+addbranch'
>>> def add_branch(url):
...     user_browser.open(add_branch_form)
...     user_browser.getControl('Name').value = 'pyresources'
...     user_browser.getControl('Branch URL').value = url
...     user_browser.getControl('Add Branch').click()


Try to create a branch with an invalid URL.

>>> add_branch('example.com/~lifeless/pyresources/')
>>> user_browser.url == add_branch_form
True
>>> user_browser.contents
'...Not a valid URL. Please enter the full URL...'


Try to create branches with URLs in bazaar.launchpad.net.

>>> add_branch('http://bazaar.launchpad.net',)
>>> user_browser.url == add_branch_form
True
>>> user_browser.contents
'...Don\'t manually register a bzr branch on <code>bazaar.launchpad.net</code>...'

>>> add_branch('http://bazaar.launchpad.net/~me/that/this')
>>> user_browser.url == add_branch_form
True
>>> user_browser.contents
'...Don\'t manually register a bzr branch on <code>bazaar.launchpad.net</code>...'


Try to create a branch with a URL that is already registered.

>>> add_branch('http://example.com/gnome-terminal/main/')
>>> user_browser.url == add_branch_form
True
>>> user_browser.contents
'...GNOME Terminal Mainline</a> is already registered with this URL...'


Try to create a branch without URL

>>> add_branch('')
>>> user_browser.url == add_branch_form
True
>>> user_browser.contents
'...Required input is missing...'


= The other forms =

The +addbranch form of Product, and the +edit form of a branch all use the same
validation logic that the previous form, since it is defined in the IBranch
interface. No point in repeating the tests here.
