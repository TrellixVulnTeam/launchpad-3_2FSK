= Personal Subscriptions =

Users can subscribe to bugs reported in Launchpad, via the "Subscribe" link
in the actions portlet.

  >>> from lp.bugs.tests.bug import (
  ...     print_direct_subscribers, print_indirect_subscribers)

  >>> browser = setupBrowser(auth='Basic foo.bar@canonical.com:test')
  >>> browser.open('http://bugs.launchpad.dev/firefox/+bug/1')
  >>> browser.url
  'http://bugs.launchpad.dev/firefox/+bug/1'

    >>> browser.getLink('Subscribe').click()

  >>> subscription_widget = browser.getControl(name='field.subscription')
  >>> subscription_widget.options
  ['name16']
  >>> subscription_widget.value
  ['name16']

  >>> submit = browser.getControl('Continue')

Clicking "Continue" subscribes the user to the bug, and tells the user
this.

  >>> submit.click()

  >>> browser.url
  'http://bugs.launchpad.dev/firefox/+bug/1/'

  >>> for tag in find_tags_by_class(browser.contents, "informational message"):
  ...   print tag.renderContents()
  You have been subscribed to this bug.

There's also now a link to unsubscribe the user next to the name. It's a
relative URL to +subscribe, so it will only work when the portlet is
in the context of the bug page.

  >>> browser.open(
  ...     'http://bugs.launchpad.dev/bugs/1/+bug-portlet-subscribers-content')
  >>> print_direct_subscribers(browser.contents)
  Foo Bar (Subscribed themselves) (Unsubscribe Foo Bar)
  Sample Person (Subscribed by Launchpad Janitor)
  Steve Alexander (Subscribed by Launchpad Janitor)

  >>> browser.open(
  ...     'http://bugs.launchpad.dev/bugs/1/+bug-portlet-subscribers-content')
  >>> link = browser.getLink(id='unsubscribe-subscriber-16')
  >>> print link.mech_link.url
  +subscribe

  >>> browser.open('http://bugs.launchpad.dev/firefox/+bug/1/')
  >>> browser.getLink('Unsubscribe').click()
  >>> print browser.title
  Bug #1 - Subscription options
  >>> browser.url
  'http://bugs.launchpad.dev/firefox/+bug/1/+subscribe'


Clicking the "Continue" button from the +subscribe page will unsubscribe
the user this time, and inform the user.

  >>> subscription_widget.value
  ['name16']
  >>> submit = browser.getControl('Continue')
  >>> submit.click()

  >>> browser.url
  'http://bugs.launchpad.dev/firefox/+bug/1/'

  >>> for tag in find_tags_by_class(browser.contents, 'informational message'):
  ...   print tag.renderContents()
  You have been unsubscribed from this bug.

Users can unsubscribe teams to which they belong. Let's demonstrate by
first subscribing one of Foo Bar's teams.

  >>> browser.getLink('Subscribe someone else').click()
  >>> browser.url
  'http://bugs.launchpad.dev/firefox/+bug/1/+addsubscriber'

  >>> browser.getControl('Person').value = 'launchpad'
  >>> browser.getControl('Subscribe user').click()
  >>> browser.url
  'http://bugs.launchpad.dev/firefox/+bug/1'

There's an unsubscribe link next to the team name.

  >>> browser.open(
  ...     'http://bugs.launchpad.dev/bugs/1/+bug-portlet-subscribers-content')
  >>> print_direct_subscribers(browser.contents)
  Launchpad Developers (Subscribed by Foo Bar) (Unsubscribe Launchpad
                                                Developers)
  Sample Person (Subscribed by Launchpad Janitor)
  Steve Alexander (Subscribed by Launchpad Janitor)

Clicking either the subscribe link (for subscribing the user to the bug)
or the unsubscribe link for the team gives us the option of both
subscribing Foo Bar, and unsubscribing the Launchpad team.

  >>> browser.open(
  ...     'http://bugs.launchpad.dev/bugs/1/+bug-portlet-subscribers-content')
  >>> browser.getLink(id='unsubscribe-subscriber-57').mech_link.url
  '+subscribe'

  >>> browser.open('http://bugs.launchpad.dev/firefox/+bug/1')
  >>> browser.getLink('Subscribe').click()
  >>> browser.url
  'http://bugs.launchpad.dev/firefox/+bug/1/+subscribe'

  >>> subscription_widget = browser.getControl(name='field.subscription')
  >>> subscription_widget.options
  ['name16', 'launchpad']

Let's unsubscribe the Launchpad team.

  >>> subscription_widget.value = ['launchpad']
  >>> browser.getControl('Continue').click()

  >>> browser.url
  'http://bugs.launchpad.dev/firefox/+bug/1/'

  >>> for tag in find_tags_by_class(browser.contents, 'informational message'):
  ...   print tag.renderContents()
  Launchpad Developers has been unsubscribed from this bug.

  >>> browser.open(
  ...     'http://bugs.launchpad.dev/bugs/1/+bug-portlet-subscribers-content')
  >>> print_direct_subscribers(browser.contents)
  Sample Person (Subscribed by Launchpad Janitor)
  Steve Alexander (Subscribed by Launchpad Janitor)

On the subscribe page there's a Cancel link as well, that will return
the browser to the bug page.

  >>> browser.open(
  ...     'http://bugs.launchpad.dev/firefox/+bug/1/')
  >>> browser.getLink('Subscribe').click()
  >>> browser.url
  'http://bugs.launchpad.dev/firefox/+bug/1/+subscribe'

  >>> subscription_widget = browser.getControl(name='field.subscription')
  >>> subscription_widget.value
  ['name16']
  >>> browser.getLink('Cancel').click()
  >>> browser.url
  'http://bugs.launchpad.dev/firefox/+bug/1'

Foo Bar wasn't subscribed to the bug.

  >>> len(find_tags_by_class(browser.contents, 'informational message'))
  0
  >>> browser.open(
  ...     'http://bugs.launchpad.dev/bugs/1/+bug-portlet-subscribers-content')
  >>> print_direct_subscribers(browser.contents)
  Sample Person (Subscribed by Launchpad Janitor)
  Steve Alexander (Subscribed by Launchpad Janitor)

Subscribers which the current user may unsubscribe (the current user and teams
they are a member of) display first in the list, before all other subscriptions.

  >>> browser.open('http://bugs.launchpad.dev/firefox/+bug/1/+addsubscriber')
  >>> browser.getControl('Person').value = 'testing-spanish-team'
  >>> browser.getControl('Subscribe user').click()
  >>> browser.open(
  ...     'http://bugs.launchpad.dev/bugs/1/+bug-portlet-subscribers-content')
  >>> print_direct_subscribers(browser.contents)
  testing Spanish team (Subscribed by Foo Bar)
                       (Unsubscribe testing Spanish team)
  Sample Person (Subscribed by Launchpad Janitor)
  Steve Alexander (Subscribed by Launchpad Janitor)

== Subscriptions and Duplicate Bugs ==

Because we auto-subscribe users that are directly subscribed to dupes of
a bug, we give the option to unsubscribe from dupe target bugs. Behind
the scenes, this is just unsubscribing the user from the duplicate(s) of
this bug that caused us to auto-subscribe them.

For example, Steve Alexander can currently subscribe to bug #3.

    >>> stevea_browser = setupBrowser(
    ...   auth="Basic steve.alexander@ubuntulinux.com:test")
    >>> stevea_browser.open(
    ...     "http://launchpad.dev/bugs/3/+bug-portlet-subscribers-content")
    >>> print_indirect_subscribers(stevea_browser.contents)
    From duplicates:
    Also notified:
    Mark Shuttleworth

But if bug #2, a bug that Steve is directly subscribed to, is marked as
a dupe of bug #3, then Steve gets indirectly subscribed to bug #3, and
is presented with the Unsubscribe link instead.

  >>> stevea_browser.open(
  ...     "http://launchpad.dev/tomcat/+bug/2/+duplicate")

  >>> stevea_browser.getControl("Duplicate Of").value = "3"
  >>> stevea_browser.getControl("Change").click()

  >>> stevea_browser.open(
  ...     "http://launchpad.dev/bugs/3/+bug-portlet-subscribers-content")

  >>> print_indirect_subscribers(stevea_browser.contents)
  From duplicates:
  Steve Alexander (Subscribed by Launchpad Janitor)
                  (Unsubscribe Steve Alexander)
  Also notified:
  Mark Shuttleworth

  >>> stevea_browser.getLink(id='unsubscribe-subscriber-11').mech_link.url
  '+subscribe'

When he chooses to unsubscribe, he will be unsubscribed from bug #2, the
dupe of bug #3, so he'll no longer get mail from bug #3.

  >>> stevea_browser.open("http://launchpad.dev/bugs/3")
  >>> stevea_browser.getLink('Unsubscribe').click()
  >>> stevea_browser.getControl("Continue").click()

# XXX: Brad Bollenbach 2006-09-27 bug=62634: Printing the tag here,
# instead of tag.string.

  >>> for tag in find_tags_by_class(
  ...     stevea_browser.contents, 'informational message'):
  ...   print tag.renderContents()
  You have been unsubscribed from this bug and 1 duplicate (<a...#2</a>)...

(Except for Mark, who has a structural subscription to the target,
there are no longer any indirect subscribers, because Steve was
unsubscribed from the dupes and thus is no longer indirectly subscribed
to bug #3.)

  >>> stevea_browser.open(
  ...     "http://launchpad.dev/bugs/3/+bug-portlet-subscribers-content")
  >>> print_indirect_subscribers(stevea_browser.contents)
  From duplicates:
  Also notified:
  Mark Shuttleworth

Let's repeat this example, with Steve subscribed to two different dupes,
to see how the unsubscribe notification changes slightly, because he
gets unsubscribed from more than one duplicate.

  >>> stevea_browser.open(
  ...     "http://launchpad.dev/firefox/+bug/1/+duplicate")
  >>> stevea_browser.getControl("Duplicate Of").value = "3"
  >>> stevea_browser.getControl("Change").click()

(Resubscribe Steve to bug #2, because he was unsubscribed in the
previous example.)

  >>> stevea_browser.open(
  ...     "http://launchpad.dev/tomcat/+bug/2/+subscribe")
  >>> stevea_browser.getControl("Continue").click()

  >>> stevea_browser.open(
  ...     "http://launchpad.dev/bugs/3/+bug-portlet-subscribers-content")
  >>> print_indirect_subscribers(stevea_browser.contents)
  From duplicates:
  Sample Person (Subscribed ...)
  Steve Alexander (Subscribed ...) (Unsubscribe Steve Alexander)
  testing Spanish team (Subscribed by Foo Bar)
  Also notified:
  Mark Shuttleworth

  >>> stevea_browser.open("http://launchpad.dev/bugs/3")
  >>> stevea_browser.getLink("Unsubscribe").click()
  >>> stevea_browser.getControl("Continue").click()

  >>> for tag in find_tags_by_class(
  ...     stevea_browser.contents, 'informational message'):
  ...   print tag.renderContents()
  You have been unsubscribed from this bug and 2 duplicates (<a...#1</a>, <a...#2</a>)...

(Let's undupe bug #1 from bug #3, since it's unneeded for the examples
that follow.)

  >>> stevea_browser.open(
  ...     "http://launchpad.dev/firefox/+bug/1/+duplicate")
  >>> stevea_browser.getControl("Duplicate Of").value = ""
  >>> stevea_browser.getControl("Change").click()

This unsubscribe behaviour is team-aware too, so you can unsubscribe
your teams from a bug, even when the team's subscription comes from a
duplicate. For example, let's login as Foo Bar, subscribe ubuntu-team to
bug #2, and notice how bug #3's indirect subscriptions are update to
include that team.

  >>> foobar_browser = setupBrowser(auth="Basic foo.bar@canonical.com:test")
  >>> foobar_browser.open("http://launchpad.dev/bugs/2")
  >>> foobar_browser.getLink('Subscribe someone else').click()
  >>> foobar_browser.getControl("Person").value = "ubuntu-team"
  >>> foobar_browser.getControl("Subscribe user").click()

  >>> foobar_browser.open(
  ...     "http://launchpad.dev/bugs/3/+bug-portlet-subscribers-content")

  >>> print_indirect_subscribers(foobar_browser.contents)
  From duplicates:
  Ubuntu Team (Subscribed by Foo Bar) (Unsubscribe Ubuntu Team)
  Also notified:
  Mark Shuttleworth

The subscribe link for Foo Bar still says "Subscribe", because
Foo Bar can subscribe himself directly to this bug. For unsubscribing
the team, the (-) icon can be used. In reality, the two links point to
the same page, but that is changed when the page is AJAX enabled.

  >>> foobar_browser.open("http://launchpad.dev/bugs/3")
  >>> foobar_browser.getLink('Subscribe').click()

Foo Bar can unsubscribe ubuntu-team, and ubuntu-team will no longer show
up in the indirect subscriptions.

  >>> subscription_field = foobar_browser.getControl(name="field.subscription")
  >>> subscription_field.value = ["ubuntu-team"]
  >>> foobar_browser.getControl("Continue").click()

  >>> for tag in find_tags_by_class(
  ...     foobar_browser.contents, 'informational message'):
  ...   print tag.renderContents()
  Ubuntu Team has been unsubscribed from this bug and 1 duplicate (<a...#2</a>)...

(ubuntu-team is no longer an indirect subscriber.)

  >>> foobar_browser.open(
  ...     "http://launchpad.dev/bugs/3/+bug-portlet-subscribers-content")
  >>> print_indirect_subscribers(foobar_browser.contents)
  From duplicates:
  Also notified:
  Mark Shuttleworth


== Displaying subscribers ==

The display names of subscribers are escaped in the subscribers list, they are
also trimmed to 20 characters, so that they fit alongside the unsubscribe icon.

  >>> login(ANONYMOUS)
  >>> abuser = factory.makePerson(
  ...     name='abuser',
  ...     displayname='<script>javascript:alert("YO")</script>')
  >>> logout()
  >>> browser.open('http://bugs.launchpad.dev/firefox/+bug/1/+addsubscriber')
  >>> browser.getControl('Person').value = 'abuser'
  >>> browser.getControl('Subscribe user').click()
  >>> browser.open(
  ...     'http://bugs.launchpad.dev/bugs/1/+bug-portlet-subscribers-content')
  >>> subscriber_list = find_tag_by_id(
  ...     browser.contents, 'subscribers-direct')
  >>> for subscriber in subscriber_list.findAll('div'):
  ...     if '~abuser' in subscriber.a['href']:
  ...         print subscriber.a.contents[2].strip()
  &lt;script&gt;javascrip...
