# Copyright 2009 Canonical Ltd.  All rights reserved.

"""Events generated by the scanner."""

__metaclass__ = type
__all__ = [
    'NewRevision',
    ]


class ScannerEvent:
    """Base scanner event."""

    def __init__(self, db_branch, bzr_branch):
        """"Construct a scanner event.

        :param db_branch: The database IBranch.
        :param bzr_branch: The Bazaar branch being scanned.
        """
        self.db_branch = db_branch
        self.bzr_branch = bzr_branch


class BazaarBranchLoaded(ScannerEvent):

    bzr_ancestry = None
    bzr_revision = None


class DatabaseBranchLoaded(ScannerEvent):

    db_ancestry = None
    db_history = None
    db_branch_revision_map = None


class NewRevision(ScannerEvent):
    """A new revision has been found in the branch."""

    def __init__(self, db_branch, bzr_branch, db_revision, bzr_revision,
                 revno):
        """Construct a `NewRevision` event.

        :param db_branch: The database branch.
        :param bzr_branch: The Bazaar branch.
        :param db_branch: An `IRevision` for the new revision.
        :param bzr_revision: The new Bazaar revision.
        :param revno: The revision number of the new revision, None if not
            mainline.
        """
        super(NewRevision, self).__init__(db_branch, bzr_branch)
        self.db_revision = db_revision
        self.bzr_revision = bzr_revision
        self.revno = revno

    def isMainline(self):
        """Is the new revision a mainline one?"""
        return self.revno is not None


class RevisionsRemoved(ScannerEvent):

    removed_history = None


class TipChanged(ScannerEvent):

    last_revision = None
    last_revno = None


class MergeDetected:

    source_db_branch = None
    target_db_branch = None
    proposal = None
