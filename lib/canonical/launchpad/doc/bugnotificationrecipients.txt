
BugNotificationRecipients instances store email addresses mapped to the
reason for which they are being notified in a certain bug. It implements
the INotificationRecipientSet interface for bug notifications.

== How it's used ==

The IBug.getBugNotificationRecipients() implementation creates and uses
BugNotificationRecipients instances. Here's an example of this in
action:

  >>> from canonical.launchpad.database import Bug, Distribution, Product
  >>> bug_one = Bug.get(1)
  >>> bug_two = Bug.get(2)
  >>> recipients = bug_one.getBugNotificationRecipients()

The instance of BugNotificationRecipients we get back correctly
implements INotificationRecipientSet:

  >>> from zope.interface.verify import verifyObject
  >>> from canonical.launchpad.interfaces import INotificationRecipientSet
  >>> verifyObject(INotificationRecipientSet, recipients)
  True

This instance contains email addresses and rationales. Let's define a
helper function so we can format this output:

  >>> def print_rationales(rationale):
  ...   for address in rationale.getEmails():
  ...     text, header = rationale.getReason(address)
  ...     print address
  ...     print "    %s" % header
  ...     print "    %s" % text

And print them out. The first line is the email address; second is the
text appropriate to be used in an X- header, and the last is the text
appropriate for an email footer.

  >>> print_rationales(recipients)
  foo.bar@canonical.com
      Bug Contact (mozilla-firefox in ubuntu)
      You received this bug notification because you are a bug contact for mozilla-firefox in ubuntu.
  mark@hbd.com
      Assignee
      You received this bug notification because you are a bug assignee.
  test@canonical.com
      Subscriber
      You received this bug notification because you are a direct subscriber of the bug.

== The Bug-BugNotificationRecipients API ==

Most of the API of BugNotificationRecipients is actually kept private
between the Bug class and itself. Let's now demonstrate the API that Bug
and BugNotificationRecipients use to set up the rationales; this is
essentially what happens under the wraps when you call
IBug.getBugNotificationRecipients().

Let's up some data for our test:

  >>> from canonical.launchpad.interfaces import IPersonSet, BugNotificationRecipients
  >>> from zope.component import getUtility
  >>> debian = Distribution.selectOneBy(name="debian")
  >>> pmount = debian.getSourcePackage("pmount")
  >>> alsa_utils = Product.selectOneBy(name="alsa-utils")
  >>> gnomebaker = Product.selectOneBy(name="gnomebaker")
  >>> personset = getUtility(IPersonSet)

Here's where getBugNotificationRecipients() starts off. First, a
BugNotificationRecipients instance is created:

  >>> recipients = BugNotificationRecipients()

Then, subscribers of various types are added:

  >>> foo_bar = personset.getByEmail("foo.bar@canonical.com")
  >>> recipients.addDupeSubscriber(foo_bar)

  >>> test = personset.getByEmail("test@canonical.com")
  >>> recipients.addDirectSubscriber(test)

  >>> no_priv = personset.getByEmail("no-priv@canonical.com")
  >>> recipients.addAssignee(no_priv)

  >>> daf = personset.getByEmail("daf@canonical.com")
  >>> recipients.addDistroBugContact(daf, debian)

  >>> carlos = personset.getByEmail("carlos@canonical.com")
  >>> recipients.addPackageBugContact(carlos, pmount)

  >>> marilize = personset.getByEmail("marilize@hbd.com")
  >>> recipients.addUpstreamBugContact(marilize, alsa_utils)

  >>> testtest = personset.getByEmail("testtest@canonical.com")
  >>> recipients.addUpstreamRegistrant(testtest, gnomebaker)

If we print out the recipients and rationales, here's what we get:

  >>> print_rationales(recipients)
  carlos@canonical.com
      Bug Contact (pmount in debian)
      You received this bug notification because you are a bug contact for pmount in debian.
  daf@canonical.com
      Bug Contact (Debian)
      You received this bug notification because you are the bug contact for Debian.
  foo.bar@canonical.com
      Subscriber of Duplicate
      You received this bug notification because you are a direct subscriber of a duplicate bug.
  marilize@hbd.com
      Bug Contact (alsa-utils)
      You received this bug notification because you are the bug contact for alsa-utils.
  no-priv@canonical.com
      Assignee
      You received this bug notification because you are a bug assignee.
  test@canonical.com
      Subscriber
      You received this bug notification because you are a direct subscriber of the bug.

Note how we account for every important variation in bug subscriptions
here: bug contacts, subscribers, dupe subscribers and more.

== A duplicate bug modification notifies its main bug ==

If the bug we are changing is actually a duplicate of another bug, an
additional step is involved. A BugNotificationRecipients instance is
created, annotating that it represents a master bug (of which we are a
duplicate of).

  >>> recipients = BugNotificationRecipients(duplicateof=bug_two)

  >>> foo_bar = personset.getByEmail("foo.bar@canonical.com")
  >>> recipients.addDupeSubscriber(foo_bar)

  >>> test = personset.getByEmail("test@canonical.com")
  >>> recipients.addDirectSubscriber(test)

  >>> no_priv = personset.getByEmail("no-priv@canonical.com")
  >>> recipients.addAssignee(no_priv)

  >>> daf = personset.getByEmail("daf@canonical.com")
  >>> recipients.addDistroBugContact(daf, debian)

  >>> carlos = personset.getByEmail("carlos@canonical.com")
  >>> recipients.addPackageBugContact(carlos, pmount)

  >>> marilize = personset.getByEmail("marilize@hbd.com")
  >>> recipients.addUpstreamBugContact(marilize, alsa_utils)

  >>> testtest = personset.getByEmail("testtest@canonical.com")
  >>> recipients.addUpstreamRegistrant(testtest, gnomebaker)

If you print out rationales in this situation, you'll see that the
message says "via Bug 2". The reason for this is that the people being
notified here are actually subscribed to bug 2, and they may be asking
themselves why the hell they are getting email for bug 1.

  >>> print_rationales(recipients)
  carlos@canonical.com
      Bug Contact (pmount in debian) via Bug 2
      You received this bug notification because you are a bug contact for pmount in debian (via bug 2).
  daf@canonical.com
      Bug Contact (Debian) via Bug 2
      You received this bug notification because you are the bug contact for Debian (via bug 2).
  foo.bar@canonical.com
      Subscriber of Duplicate via Bug 2
      You received this bug notification because you are a direct subscriber of a duplicate bug (via bug 2).
  marilize@hbd.com
      Bug Contact (alsa-utils) via Bug 2
      You received this bug notification because you are the bug contact for alsa-utils (via bug 2).
  no-priv@canonical.com
      Assignee via Bug 2
      You received this bug notification because you are a bug assignee (via bug 2).
  test@canonical.com
      Subscriber via Bug 2
      You received this bug notification because you are a direct subscriber of the bug (via bug 2).

== Team subscribers are special ==

In the case where the teams are subscribers, things vary according to
whether the team has a contact email address or not. When there is no
contact email address, all team members (cascaded down) get emailed
directly, and the person getting the notification may not know of this
immediately.

Here's an example of this situation:

  >>> recipients = BugNotificationRecipients()
  >>> testing_spanish_team = personset.getByName("testing-spanish-team")
  >>> recipients.addDupeSubscriber(testing_spanish_team)

  >>> guadamen = personset.getByName("guadamen")
  >>> recipients.addAssignee(guadamen)

  >>> name20 = personset.getByName("name20")
  >>> recipients.addPackageBugContact(name20, pmount)

  >>> name18 = personset.getByName("name18")
  >>> recipients.addUpstreamBugContact(name18, alsa_utils)

  >>> vcs_imports = personset.getByName("vcs-imports")
  >>> recipients.addUpstreamRegistrant(vcs_imports, gnomebaker)

  >>> shipit_admins = personset.getByName("shipit-admins")
  >>> recipients.addDirectSubscriber(shipit_admins)

  >>> launchpad_buildd_admins = personset.getByName("launchpad-buildd-admins")
  >>> recipients.addDistroBugContact(launchpad_buildd_admins, debian)

You'll notice that the rationales this time state clearly which team
membership is causing us to send mail.

  >>> print_rationales(recipients)
    andrew.bennetts@ubuntulinux.com
        Bug Contact (alsa-utils) @name18
        You received this bug notification because you are a member of Ubuntu Gnome Team, which is the bug contact for alsa-utils.
    carlos@canonical.com
        Subscriber of Duplicate @testing-spanish-team
        You received this bug notification because you are a member of testing Spanish team, which is a subscriber of a duplicate bug.
    celso.providelo@canonical.com
        Bug Contact (Debian) @launchpad-buildd-admins
        You received this bug notification because you are a member of Launchpad Buildd Admins, which is the bug contact for Debian.
    david.allouche@canonical.com
        Registrant (gnomebaker) @vcs-imports
        You received this bug notification because you are a member of VCS imports, which is the registrant for gnomebaker.
    foo.bar@canonical.com
        Subscriber of Duplicate @testing-spanish-team
        You received this bug notification because you are a member of testing Spanish team, which is a subscriber of a duplicate bug.
    kurem@debian.cz
        Subscriber of Duplicate @testing-spanish-team
        You received this bug notification because you are a member of testing Spanish team, which is a subscriber of a duplicate bug.
    marilize@hbd.com
        Subscriber @shipit-admins
        You received this bug notification because you are a member of ShipIt Administrators, which is a direct subscriber.
    mark@hbd.com
        Subscriber of Duplicate @testing-spanish-team
        You received this bug notification because you are a member of testing Spanish team, which is a subscriber of a duplicate bug.
    robertc@robertcollins.net
        Registrant (gnomebaker) @vcs-imports
        You received this bug notification because you are a member of VCS imports, which is the registrant for gnomebaker.
    support@ubuntu.com
        Assignee @guadamen
        You received this bug notification because you are a member of GuadaMen, which is a bug assignee.
    test@canonical.com
        Bug Contact (pmount in debian) @name20
        You received this bug notification because you are a member of Warty Security Team, which is a bug contact for pmount in debian.
    tsukimi@quaqua.net
        Subscriber of Duplicate @testing-spanish-team
        You received this bug notification because you are a member of testing Spanish team, which is a subscriber of a duplicate bug.

This doesn't help the end-user too much if he's a member of this team
indirectly (for instance, if he's a member of a team which is in turn a
member of another team); however, in that case, the user can still visit
the team page and see the membership graph directly. This may be worth
fixing in the future.

== First impressions stick ==

Another important property of BugNotificationRecipients is that the
first rationale presented to it is the one that is presented -- even if
the recipient has multiple reasons for which he might be emailed. Here's
a pathological example:

  >>> recipients = BugNotificationRecipients()
  >>> recipients.addDirectSubscriber(test)
  >>> recipients.addAssignee(test)
  >>> recipients.addUpstreamRegistrant(test, gnomebaker)
  >>> recipients.addDirectSubscriber(foo_bar)

This guy is emailed because he's a direct subscriber, an assignee and an
upstream registrant. However, if we ask the rationales instance:

  >>> print_rationales(recipients)
  foo.bar@canonical.com
      Subscriber
      You received this bug notification because you are a direct subscriber of the bug.
  test@canonical.com
      Subscriber
      You received this bug notification because you are a direct subscriber of the bug.

Only the first rationale is presented. This is the case even if we
update this set of recipients with another one:

  >>> recipients2 = BugNotificationRecipients()
  >>> recipients2.addDupeSubscriber(test)
  >>> recipients2.update(recipients)

The rationales for test@canonical.com in the 'recipients' instance just
don't matter:

  >>> print_rationales(recipients2)
  foo.bar@canonical.com
      Subscriber
      You received this bug notification because you are a direct subscriber of the bug.
  test@canonical.com
      Subscriber of Duplicate
      You received this bug notification because you are a direct subscriber of a duplicate bug.

This may be seen as a limitation, but you don't want a 10-line rationale
footer for people who are central to Launchpad, so for now it's the way
it is.
