# identify the component configuration used to define the site:
site-definition site.zcml

# number of bytecode instructions to execute between checks for
# interruptions (SIGINTR, thread switches):
interrupt-check-interval 200

<server>
  type HTTP
  address 9020
</server>

# non-persistent in-memory storage
<zodb>
  <mappingstorage/>
</zodb>

<accesslog>
  <logfile>
    path launchpad-access.log
  </logfile>
</accesslog>

<eventlog>
  <logfile>
    path launchpad.log
  </logfile>
</eventlog>

# Launchpad configuration. Note that we can specify multiple configurations
# in here. Currently, we have configurations named 'testrunner' (used
# by the testrunner), and 'default' (used by everything else)
#
# The section that is used can be specified by setting the LPCONFIG_SECTION
# environment variable
#
<canonical default>
    # DB settings must still match launchpad-sql-configure-normal.zcml
    dbname launchpad_dogfood
    #dbhost localhost

    # Display tracebacks on error pages.
    # IMPORTANT: Set to false on production servers!
    show_tracebacks true

    # This is the email address used for the Errors-To: header on
    # all outgoing emails. At somepoint a bounce handler will be
    # installed here to detect failing email addresses and flag them
    # in the database.
    bounce_address bounces@canonical.com

    <launchpad>
        dbuser launchpad
        # Root URL to a launchpad instance, used for generating URLs
        # inside of launchpad by urlparse.urljoin
        root_url https://dogfood.ubuntu.com/
        errors_address launchpad-error-reports@lists.canonical.com
        bugs_domain bugs.launchpad.ubuntu.com
	<launchpad_errorreports>
            errordir /srv/launchpad.net/dogfood-logs
            oops_prefix DF
            copy_to_zlog false
        </launchpad_errorreports>

        <launchpad_session>
            dbuser session
            dbname session_dogfood
        </launchpad_session>

    </launchpad>

    <librarian>
        # Librarian configuration information for both client and server
        dbuser librarian
        upload_host localhost
        upload_port 9090
        download_host librarian.dogfood.ubuntu.com
        download_port 9080
        download_url http://librarian.dogfood.ubuntu.com/
        buildd_download_url http://librarian.dogfood.ubuntu.com/
        <librarian_server>
            # Configuration used if we are running a librarian server.
            root /srv/launchpad.net/librarian
            # If true, a Librarian server will be launched by the startup
            # script
            launch yes
            # Should Librarian twistd be run with --spew for debugging
            spew no
            upstream_host librarian.ubuntu.com
            upstream_port 80
        </librarian_server>
        <librarian_gc>
            dbuser librariangc
        </librarian_gc>
    </librarian>

    <malone>
        # The From address for Malone email interface errors
        bugmail_error_from_address noreply@bugs.launchpad.ubuntu.com
    </malone>

    <shipit>
        shipit_admins_email info@shipit.ubuntu.com
        shipit_ubuntu_from_email noreply@shipit.ubuntu.com
        shipit_edubuntu_from_email noreply@shipit.edubuntu.com
        shipit_kubuntu_from_email noreply@shipit.kubuntu.com
    </shipit>

    <zopeless>
        # Configuration specific for code that is running in the Zopeless
        # environment. Hopefully this section will disappear when the
        # Zope and Zopeless environments grow closer.
        send_email false
        smtp_host localhost
        smtp_port 25
    </zopeless>

    <gpghandler>
        host keyserver.ubuntu.com
        port 11371
    </gpghandler>

    <distributionmirrorprober>
        dbuser distributionmirror
        timeout 30
    </distributionmirrorprober>

    <zeca>
        # where the pre-installed key-files will be copied to (every
        # initialization, see lib/zeca/ftest/harness.py)
        root /var/tmp/zeca
    </zeca>

    <statistician>
        dbuser statistician
    </statistician>

    <gina>
        # Configuration used to run gina.
        dbuser gina

       <gina_target breezy>
            distro ubuntu
            distrorelease breezy
            pocketrelease breezy
            root /srv/archive.ubuntu.com/ubuntu
            keyrings /usr/share/keyrings
            architectures i386,amd64,powerpc
            components main,universe,restricted
        </gina_target>

       <gina_target breezy-updates>
            distro ubuntu
            distrorelease breezy-updates
            pocketrelease breezy
            pocket updates
            root /srv/archive.ubuntu.com/ubuntu
            keyrings /usr/share/keyrings
            architectures i386,amd64,powerpc
            components main,universe,restricted
        </gina_target>

       <gina_target breezy-security>
            distro ubuntu
            distrorelease breezy-security
            pocketrelease breezy
            pocket security
            root /srv/archive.ubuntu.com/ubuntu
            keyrings /usr/share/keyrings
            architectures i386,amd64,powerpc
            components main,universe,restricted
        </gina_target>

       <gina_target warty>
            distro ubuntu
            distrorelease warty
            pocketrelease warty
            root /srv/archive.ubuntu.com/ubuntu
            keyrings /usr/share/keyrings
            architectures i386,amd64,powerpc
            components main,universe,restricted
        </gina_target>

       <gina_target warty-updates>
            distro ubuntu
            distrorelease warty-updates
            pocketrelease warty
            pocket updates
            root /srv/archive.ubuntu.com/ubuntu
            keyrings /usr/share/keyrings
            architectures i386,amd64,powerpc
            components main,universe,restricted
        </gina_target>

       <gina_target warty-security>
            distro ubuntu
            distrorelease warty-security
            pocketrelease warty
            pocket security
            root /srv/archive.ubuntu.com/ubuntu
            keyrings /usr/share/keyrings
            architectures i386,amd64,powerpc
            components main,universe,restricted
        </gina_target>

       <gina_target hoary>
            distro ubuntu
            distrorelease hoary
            pocketrelease hoary
            root /srv/archive.ubuntu.com/ubuntu
            keyrings /usr/share/keyrings
            architectures i386,amd64,powerpc
            components main,universe,restricted
        </gina_target>

       <gina_target hoary-updates>
            distro ubuntu
            distrorelease hoary-updates
            pocketrelease hoary
            pocket updates
            root /srv/archive.ubuntu.com/ubuntu
            keyrings /usr/share/keyrings
            architectures i386,amd64,powerpc
            components main,universe,restricted
        </gina_target>

       <gina_target hoary-security>
            distro ubuntu
            distrorelease hoary-security
            pocketrelease hoary
            pocket security
            root /srv/archive.ubuntu.com/ubuntu
            keyrings /usr/share/keyrings
            architectures i386,amd64,powerpc
            components main,universe,restricted
        </gina_target>

    </gina>

    <trebuchet>
        dbuser trebuchet
        port 4280
        <trebuchet_server>
            # Configuration used if we are running a trebuchet server.
            # TODO: Does trebuchet actually need a root?
            root /var/tmp/trebuchet
            # If true, a Trebuchet server will be launched by the startup
            # script
            launch no
            # Should Trebuchet twistd be run with --spew for debugging
            spew no
            # Path to the log file, or '-' for stdout.
            logfile -
        </trebuchet_server>
    </trebuchet>

    <buildsequencer>
        mailproblemsto cprov@async.com.br
        launch no
        logfile -
        <buildsequencer_job slave_scanner>
            command cronscripts/buildd-slave-scanner.py
            mindelay 5
        </buildsequencer_job>
        <buildsequencer_job queue_builder>
            command cronscripts/buildd-queue-builder.py
            mindelay 900
        </buildsequencer_job>
    </buildsequencer>

    <uploader>
        dbuser uploader
        default_recipient_name Launchpad Admins
        default_recipient_address launchpad@lists.canonical.com
        default_sender_name Launchpad Admins
        default_sender_address launchpad@lists.canonical.com
    </uploader>

    <uploadqueue>
        dbuser queued
    </uploadqueue>

    <builddmaster>
        dbuser fiera
        # Here, we really do want to invoke the uploader.
        uploader scripts/process-upload.py -KMvv --context buildd
        root /srv/launchpad.net/builddmaster/
        socket_timeout 600
    </builddmaster>

    <branchupdater>
        dbuser importd
        prefixurl http://bazaar.launchpad.net/+branches/
    </branchupdater>

</canonical>

# This is the config used by the test runner.
<canonical testrunner>
    dbname launchpad_ftest
    show_tracebacks true
    # chunkydiff may be turned off temporarily to help diagnose test
    # failures, but please don't commit this setting to rocketfuel.
    chunkydiff on

    bounce_address bounces@canonical.com

    <launchpad>
        dbuser launchpad
        root_url http://localhost:8086/
        errors_address launchpad-error-reports@lists.canonical.com
        bugs_domain bugs.staging.ubuntu.com
	<launchpad_errorreports>
            errordir /var/tmp/lperr.test
            oops_prefix T
            copy_to_zlog false
        </launchpad_errorreports>
    </launchpad>
    <librarian>
        dbuser librarian
        upload_host localhost
        upload_port 59090
        download_host localhost
        download_port 58000
        download_url http://localhost:58000/
        buildd_download_url http://localhost:58000/
        <librarian_server>
            launch no
            root /var/tmp/fatsam.test
        </librarian_server>
    </librarian>
    <zopeless>
        send_email false
    </zopeless>

    <uploader>
        dbuser uploader
        default_recipient_name Root
        default_recipient_address root@localhost
        default_sender_name Root
        default_sender_address root@localhost
    </uploader>

    <uploadqueue>
        dbuser queued
    </uploadqueue>

    <builddmaster>
        dbuser fiera
        # Test suite running doesn't want the complication of the uploader
        uploader /bin/echo Uploader invocation in:
        root /var/tmp/builddmaster/
        socket_timeout 10
    </builddmaster>

</canonical>
