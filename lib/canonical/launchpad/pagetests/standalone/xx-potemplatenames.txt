PO Template Name handling
=========================

Regular users are unable to access listing of PO Template Names.

  >>> user_browser.open('http://launchpad.dev/potemplatenames')
  Traceback (most recent call last):
  ...
  Unauthorized:...

Carlos, one of Rosetta Admins, is able to access list of PO Template
Names and searches for evolution template in there.

  >>> browser.addHeader('Authorization', 'Basic carlos@canonical.com:test')
  >>> browser.open('http://launchpad.dev/potemplatenames')
  >>> print browser.url
  http://launchpad.dev/potemplatenames
  >>> browser.getControl(name='text').value = 'evo'
  >>> browser.getControl('Search').click()
  >>> print browser.url
  http://launchpad.dev/potemplatenames/+index

The search results will include evolution-2.2. Lets click on it.

  >>> link = browser.getLink(
  ...    'Main translation domain for the Evolution 2.2 (evolution-2.2)')
  >>> link.click()

We're now on the page describing 'evolution-2.2' template name.

  >>> print browser.url
  http://launchpad.dev/potemplatenames/1
  >>> 'Main translation domain for the Evolution 2.2' in browser.contents
  True

Lets edit this PO Template Name.

  >>> browser.getLink('Edit template name').click()
  >>> print browser.url
  http://launchpad.dev/potemplatenames/1/+edit
  >>> print browser.contents
  <!DOCTYPE...
  ...<title>Edit ...Main translation domain for the Evolution 2.2...

Submitting PO Template Name edit form returns us to the same page.

  >>> browser.getControl(name='field.translationdomain').value = 'evolution'
  >>> browser.getControl(name='UPDATE_SUBMIT').click()
  >>> print browser.url
  http://launchpad.dev/potemplatenames/1/+edit

And the value for translation domain has now changed.

  >>> browser.getControl(name='field.translationdomain').value == 'evolution'
  True

Creating new PO Template Names
------------------------------

Start with PO Template Names creation form.

  >>> browser.open('http://launchpad.dev/potemplatenames/+add')
  >>> print browser.url
  http://launchpad.dev/potemplatenames/+add

Create a new POTemplateName 'foo':

  >>> browser.getControl(name='field.name').value = 'foo'
  >>> browser.getControl(name='field.title').value = 'foo title'
  >>> browser.getControl(name='field.description').value = 'foo description'
  >>> browser.getControl(name='field.translationdomain').value = 'footranslationdomain'
  >>> browser.getControl(name='UPDATE_SUBMIT').click()
  >>> 'Template name details' in browser.contents
  True
  >>> 'foo' in browser.contents
  True

And if we try to create a POTemplateName with the same name we get a
nice error message.

  >>> browser.open('http://launchpad.dev/potemplatenames/+add')
  >>> browser.getControl(name='field.name').value = 'foo'
  >>> browser.getControl(name='field.title').value = 'foo title'
  >>> browser.getControl(name='field.description').value = 'foo description'
  >>> browser.getControl(name='field.translationdomain').value = 'footranslationdomain'
  >>> browser.getControl(name='UPDATE_SUBMIT').click()
  >>> print browser.contents
  <!DOCTYPE...
  ...error message...
  ...foo is already in use by another PO template name...

If we try to create a POTemplateName with an invalid name (e.g. with an
underscore) we also get a nice error message.

  >>> browser.open('http://launchpad.dev/potemplatenames/+add')
  >>> browser.getControl(name='field.name').value = 'foo_bar'
  >>> browser.getControl(name='field.title').value = 'foo title'
  >>> browser.getControl(name='field.description').value = 'foo description'
  >>> browser.getControl(name='field.translationdomain').value = 'footranslationdomain'
  >>> browser.getControl(name='UPDATE_SUBMIT').click()
  >>> print browser.contents
  <!DOCTYPE...
  ...error message...
  ...Invalid name 'foo_bar'. Names must start with a letter or number...

