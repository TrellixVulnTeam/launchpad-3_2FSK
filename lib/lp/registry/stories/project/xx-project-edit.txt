Editing a Project
=================

The maintainer of a project can edit its details.

    >>> browser.addHeader('Authorization', 'Basic test@canonical.com:test')
    >>> browser.open('http://launchpad.dev/gnome')
    >>> browser.getLink('Change details').click()
    >>> print browser.title
    Change project group details...

    >>> soup = find_main_content(browser.contents)
    >>> browser.getControl(name='field.name').value = 'new-name'
    >>> browser.getControl('Display Name').value = 'New Name'
    >>> browser.getControl('Title').value = 'New Title'
    >>> browser.getControl('Project Group Summary').value = 'New Summary.'
    >>> browser.getControl('Description').value = 'New Description.'
    >>> browser.getControl('Homepage URL').value = 'http://new-url.com/'
    >>> browser.getControl(name='field.bugtracker').value = ['1']
    >>> browser.getControl('Change Details').click()

    >>> browser.url
    'http://launchpad.dev/new-name'

Regular users can't access the +review page.

    >>> browser.getLink('Administer')
    Traceback (most recent call last):
    ...
    LinkNotFoundError

But administrators can access the page:

    >>> admin_browser.open('http://launchpad.dev/new-name')
    >>> admin_browser.getLink('Administer').click()

    >>> admin_browser.url
    'http://launchpad.dev/new-name/+review'

    >>> print admin_browser.title
    Review upstream project group...

Mark the project as reviewed.

    >>> admin_browser.getControl('Reviewed').selected = True
    >>> admin_browser.getControl('Change').click()

    >>> admin_browser.url
    'http://launchpad.dev/new-name'

The project summary shows the status as reviewed for admins only.

    >>> print extract_text(find_tag_by_id(admin_browser.contents, 'status'))
    Status: Active Reviewed

Other users cannot see the Project group status in the details portlet.

    >>> anon_browser.open('http://launchpad.dev/new-name')
    >>> print extract_text(
    ...     find_tag_by_id(anon_browser.contents, 'portlet-details'))
    Project group information
    Maintainer: Sample Person
    Driver: Not yet appointed
    Bug tracker: The Mozilla.org Bug Tracker
    Registered ... by Sample Person
    Download RDF metadata

Administrators can also change the maintainer and registrant independent
of each other, as well as adding aliases to the project group.

    >>> admin_browser.open('http://launchpad.dev/new-name')
    >>> admin_browser.getLink('Administer').click()
    >>> admin_browser.getControl('Maintainer').value = 'cprov'
    >>> admin_browser.getControl('Registrant').value = 'ddaa'
    >>> admin_browser.getControl('Aliases').value
    ''

    >>> admin_browser.getControl('Aliases').value = 'old-name'
    >>> admin_browser.getControl('Change').click()

    >>> admin_browser.getLink('Administer').click()
    >>> admin_browser.getControl('Aliases').value
    'old-name'

    >>> admin_browser.goBack()

The project maintainer and registrant are now updated.

    >>> print extract_text(
    ...     find_tag_by_id(admin_browser.contents, 'maintainer'))
    Maintainer: Celso Providelo
    Change maintainer

    >>> print extract_text(
    ...     find_tag_by_id(admin_browser.contents, 'registrant'))
    Registered ... by David Allouche

The registrant really should only be a person, not a team, but that
constraint has to be relaxed to account for old data where we do have
teams as registrants.

    >>> admin_browser.open('http://launchpad.dev/new-name')
    >>> admin_browser.getLink('Administer').click()
    >>> admin_browser.getControl('Registrant').value = 'registry'
    >>> admin_browser.getControl('Change').click()

    >>> print extract_text(
    ...     find_tag_by_id(admin_browser.contents, 'registrant'))
    Registered ... by Registry Administrators
