= Milestones =

Products, Distributions, ProductSeries, DistroSeriess and Projects have a
page in which all of their milestones are listed.


== Distributions and DistroSeriess ==

    >>> anon_browser.open('http://launchpad.dev/debian/+milestones')
    >>> anon_browser.url
    'http://launchpad.dev/debian/+milestones'

    >>> for li in find_tags_by_class(anon_browser.contents, 'milestone'):
    ...     print extract_text(li)
    3.1-rc1 Expected for 2056-02-16 For WOODY
    3.1 Expected for 2056-05-16 For WOODY

    >>> anon_browser.open('http://launchpad.dev/debian/woody/+milestones')
    >>> for li in find_tags_by_class(anon_browser.contents, 'milestone'):
    ...     print extract_text(li)
    3.1-rc1 Expected for 2056-02-16 For WOODY
    3.1 Expected for 2056-05-16 For WOODY

    >>> anon_browser.open('http://launchpad.dev/debian/sarge/+milestones')
    >>> for li in find_tags_by_class(anon_browser.contents, 'milestone'):
    ...     print extract_text(li)


== Products and ProductSeries ==

    >>> anon_browser.open('http://launchpad.dev/firefox/+milestones')
    >>> anon_browser.url
    'http://launchpad.dev/firefox/+milestones'

    >>> for li in find_tags_by_class(anon_browser.contents, 'milestone'):
    ...     print extract_text(li)
    1.0 Expected for 2056-10-16 For Mozilla Firefox Series: trunk

    >>> anon_browser.open('http://launchpad.dev/firefox/trunk/+milestones')
    >>> for li in find_tags_by_class(anon_browser.contents, 'milestone'):
    ...     print extract_text(li)
    1.0 Expected for 2056-10-16 For Mozilla Firefox Series: trunk

    >>> anon_browser.open('http://launchpad.dev/firefox/1.0/+milestones')
    >>> for li in find_tags_by_class(anon_browser.contents, 'milestone'):
    ...     print extract_text(li)

== Projects ==

The main project page has a portlet "Active milestones".

    >>> from canonical.launchpad.ftests import login, logout
    >>> from canonical.launchpad.ftests.test_project_milestone import (
    ...     ProjectMilestoneTest)
    >>> login('foo.bar@canonical.com')
    >>> test_helper = ProjectMilestoneTest(helper_only=True)
    >>> test_helper.setUpProjectMilestoneTests()
    >>> logout()
    >>> anon_browser.open('http://launchpad.dev/gnome')
    >>> milestones = find_portlet(anon_browser.contents, 'Active milestones')
    >>> print extract_text(milestones)
    Active milestones
    1.1
    1.1.
    1.2
    All milestones

The page "All milestones" lists all milestones, including the inactive ones.

    >>> anon_browser.getLink('All milestones').click()
    >>> for milestone in find_tags_by_class(
    ...     anon_browser.contents, 'milestone'):
    ...     print extract_text(milestone)
    1.1 Expected for 2010-04-01
    1.1. Expected for 2010-04-02
    1.2 Expected for 2011-04-01
    1.3 (Inactive) Expected for 2012-04-01
 
The pages for the individual milestones show all specifications and bugtasks
associated with that milestone for products of this project.

    >>> anon_browser.getLink('1.1').click()
    >>> specs = find_tag_by_id(anon_browser.contents, 'milestone_specs')
    >>> print extract_text(specs)
    Priority Product Specification Assignee Delivery ...
    High Evolution Title evolution specification ... Unknown ...
    High gnomebaker Title gnomebaker specification ... Unknown

    >>> bugtasks = find_tag_by_id(anon_browser.contents, 'milestone_bugtasks')
    >>> print extract_text(bugtasks)
    Report Product Importance Assignee Status ...
    Milestone test bug for evolution Evolution ... Undecided ... Confirmed ...
    Milestone test bug for gnomebaker gnomebaker ... Undecided ... Confirmed
