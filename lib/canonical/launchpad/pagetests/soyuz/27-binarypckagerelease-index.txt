= BinaryPackageRelease Pages =

Succesfully built Build page provides link(s) to the produced
binaries independent of their context, the raw IBinaryPackageRelease
content class/page.

Let's find a build with reasonable contents:

  >>> browser.open("http://launchpad.dev/ubuntu/+builds")
  >>> browser.getControl(name="build_state").value = ['built']
  >>> browser.getControl("Update").click()
  >>> browser.getLink(
  ...     'i386 build of mozilla-firefox 0.9 in ubuntu '
  ...     'warty RELEASE').click()
  >>> browser.url
  'http://launchpad.dev/+builds/+build/2'

This build produced one BinaryPackage, called 'mozilla-firefox 0.9',
which is presented in the right portlet, called 'Resulting Binaries'.
Let's just check if the page is presented without errors (see bug
#76163):

  >>> browser.getLink('mozilla-firefox 0.9').click()
  >>> browser.url
  'http://launchpad.dev/+builds/+build/2/mozilla-firefox'

When redering package relationships only existent packages contain
links to within LP application, not found packages are rendred as
simple text:

  >>> print find_tag_by_id(browser.contents, 'provides')
  <tr id="provides">
  <th><label>Provides:</label></th>
  <td>
  <ul>
  <li>
  <a href="http://launchpad.dev/ubuntu/warty/i386/mozilla-firefox">
  mozilla-firefox
  <BLANKLINE>
  </a>
  </li>
  </ul>
  </td>
  </tr>

  >>> print find_tag_by_id(browser.contents, 'depends')
  <tr id="depends">
  <th><label>Depends on:</label></th>
  <td>
  <ul>
  <li>
  <BLANKLINE>
  <BLANKLINE>
  gcc-3.4-base
  <BLANKLINE>
  <BLANKLINE>
  </li>
  ...

