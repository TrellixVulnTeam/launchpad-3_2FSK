= Posting =

Only Launchpad members are allowed to post to team mailing lists.  A message
by a sender who is not a Launchpad member will be summarily discarded.

A team mailing list is created.

    >>> from canonical.launchpad.mailman.testing import helpers
    >>> list_one = helpers.create_list('itest-one')

    # Ignore the list creation notification message.
    >>> smtpd.reset()


== Non-member postings ==

Postings from addresses that are not registered and verified with Launchpad
are summarily discarded.

A non-Launchpad member sends a message to the mailing list.  This message is
discarded immediately.

    >>> from Mailman.Post import inject
    >>> inject('itest-one', """\
    ... From: zperson@example.net
    ... To: itest-one@lists.launchpad.dev
    ... Subject: A non-member post
    ... Message-ID: <aardvark>
    ...
    ... Hi, I am not a member of Launchpad (yet).
    ... """)
    >>> vette_watcher.wait_for_discard('aardvark')
    >>> len(smtpd.getMessages())
    0


== Unvalidated member postings ==

Similarly, an address that has been registered with Launchpad but not verified
will also be summarily discarded.  Anne registers with Launchpad but does not
validate her alternative address.

    >>> import transaction
    >>> from canonical.launchpad.ftests.mailinglists_helper import (
    ...     get_alternative_email, new_person)
    >>> from canonical.launchpad.ftests import login, logout
    >>> from canonical.launchpad.interfaces import EmailAddressStatus

    >>> login('foo.bar@canonical.com')
    >>> anne = new_person('Anne')
    >>> alternative_email = get_alternative_email(anne)

    # Simulate Anne not having validated her alternative address.
    >>> alternative_email.status = EmailAddressStatus.NEW
    >>> transaction.commit()
    >>> print alternative_email.email, alternative_email.status.title
    aperson@example.org New Email Address

Anne sends a message from her unvalidated alternative address.  This message
gets discarded.

    >>> inject('itest-one', """\
    ... From: aperson@example.org
    ... To: itest-one@lists.launchpad.dev
    ... Subject: A non-member post
    ... Message-ID: <beaver>
    ...
    ... Hi, I am not a verified member of Launchpad (yet).
    ... """)
    >>> vette_watcher.wait_for_discard('beaver')
    >>> len(smtpd.getMessages())
    0


== Unsubscribed Launchpad members ==

Anne's perferred email address is still validated, and she post a message from
that address.  However, because she has not yet joined the team or subscribed
to its mailing list, her messages gets held for moderation by the team's
administrator.

    >>> print anne.preferredemail.email, anne.preferredemail.status.title
    anne.person@example.com Preferred Email Address
    >>> smtpd.reset()
    >>> smtpd.getMailboxSize()
    0
    >>> inject('itest-one', """\
    ... From: anne.person@example.com
    ... To: itest-one@lists.launchpad.dev
    ... Subject: An unsubscribed post
    ... Message-ID: <caribou>
    ...
    ... Hi, I am not a member of this team's list (yet).
    ... """)
    >>> vette_watcher.wait_for_hold('caribou')

The team administrator will receive a notification of the held message.

    >>> smtpd_watcher.wait_for_personal_traffic('no-priv@canonical.com')
    >>> messages = smtpd.getMessages()
    >>> len(messages)
    1
    >>> print messages[0].as_string()
    Content-Type: text/plain; charset="utf-8"
    ...
    From: Itest One <noreply@launchpad.net>
    Subject: New mailing list message requiring approval for Itest One
    ...
    <BLANKLINE>
    Hello No Privileges Person,
    <BLANKLINE>
    Itest One has a new message requiring your approval.
    <BLANKLINE>
        Subject: An unsubscribed post
        Author name: Anne Person
        Author url: http://launchpad.dev:8085/~anne
        Date: ...
        Message-ID: <caribou>
    <BLANKLINE>
    A message has been posted to the mailing list for your team, but this
    message requires your approval before it will be sent to the list
    members.  After reviewing the message, you may approve, discard or
    reject it.
    <BLANKLINE>
    To review all messages pending approval, visit:
    <BLANKLINE>
        http://launchpad.dev:8085/~itest-one/+mailinglist-moderate
    <BLANKLINE>
    Regards,
    The Launchpad team
    <BLANKLINE>
    <BLANKLINE>

The message is held for moderation by the team administrator.

    >>> holds = helpers.pending_hold_ids('itest-one')
    >>> len(holds)
    1
    >>> helpers.print_mailman_hold('itest-one', holds[0])
    From: anne.person@example.com
    To: itest-one@lists.launchpad.dev
    Subject: An unsubscribed post
    Message-ID: <caribou>
    <BLANKLINE>
    Hi, I am not a member of this team's list (yet).
    <BLANKLINE>

The team administrator can accept, decline or discard this posting.  By
declining the message, Launchpad forgets about it, while Mailman sends a
rejection notice to Anne.

    >>> browser = Browser('no-priv@canonical.com:test')
    >>> browser.open(
    ...     'http://launchpad.dev:8085/~itest-one/+mailinglist-moderate')
    >>> browser.getControl(name='field.%3Ccaribou%3E').value = [
    ...     'reject']
    >>> browser.getControl('Moderate').click()
    >>> xmlrpc_watcher.wait_for_reject('caribou')

    >>> holds = helpers.pending_hold_ids('itest-one')
    >>> len(holds)
    0

    >>> smtpd_watcher.wait_for_personal_traffic('anne.person@example.com')
    >>> messages = smtpd.getMessages()
    >>> len(messages)
    1
    >>> print messages[0].as_string()
    MIME-Version: 1.0
    ...
    Subject: Request to mailing list Itest-one rejected
    From: itest-one-bounces@lists.launchpad.dev
    To: anne.person@example.com
    ...
    Sender: itest-one-bounces+anne.person=example.com@lists.launchpad.dev
    Errors-To: itest-one-bounces+anne.person=example.com@lists.launchpad.dev
    Received: by smtp2mbox
    <BLANKLINE>
    Your request to the Itest-one mailing list
    <BLANKLINE>
        Posting of your message titled "An unsubscribed post"
    <BLANKLINE>
    has been rejected by the list moderator.  The moderator gave the
    following reason for rejecting your request:
    <BLANKLINE>
    "[No reason given]"
    <BLANKLINE>
    Any questions or comments should be directed to the list administrator
    at:
    <BLANKLINE>
        itest-one-owner@lists.launchpad.dev
    <BLANKLINE>
    <BLANKLINE>

Anne posts another message to the mailing list, but she is still not
subscribed to it.  The team administrator deems this message to be spam and
discards it.  No rejection notice is sent to Anne.

    >>> inject('itest-one', """\
    ... From: anne.person@example.com
    ... To: itest-one@lists.launchpad.dev
    ... Subject: Wanna buy something?
    ... Message-ID: <donkey>
    ...
    ... Hi, do you want to buy something?
    ... """)

    >>> vette_watcher.wait_for_hold('donkey')
    >>> messages = smtpd.getMessages()
    >>> len(messages)
    1
    >>> print messages[0].as_string()
    Content-Type: text/plain; charset="utf-8"
    ...
    From: Itest One <noreply@launchpad.net>
    Subject: New mailing list message requiring approval for Itest One
    ...
    <BLANKLINE>
    Hello No Privileges Person,
    <BLANKLINE>
    Itest One has a new message requiring your approval.
    <BLANKLINE>
        Subject: Wanna buy something?
        Author name: Anne Person
        Author url: http://launchpad.dev:8085/~anne
        Date: ...
        Message-ID: <donkey>
    ...

    >>> browser.open(
    ...     'http://launchpad.dev:8085/~itest-one/+mailinglist-moderate')
    >>> browser.getControl(name='field.%3Cdonkey%3E').value = [
    ...     'discard']
    >>> browser.getControl('Moderate').click()
    >>> xmlrpc_watcher.wait_for_discard('donkey')

    >>> holds = helpers.pending_hold_ids('itest-one')
    >>> len(holds)
    0
    >>> len(smtpd.getMessages())
    0

Now Anne posts another message to the mailing list she is not subscribed to.
This time, her message is on topic and is accepted.

    >>> inject('itest-one', """\
    ... From: anne.person@example.com
    ... To: itest-one@lists.launchpad.dev
    ... Subject: Another unsubscribed post
    ... Message-ID: <elephant>
    ...
    ... Hi, I am still not yet a member of this team's list.
    ... """)

    >>> vette_watcher.wait_for_hold('elephant')
    >>> messages = smtpd.getMessages()
    >>> len(messages)
    1
    >>> print messages[0].as_string()
    Content-Type: text/plain; charset="utf-8"
    ...
    From: Itest One <noreply@launchpad.net>
    Subject: New mailing list message requiring approval for Itest One
    ...
    <BLANKLINE>
    Hello No Privileges Person,
    <BLANKLINE>
    Itest One has a new message requiring your approval.
    <BLANKLINE>
        Subject: Another unsubscribed post
        Author name: Anne Person
        Author url: http://launchpad.dev:8085/~anne
        Date: ...
        Message-ID: <elephant>
    ...

    >>> holds = helpers.pending_hold_ids('itest-one')
    >>> len(holds)
    1
    >>> helpers.print_mailman_hold('itest-one', holds[0])
    From: anne.person@example.com
    To: itest-one@lists.launchpad.dev
    Subject: Another unsubscribed post
    Message-ID: <elephant>
    <BLANKLINE>
    Hi, I am still not yet a member of this team's list.
    <BLANKLINE>

    >>> browser.open(
    ...     'http://launchpad.dev:8085/~itest-one/+mailinglist-moderate')
    >>> browser.getControl(name='field.%3Celephant%3E').value = [
    ...     'approve']
    >>> browser.getControl('Moderate').click()
    >>> xmlrpc_watcher.wait_for_approval('elephant')

    >>> holds = helpers.pending_hold_ids('itest-one')
    >>> len(holds)
    0

    >>> smtpd_watcher.wait_for_list_traffic('itest-one')
    >>> messages = smtpd.getMessages()
    >>> len(messages)
    1
    >>> print messages[0].as_string()
    From: anne.person@example.com
    To: itest-one@lists.launchpad.dev
    Message-ID: <elephant>
    X-Mailman-Approved-At: ...
    Subject: [Itest-one] Another unsubscribed post
    ...
    List-Id: <itest-one.lists.launchpad.dev>
    List-Help: <http://help.launchpad.dev/ListHelp>
    List-Subscribe: <http://launchpad.dev/~itest-one>
    List-Unsubscribe: <http://launchpad.dev/~itest-one>
    List-Post: <mailto:itest-one@lists.launchpad.dev>
    List-Archive: <http://lists.launchpad.dev/itest-one>
    List-Owner: <http://launchpad.dev/~itest-one>
    ...
    Sender: itest-one-bounces+archive=mail-archive.dev@lists.launchpad.dev
    Errors-To: itest-one-bounces+archive=mail-archive.dev@lists.launchpad.dev
    Received: by smtp2mbox
    <BLANKLINE>
    Hi, I am still not yet a member of this team's list.
    _______________________________________________
    Mailing list: http://launchpad.dev/~itest-one
    Post to     : itest-one@lists.launchpad.dev
    Unsubscribe : http://launchpad.dev/~itest-one
    More help   : http://help.launchpad.dev/ListHelp
    <BLANKLINE>
    <BLANKLINE>


== Verified and registered member postings ==

Anne now joins the team and subscribes to the mailing list.  She can now post
to the mailing list.

    >>> helpers.subscribe('Anne', 'itest-one')
    >>> inject('itest-one', """\
    ... From: anne.person@example.com
    ... To: itest-one@lists.launchpad.dev
    ... Subject: A member post
    ... Message-ID: <falcon>
    ...
    ... Hi, I am now a member of this team's list!
    ... """)

Anne's message got posted to the mailing list.  Two copies were sent; one to
Anne herself as a member of the mailing list, and another to the
mail-archive.com archiving recipient.  These copies are very similar,
differing only in the headers used to do VERP bounce detection.

    >>> smtpd_watcher.wait_for_mbox_delivery('falcon')
    >>> smtpd_watcher.wait_for_mbox_delivery('falcon')
    >>> messages = smtpd.getMessages()
    >>> len(messages)
    2
    >>> from operator import itemgetter
    >>> messages.sort(key=itemgetter('sender'))

Here's the copy sent to Anne...

    >>> print messages[0].as_string()
    From: anne.person@example.com
    To: itest-one@lists.launchpad.dev
    Message-ID: <falcon>
    Subject: [Itest-one] A member post
    ...
    Sender: itest-one-bounces+anne.person=example.com@lists.launchpad.dev
    Errors-To: itest-one-bounces+anne.person=example.com@lists.launchpad.dev
    Received: by smtp2mbox
    <BLANKLINE>
    Hi, I am now a member of this team's list!
    _______________________________________________
    Mailing list: http://launchpad.dev/~itest-one
    Post to     : itest-one@lists.launchpad.dev
    Unsubscribe : http://launchpad.dev/~itest-one
    More help   : http://help.launchpad.dev/ListHelp
    <BLANKLINE>
    <BLANKLINE>

...and the copy sent to the archives.

    >>> print messages[1].as_string()
    From: anne.person@example.com
    To: itest-one@lists.launchpad.dev
    Message-ID: <falcon>
    Subject: [Itest-one] A member post
    ...
    Sender: itest-one-bounces+archive=mail-archive.dev@lists.launchpad.dev
    Errors-To: itest-one-bounces+archive=mail-archive.dev@lists.launchpad.dev
    Received: by smtp2mbox
    <BLANKLINE>
    Hi, I am now a member of this team's list!
    _______________________________________________
    Mailing list: http://launchpad.dev/~itest-one
    Post to     : itest-one@lists.launchpad.dev
    Unsubscribe : http://launchpad.dev/~itest-one
    More help   : http://help.launchpad.dev/ListHelp
    <BLANKLINE>
    <BLANKLINE>

In addition, the in-house MHonArc archiver has archived this message.

    >>> mhonarc_watcher.wait_for_message_number(2)
    >>> helpers.collect_archive_message_ids('itest-one')
    ['elephant', 'falcon']

Anne cannot post from her alternative email address because it has still not
been validated yet.

    >>> inject('itest-one', """\
    ... From: aperson@example.org
    ... To: itest-one@lists.launchpad.dev
    ... Subject: A non-member post
    ... Message-ID: <giraffe>
    ...
    ... Hi, I am not a verified member of this team (yet).
    ... """)
    >>> vette_watcher.wait_for_discard('giraffe')
    >>> len(smtpd.getMessages())
    0

However, once she validates this address, she can post from it.

    >>> login('foo.bar@canonical.com')
    >>> alternative_email.status = EmailAddressStatus.VALIDATED
    >>> logout()
    >>> transaction.commit()
    >>> helpers.ensure_membership('itest-one', anne)

    >>> inject('itest-one', """\
    ... From: aperson@example.org
    ... To: itest-one@lists.launchpad.dev
    ... Subject: A member post
    ... Message-ID: <gerbil>
    ...
    ... Hi, I am now a verified member of this team!
    ... """)

    >>> smtpd_watcher.wait_for_mbox_delivery('gerbil')
    >>> smtpd_watcher.wait_for_mbox_delivery('gerbil')
    >>> messages = smtpd.getMessages()
    >>> len(messages)
    2
    >>> messages.sort(key=itemgetter('sender'))

    >>> print messages[0].as_string()
    From: aperson@example.org
    To: itest-one@lists.launchpad.dev
    Message-ID: <gerbil>
    Subject: [Itest-one] A member post
    ...
    Sender: itest-one-bounces+anne.person=example.com@lists.launchpad.dev
    Errors-To: itest-one-bounces+anne.person=example.com@lists.launchpad.dev
    Received: by smtp2mbox
    <BLANKLINE>
    Hi, I am now a verified member of this team!
    _______________________________________________
    Mailing list: http://launchpad.dev/~itest-one
    Post to     : itest-one@lists.launchpad.dev
    Unsubscribe : http://launchpad.dev/~itest-one
    More help   : http://help.launchpad.dev/ListHelp
    <BLANKLINE>
    <BLANKLINE>

    >>> print messages[1].as_string()
    From: aperson@example.org
    To: itest-one@lists.launchpad.dev
    Message-ID: <gerbil>
    Subject: [Itest-one] A member post
    ...
    Sender: itest-one-bounces+archive=mail-archive.dev@lists.launchpad.dev
    Errors-To: itest-one-bounces+archive=mail-archive.dev@lists.launchpad.dev
    Received: by smtp2mbox
    <BLANKLINE>
    Hi, I am now a verified member of this team!
    _______________________________________________
    Mailing list: http://launchpad.dev/~itest-one
    Post to     : itest-one@lists.launchpad.dev
    Unsubscribe : http://launchpad.dev/~itest-one
    More help   : http://help.launchpad.dev/ListHelp
    <BLANKLINE>
    <BLANKLINE>

There should also be no held requests pending.

    >>> len(helpers.pending_hold_ids('itest-one'))
    0


== Leaving and re-joining the team ==

Anne now leaves the team, but she does not unsubscribe from the mailing list.

    >>> login('foo.bar@canonical.com')
    >>> from zope.component import getUtility
    >>> from canonical.launchpad.interfaces.person import IPersonSet
    >>> team_one = getUtility(IPersonSet).getByName('itest-one')
    >>> anne.leave(team_one)
    >>> logout()
    >>> transaction.commit()
    >>> helpers.ensure_nonmembership('itest-one', anne)

Because she is not a team member, her message is held for moderation.

    >>> inject('itest-one', """\
    ... From: aperson@example.org
    ... To: itest-one@lists.launchpad.dev
    ... Subject: A non-team member post
    ... Message-ID: <horse>
    ...
    ... Hi, I am not a team member.
    ... """)
    >>> vette_watcher.wait_for_hold('horse')
    >>> messages = smtpd.getMessages()
    >>> len(messages)
    1
    >>> print messages[0].as_string()
    Content-Type: text/plain; charset="utf-8"
    ...
    Subject: New mailing list message requiring approval for Itest One
    ...
        Subject: A non-team member post
        Author name: Anne Person
        Author url: http://launchpad.dev:8085/~anne
        Date: ...
        Message-ID: <horse>
    ...

The team administrator discards the message.

    >>> browser.open(
    ...     'http://launchpad.dev:8085/~itest-one/+mailinglist-moderate')
    >>> browser.getControl(name='field.%3Chorse%3E').value = [
    ...     'discard']
    >>> browser.getControl('Moderate').click()
    >>> xmlrpc_watcher.wait_for_discard('horse')

Anne re-joins the team and once again can post to the mailing list.  She does
not need to re-subscribe to the mailing list.

    >>> login('foo.bar@canonical.com')
    >>> anne.join(team_one)
    >>> logout()
    >>> transaction.commit()
    >>> helpers.ensure_membership('itest-one', anne)

    >>> inject('itest-one', """\
    ... From: aperson@example.org
    ... To: itest-one@lists.launchpad.dev
    ... Subject: A posting from a member once again
    ... Message-ID: <iguana>
    ...
    ... Hi, I am a team member again!
    ... """)

    # Wait for mailing list deliveries to both recipients.
    >>> smtpd_watcher.wait_for_mbox_delivery('iguana')
    >>> smtpd_watcher.wait_for_mbox_delivery('iguana')
    >>> messages = smtpd.getMessages()
    >>> len(messages)
    2
    >>> messages.sort(key=itemgetter('sender'))
    >>> for message in sorted(messages, key=itemgetter('sender')):
    ...     print message['sender']
    ...     print message['subject']
    itest-one-bounces+anne.person=example.com@lists.launchpad.dev
    [Itest-one] A posting from a member once again
    itest-one-bounces+archive=mail-archive.dev@lists.launchpad.dev
    [Itest-one] A posting from a member once again


== First post moderation ==

Normally, Launchpad members who are not subscribed to the mailing list will
have their posts held for moderation.

    >>> login('foo.bar@canonical.com')
    >>> bart = new_person('Bart')
    >>> transaction.commit()
    >>> bart.personal_standing
    <DBItem PersonalStanding.UNKNOWN...

    >>> def print_message_summaries():
    ...     messages = sorted(smtpd.getMessages(), key=itemgetter('sender'))
    ...     print 'Number of messages:', len(messages)
    ...     for message in messages:
    ...         print message['sender']
    ...         print '   ', message['message-id']
    ...         print '   ', message['from']
    ...         print '   ', message['subject']

    >>> inject('itest-one', """\
    ... From: bperson@example.org
    ... To: itest-one@lists.launchpad.dev
    ... Subject: A non-member post
    ... Message-ID: <jackal>
    ...
    ... Hi, I am not a member of the mailing list.
    ... """)
    >>> vette_watcher.wait_for_hold('jackal')
    >>> print_message_summaries()
    Number of messages: 1
    bounces@canonical.com
        ...
        Itest One <noreply@launchpad.net>
        New mailing list message requiring approval for Itest One

However, a Launchpad member in good standing is allowed to post to any mailing
list.

    >>> from canonical.launchpad.interfaces import PersonalStanding
    >>> login('foo.bar@canonical.com')
    >>> bart.personal_standing = PersonalStanding.GOOD
    >>> transaction.commit()

    >>> inject('itest-one', """\
    ... From: bart.person@example.com
    ... To: itest-one@lists.launchpad.dev
    ... Subject: A member in good standing
    ... Message-ID: <kestrel>
    ...
    ... Hi, I am a Launchpad member in good standing!
    ... """)

    # Wait for mailing list deliveries to both recipients.
    >>> smtpd_watcher.wait_for_mbox_delivery('kestrel')
    >>> smtpd_watcher.wait_for_mbox_delivery('kestrel')
    >>> print_message_summaries()
    Number of messages: 2
    itest-one-bounces+anne.person=example.com@lists.launchpad.dev
        <kestrel>
        bart.person@example.com
        [Itest-one] A member in good standing
    itest-one-bounces+archive=mail-archive.dev@lists.launchpad.dev
        <kestrel>
        bart.person@example.com
        [Itest-one] A member in good standing

A member in excellent standing can of course also post to the list.

    >>> bart.personal_standing = PersonalStanding.EXCELLENT
    >>> transaction.commit()

    >>> inject('itest-one', """\
    ... From: bart.person@example.com
    ... To: itest-one@lists.launchpad.dev
    ... Subject: A member in excellent standing
    ... Message-ID: <llama>
    ...
    ... Hi, I am a Launchpad member in excellent standing!
    ... """)

    # Wait for mailing list deliveries to both recipients.
    >>> smtpd_watcher.wait_for_mbox_delivery('llama')
    >>> smtpd_watcher.wait_for_mbox_delivery('llama')
    >>> print_message_summaries()
    Number of messages: 2
    itest-one-bounces+anne.person=example.com@lists.launchpad.dev
        <llama>
        bart.person@example.com
        [Itest-one] A member in excellent standing
    itest-one-bounces+archive=mail-archive.dev@lists.launchpad.dev
        <llama>
        bart.person@example.com
        [Itest-one] A member in excellent standing

But a person in poor standing will have their messages held for approval.

    >>> bart.personal_standing = PersonalStanding.POOR
    >>> transaction.commit()

    >>> inject('itest-one', """\
    ... From: bperson@example.org
    ... To: itest-one@lists.launchpad.dev
    ... Subject: A non-member post
    ... Message-ID: <mongoose>
    ...
    ... Hi, I am not a member of the mailing list.
    ... """)
    >>> vette_watcher.wait_for_hold('mongoose')
    >>> print_message_summaries()
    Number of messages: 1
    bounces@canonical.com
        ...
        Itest One <noreply@launchpad.net>
        New mailing list message requiring approval for Itest One

    >>> logout()


== Preventing archiver forgeries ==

We archive messages by sending them to a special address owned by the Mail
Archive <http://www.mail-archive.com>.  This address becomes a recipient of
the mailing list, but we also prevent this address from being used to post
messages to the list.

    >>> from canonical.config import config
    >>> config.mailman.archive_address
    'archive@mail-archive.dev'
    >>> inject('itest-one', """\
    ... From: %s
    ... To: itest-one@lists.launchpad.dev
    ... Subject: A forgery
    ... Message-ID: <narwhale>
    ...
    ... Hi, I am forging me some spam!
    ... """ % config.mailman.archive_address)

    >>> vette_watcher.wait_for_discard('narwhale')
    >>> len(smtpd.getMessages())
    0
