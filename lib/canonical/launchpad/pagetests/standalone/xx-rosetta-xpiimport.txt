= Demonstrate import of Firefox XPI file =

To import translations into Firefox product, we must first import en-US.xpi
file, which is an equivalent of a PO Template.

Lets start with Firefox product inside trunk revision.

  >>> browser.addHeader('Authorization', 'Basic carlos@canonical.com:test')
  >>> browser.open('http://translations.launchpad.dev/firefox/trunk')
  >>> print browser.url
  http://translations.launchpad.dev/firefox/trunk

We click on the 'Translation' link which takes us to general Firefox
translations overview.

  >>> browser.getLink('Translations').click()
  >>> print browser.url
  http://translations.launchpad.dev/firefox/trunk/+translations

Since we still don't have any POTemplates assigned, we must use the general
translations upload link.

  >>> browser.getLink('Upload Translations').click()
  >>> print browser.url
  http://translations.launchpad.dev/firefox/trunk/+translations-upload

Get the XPI file we are going to upload.

  >>> from canonical.launchpad.components import ftests
  >>> xpifile = ftests.test_xpi_import_export.get_en_US_xpi_file_to_import()

Now, lets upload this file.

  >>> browser.getControl('File:').add_file(
  ...     xpifile, 'application/zip', 'en-US.xpi')
  >>> browser.getControl('Request Upload').click()

  >>> print browser.url
  http://translations.launchpad.dev/firefox/trunk/+translations-upload
  >>> print browser.contents
  <!DOCTYPE...
  ...
  ...Thank (really) you for your upload...
  ...

Lets check the import queue to edit this entry and set potemplatename.

  >>> browser.getLink('Translation Import Queue').click()
  >>> print browser.url
  http://translations.launchpad.dev/translations/imports
  >>> 'en-US.xpi' in browser.contents
  True
  >>> browser.getLink('Edit').click()
  >>> print browser.url
  http://launchpad.dev/translations/imports/1

Use 'firefox' as the template name.

  >>> browser.getControl('Template Name').value = 'firefox'
  >>> browser.getControl('Attach').click()
  >>> print browser.url
  http://launchpad.dev/translations/imports
  >>> browser.getControl(name='status-1').value == ['APPROVED']
  True
