Buildd Scoring
==============

Some tests for build jobs scoring implementation, which envolves the
analysis of each job pending in the queue. The actions to be performed are
described in <https://launchpad.canonical.com/AutoBuildManagement>.
A summary:

 * ETA to build (smaller == more points)
 * Time spent in build queue (longer == more points)
 * urgency
 * priority/seed/component (BASE|DESKTOP|SUPPORTED) [PEND]
 * Overarching policy (SECURITY/UPDATES/RELEASE) [PEND]


    >>> import datetime
    >>> import pytz
    >>> LOCAL_NOW = datetime.datetime.now(pytz.timezone('UTC'))


Let's create a 'mock' class which emulate the real behaviour of
BuildQueue entries.

    >>> from canonical.launchpad.interfaces import IDistributionSet

    >>> ubuntu = getUtility(IDistributionSet)['ubuntu']
    >>> hoary = ubuntu['hoary']
    >>> hoary386 = hoary['i386']
    >>> hoary386.title
    u'The Hoary Hedgehog Release for i386 (x86)'

    >>> pmount_sp = hoary.getSourcePackage('pmount')
    >>> pmount_dsspr = pmount_sp.currentrelease
    >>> pmount_current_publication = pmount_dsspr.current_published
    >>> pmount_spr = pmount_dsspr.sourcepackagerelease


    >>> from canonical.launchpad.interfaces import IComponentSet
    >>> comp_set = getUtility(IComponentSet)
    >>> main_component = comp_set['main']
    >>> restricted_component = comp_set['restricted']
    >>> universe_component = comp_set['universe']
    >>> multiverse_component = comp_set['multiverse']


    >>> from canonical.launchpad.interfaces import (
    ...     PackagePublishingPocket, SourcePackageUrgency)
    >>> from zope.security.proxy import removeSecurityProxy

    >>> def setUpBuildQueueEntry(
    ...     component=main_component, urgency=SourcePackageUrgency.HIGH,
    ...     date_created=LOCAL_NOW, manual=False):
    ...
    ...     naked_spr = removeSecurityProxy(pmount_spr)
    ...     naked_spr.urgency = urgency
    ...     naked_pub = removeSecurityProxy(pmount_current_publication)
    ...     naked_pub.component = component
    ...
    ...     pocket = PackagePublishingPocket.RELEASE
    ...     archive = hoary386.distroseries.main_archive
    ...     build = naked_spr.createBuild(hoary386, pocket, archive)
    ...
    ...     build_queue = build.createBuildQueueEntry()
    ...     build_queue.created = date_created
    ...     build_queue.manual = manual
    ...
    ...     return build_queue


 * 1000 points for component 'main',
 * 15 points for urgency HIGH.
 * nothing for queue_time

    >>> bq0 = setUpBuildQueueEntry()

    >>> bq0.score()
    DEBUG:root:i386 build of pmount 0.1-2 in ubuntu hoary RELEASE (0) -> U+15 C+1000 T+0 = 1015
    >>> bq0.lastscore
    1015

 * 1000 points for main components
 * 5 point for priority LOW
 * nothing for queue_time

    >>> time1 = LOCAL_NOW - datetime.timedelta(seconds=300)
    >>> bq1 = setUpBuildQueueEntry(
    ...      urgency=SourcePackageUrgency.LOW, date_created=time1)

    >>> bq1.score()
    DEBUG:root:i386 build of pmount 0.1-2 in ubuntu hoary RELEASE (0) -> U+5 C+1000 T+0 = 1005

    >>> bq1.lastscore
    1005

 * 250 points for universe component universe
 * 15 points for priority HIGH
 * 5 points for queue_time ( > 300 seconds)

    >>> time2 = LOCAL_NOW - datetime.timedelta(seconds=310)
    >>> bq2 = setUpBuildQueueEntry(
    ...      component=universe_component, urgency=SourcePackageUrgency.HIGH,
    ...      date_created=time2)

    >>> bq2.score()
    DEBUG:root:i386 build of pmount 0.1-2 in ubuntu hoary RELEASE (0) -> U+15 C+250 T+5 = 270

    >>> bq2.lastscore
    270

 * nothing for component multiverse
 * 10 points for MEDIUM priority
 * 10 points for queue_time ( > 900 seconds)

    >>> time3 = LOCAL_NOW - datetime.timedelta(seconds=1000)
    >>> bq3 = setUpBuildQueueEntry(
    ...      component=multiverse_component, urgency=SourcePackageUrgency.MEDIUM,
    ...      date_created=time3)

    >>> bq3.score()
    DEBUG:root:i386 build of pmount 0.1-2 in ubuntu hoary RELEASE (0) -> U+10 C+0 T+10 = 20

    >>> bq3.lastscore
    20

 * 1000 points for main component
 * 20 points for EMERGENCY priority
 * 15 points for queue_time ( > 1800 seconds)

    >>> time4 = LOCAL_NOW - datetime.timedelta(seconds=3600)
    >>> bq4 = setUpBuildQueueEntry(
    ...      component=main_component, urgency=SourcePackageUrgency.EMERGENCY,
    ...      date_created=time4)

    >>> bq4.score()
    DEBUG:root:i386 build of pmount 0.1-2 in ubuntu hoary RELEASE (0) -> U+20 C+1000 T+15 = 1035

    >>> bq4.lastscore
    1035

 * 750 points for restricted component
 * 5 points for LOW priority
 * 20 points for queue_time ( > 3600 seconds)

    >>> time5 = LOCAL_NOW - datetime.timedelta(seconds=4000)
    >>> bq5 = setUpBuildQueueEntry(
    ...      component=restricted_component, urgency=SourcePackageUrgency.LOW,
    ...      date_created=time5)

    >>> bq5.score()
    DEBUG:root:i386 build of pmount 0.1-2 in ubuntu hoary RELEASE (0) -> U+5 C+750 T+20 = 775

    >>> bq5.lastscore
    775


By setting manual attribute of a BuildQueue entry we prevent it to be
rescored, which allows us to set an arbitrary value on it.

    >>> time6 = LOCAL_NOW
    >>> bq6 = setUpBuildQueueEntry(
    ...      urgency=SourcePackageUrgency.LOW, date_created=time6, manual=True)

    >>> bq6.lastscore = 5000

    >>> bq6.score()
    DEBUG:root:pmount (5000) MANUALLY RESCORED

    >>> bq6.lastscore
    5000
