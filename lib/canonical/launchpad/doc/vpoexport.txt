= VPOExport and VPOExportSet =

POExport is a database view on POFile, POTemplate, TranslationMessage,
and related tables that is used to facilitate translation exports.  The
VPOExport and VPOExportSet classes act as a Python interface to those
tables.

    >>> from zope.component import getUtility
    >>> from canonical.launchpad.interfaces import (
    ...     IDistributionSet, IVPOExportSet)

    >>> vpoexportset = getUtility(IVPOExportSet)
    >>> hoary = getUtility(IDistributionSet)['ubuntu']['hoary']

    >>> def describe_pofile(pofile):
    ...     return "%s %s %s" % (
    ...         pofile.potemplate.sourcepackagename.name,
    ...         pofile.potemplate.name, pofile.language.code)

To facilitate language pack exports, IVPOExportSet can enumerate all
current POFiles in a given distro series.

    >>> pofiles = sorted([
    ...     describe_pofile(pofile)
    ...     for pofile in vpoexportset.get_distroseries_pofiles(hoary)])
    >>> for pofile in pofiles:
    ...     print pofile
    evolution evolution-2.2 es
    evolution evolution-2.2 ja
    evolution evolution-2.2 xh
    evolution man es
    mozilla   pkgconf-mozilla cs
    mozilla   pkgconf-mozilla da
    mozilla   pkgconf-mozilla de
    mozilla   pkgconf-mozilla en
    mozilla   pkgconf-mozilla es
    mozilla   pkgconf-mozilla fi
    mozilla   pkgconf-mozilla fr
    mozilla   pkgconf-mozilla gl
    mozilla   pkgconf-mozilla it
    mozilla   pkgconf-mozilla ja
    mozilla   pkgconf-mozilla lt
    mozilla   pkgconf-mozilla nl
    mozilla   pkgconf-mozilla pt_BR
    mozilla   pkgconf-mozilla tr
    pmount    pmount ca
    pmount    pmount cs
    pmount    pmount de
    pmount    pmount es
    pmount    pmount es
    pmount    pmount fr
    pmount    pmount hr
    pmount    pmount it_IT
    pmount    pmount nb

    >>> print len(pofiles)
    27
    >>> print vpoexportset.get_distroseries_pofiles_count(hoary)
    27

The get_pofile_rows method lists all translations found in the
pofile.

    >>> potemplate = factory.makePOTemplate()
    >>> pofile = factory.makePOFile('eo', potemplate=potemplate)
    >>> factory.makeTranslation(pofile, 1, "english1", "esperanto1", True)
    >>> factory.makeTranslation(pofile, 2, "english2", "esperanto2", False)

    >>> def describe_poexport_row(row):
    ...     return "%s %s %s" % (
    ...         row.sequence, row.msgid_singular, row.translation0)

    >>> rows = sorted([
    ...     describe_poexport_row(row)
    ...     for row in vpoexportset.get_pofile_rows(pofile)])
    >>> for row in rows:
    ...     print row
    1 english1 esperanto1
    2 english2 esperanto2

The get_pofile_changed_rows method lists all translations found in the
pofile it is given if they were changed after they were imported. These are
all current messages that have not been imported.

    >>> rows = sorted([
    ...     describe_poexport_row(row)
    ...     for row in vpoexportset.get_pofile_changed_rows(pofile)])
    >>> for row in rows:
    ...     print row
    2 english2 esperanto2


== VPOExport and translation divergence ==

A particular product has two series, trunk and stable, each with the
same template.  The templates thus share messages.

    >>> from canonical.launchpad.database.translationtemplateitem import (
    ...     TranslationTemplateItem)
    >>> product = factory.makeProduct()
    >>> trunk = product.getSeries('trunk')
    >>> stable = factory.makeProductSeries()
    >>> trunk_template = factory.makePOTemplate(productseries=trunk, name='t')
    >>> stable_template = factory.makePOTemplate(
    ...     productseries=stable, name='t')

The two templates contain the same two POTMsgSets.  They are shared
between the two templates.

    >>> potmsgset1 = factory.makePOTMsgSet(trunk_template, '1', sequence=1)
    >>> potmsgset2 = factory.makePOTMsgSet(trunk_template, '2', sequence=2)
    >>> for number, msgset in enumerate([potmsgset1, potmsgset2]):
    ...     new_tti = TranslationTemplateItem(
    ...         potemplate=stable_template, sequence=number+1,
    ...         potmsgset=msgset)

The templates are translated to Dutch.

    >>> from zope.security.proxy import removeSecurityProxy
    >>> trunk_pofile = factory.makePOFile('nl', potemplate=trunk_template)
    >>> stable_pofile = factory.makePOFile('nl', potemplate=stable_template)
    >>> message1 = factory.makeTranslationMessage(
    ...     pofile=removeSecurityProxy(trunk_pofile), potmsgset=potmsgset1,
    ...     translations=['een'])
    >>> message2 = factory.makeTranslationMessage(
    ...     pofile=removeSecurityProxy(trunk_pofile), potmsgset=potmsgset2,
    ...     translations=['twee'])

Of the translations, one message is diverged for trunk and the other is
diverged for stable.

    >>> removeSecurityProxy(message1).potemplate = trunk_template
    >>> removeSecurityProxy(message2).potemplate = stable_template

When we export trunk, only the trunk message shows up.

    >>> for row in vpoexportset.get_pofile_rows(trunk_pofile):
    ...     print describe_poexport_row(row)
    1   1   een

In an export for stable, only the stable message shows up.

    >>> for row in vpoexportset.get_pofile_rows(stable_pofile):
    ...     print describe_poexport_row(row)
    2   2   twee
