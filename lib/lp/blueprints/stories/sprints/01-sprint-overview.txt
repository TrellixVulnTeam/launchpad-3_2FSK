Launchpad Sprint Tracker
========================

Launchpad lets us register a meeting, and then keep track of which specs are
due to be discussed at that meeting. As a result we can schedule and
prioritize BOF's at the meeting, using an as-yet-undeveloped
schedul-o-matic.

    >>> import datetime as dt
    >>> from pytz import UTC
    >>> from zope.component import getUtility
    >>> from lp.registry.interfaces.person import IPersonSet
    >>> login('test@canonical.com')
    >>> rome_sprint = factory.makeSprint(name='rome', title='Rome')
    >>> rome_sprint.time_ends = dt.datetime.now(UTC) + dt.timedelta(30)
    >>> rome_sprint.time_starts = dt.datetime.now(UTC) + dt.timedelta(20)
    >>> sample_person = getUtility(IPersonSet).getByName('name12')
    >>> rome_sprint.driver = sample_person
    >>> logout()

Let's start by viewing the list of sprints registered.

    >>> user_browser.open('http://launchpad.dev/sprints')
    >>> user_browser.title
    'Meetings and sprints registered in Launchpad'

    >>> print find_tag_by_id(user_browser.contents, 'application-summary')
    <p ...
      Launchpad can help you organize your developer sprints, summits and
      gatherings. Register the meeting here, then you can invite people to
      nominate blueprints for discussion at the event. The meeting drivers
      control the agenda, but everyone can see what's proposed and what's
      been accepted.
    </p>

Now lets have a look at one sprint in particular. We expect to have a sprint
called "paris" in the sample data. Note that this list only shows meetings
in the future, so there is a timebomb here for 2011 or so...

    >>> user_browser.getLink('Rome').click()
    >>> user_browser.url
    'http://launchpad.dev/sprints/rome'
