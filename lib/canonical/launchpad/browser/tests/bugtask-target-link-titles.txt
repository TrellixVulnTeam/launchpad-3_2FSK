= Titles for bug task target links =

Some links to targets in the affects table have a title, which contains
some information about the target. There is a method,
getTargetLinkTitle() on BugTasksAndNominationsView, which generates the
title.

    >>> from canonical.launchpad.browser.bugtask import (
    ...     BugTasksAndNominationsView)
    >>> from canonical.launchpad.tests.test_publishing import (
    ...     SoyuzTestPublisher)
    >>> publisher = SoyuzTestPublisher()
    >>> factory = publisher.factory
    >>> view = BugTasksAndNominationsView(factory.makeBug(), None)

The _getTableRowView() method uses the result from getTargetLinkTitle()
to set the target_link_title attribute.

    >>> from canonical.launchpad.webapp.servers import LaunchpadTestRequest
    >>> class TestBugTasksAndNominationsView(BugTasksAndNominationsView):
    ...     def getTargetLinkTitle(self, target):
    ...         return target
    >>> bug = factory.makeBug(product=factory.makeProduct('bug-target'))
    >>> bugtask = bug.bugtasks[0]
    >>> view = TestBugTasksAndNominationsView(bug, LaunchpadTestRequest())
    >>> view.initialize()
    >>> returned_view = view._getTableRowView(bugtask, False, False)
    >>> returned_view.target_link_title.name
    u'bug-target'


== Distributions ==

For normal distribution, there is information about source packages, but
not for the distribution itself.


=== Unpublished ===

If the distribution doesn't have any published source packages, no
information is displayed for the source package.

    >>> def set_up_view(bug_target):
    ...     bugtask = factory.makeBugTask(target=bug_target)
    ...     view = BugTasksAndNominationsView(bugtask.bug, None)
    ...     view.initialize()
    ...     return view
    >>> unpublished_distro = factory.makeDistribution(
    ...     name='unpublished-distro', displayname='Unpublished Distro')

    >>> login('foo.bar@canonical.com')
    >>> view = set_up_view(unpublished_distro)
    >>> print view.getTargetLinkTitle(unpublished_distro)
    None

    >>> unpublished_evolution = unpublished_distro.getSourcePackage(
    ...     'evolution')
    >>> view = set_up_view(unpublished_evolution)
    >>> print view.getTargetLinkTitle(unpublished_evolution)
    No current release for this source package in Unpublished Distro


=== Published ===

If there are published source packages in the distribution, information
about the current release is displayed.

    >>> import pytz
    >>> from datetime import datetime
    >>> from canonical.launchpad.interfaces.person import IPersonSet
    >>> published_distro = factory.makeDistribution(
    ...     name='published-distro', displayname='Published Distro')
    >>> published_distro_series = factory.makeDistroRelease(
    ...     published_distro, name='published-distro-series')
    >>> publisher.setUpDefaultDistroSeries(published_distro_series)
    <DistroSeries at ...>
    >>> print publisher.person.unique_displayname
    Foo Bar (name16)
    >>> no_priv = getUtility(IPersonSet).getByName('no-priv')
    >>> UTC = pytz.timezone('UTC')
    >>> publisher.getPubSource(
    ...     sourcename='evolution', version='1.0', component='universe',
    ...     date_uploaded=datetime(2008, 7, 18, 9, 30, 15, tzinfo=UTC),
    ...     maintainer=no_priv)
    <SourcePackagePublishingHistory at ...>
    >>> published_evolution = published_distro.getSourcePackage('evolution')

    >>> view = set_up_view(published_distro)
    >>> print view.getTargetLinkTitle(published_distro)
    None
    >>> view = set_up_view(published_evolution)
    >>> print view.getTargetLinkTitle(published_evolution)
    Latest release: 1.0, uploaded to universe on 2008-07-18 09:30:15+00:00
    by Foo Bar (name16), maintained by No Privileges Person (no-priv)


== Distro series ==

The link titles for distribution series are similar to the distribution
ones. Only published source packages have link titles.


=== Unpublished ===

If the distribution series doesn't have any published source packages,
no information is displayed for the source package.

    >>> unpublished_distro_series = factory.makeDistroRelease(
    ...     distribution=unpublished_distro, name='unpublished-distro-series')
    >>> view = set_up_view(unpublished_distro_series)
    >>> print view.getTargetLinkTitle(unpublished_distro_series)
    None

    >>> unpublished_series_evolution = (
    ...     unpublished_distro_series.getSourcePackage('evolution'))
    >>> view = set_up_view(unpublished_series_evolution)
    >>> print view.getTargetLinkTitle(unpublished_series_evolution)
    No current release for this source package in Unpublished Distro


=== Published ===

If there are published source packages in the series, information
about the current release is displayed.

    >>> published_distro_series = publisher.distroseries
    >>> view = set_up_view(published_distro_series)
    >>> print view.getTargetLinkTitle(published_distro_series)
    None

    >>> published_series_evolution = published_distro_series.getSourcePackage(
    ...     'evolution')

    >>> other_published_series = factory.makeDistroRelease(
    ...     distribution=published_distro)
    >>> publisher.getPubSource(
    ...     sourcename='evolution', version='2.0', component='universe',
    ...     date_uploaded=datetime(2008, 7, 18, 10, 20, 30, tzinfo=UTC),
    ...     maintainer=no_priv, distroseries=other_published_series)
    <SourcePackagePublishingHistory at ...>
    >>> other_published_series_evolution = (
    ...     other_published_series.getSourcePackage('evolution'))

    >>> view = set_up_view(published_series_evolution)
    >>> print view.getTargetLinkTitle(published_series_evolution)
    Latest release: 1.0, uploaded to universe on 2008-07-18 09:30:15+00:00
    by Foo Bar (name16), maintained by No Privileges Person (no-priv)

    >>> view = set_up_view(other_published_series_evolution)
    >>> print view.getTargetLinkTitle(other_published_series_evolution)
    Latest release: 2.0, uploaded to universe on 2008-07-18 10:20:30+00:00
    by Foo Bar (name16), maintained by No Privileges Person (no-priv)


== Products and product series ==

Products and product series don't have any link titles.

    >>> product = factory.makeProduct(name='product')
    >>> view = set_up_view(product)
    >>> print view.getTargetLinkTitle(product)
    None

    >>> product_series = factory.makeProductSeries(
    ...     product=product, name='product-series')
    >>> view = set_up_view(product_series)
    >>> print view.getTargetLinkTitle(product_series)
    None


== Initializing ==

Before the BugTasksAndNominationsView is usable, it needs to be
initialized. When calling initialized(), the mapping from each of the
bug's target to its current release is set up.

    >>> bug = factory.makeBug(product=product)
    >>> bug_targets = [
    ...     product,
    ...     product_series,
    ...     published_distro,
    ...     published_evolution,
    ...     published_distro_series,
    ...     published_series_evolution,
    ...     unpublished_distro,
    ...     unpublished_evolution,
    ...     unpublished_distro_series,
    ...     unpublished_series_evolution,
    ...     ]
    >>> for bug_target in bug_targets:
    ...     bugtask = factory.makeBugTask(bug=bug, target=bug_target)
    >>> view = BugTasksAndNominationsView(bug, None)
    >>> view.initialize()
    >>> for bug_target in bug_targets:
    ...     release = view.target_releases.get(bug_target)
    ...     if release is None:
    ...         version = 'No releases'
    ...     else:
    ...         version = release.version
    ...     print "%s: %s" % (bug_target.bugtargetname, version)
    product: No releases
    product/product-series: No releases
    published-distro: No releases
    evolution (Published Distro): 2.0
    Published-distro Published-distro-series: No releases
    evolution (Published-distro Published-distro-series): 1.0
    unpublished-distro: No releases
    evolution (Unpublished Distro): No releases
    Unpublished-distro Unpublished-distro-series: No releases
    evolution (Unpublished-distro Unpublished-distro-series): No releases

