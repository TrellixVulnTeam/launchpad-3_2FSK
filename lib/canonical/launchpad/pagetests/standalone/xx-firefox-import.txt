= Demonstrate import of Firefox XPI file =

To import translations into Firefox product, we must first import en-US.xpi
file, which is an equivalent of a PO Template.

Lets start with Firefox product inside trunk revision.

  >>> browser.addHeader('Authorization', 'Basic carlos@canonical.com:test')
  >>> browser.open('http://translations.launchpad.dev/products/firefox/trunk')
  >>> print browser.url
  http://translations.launchpad.dev/products/firefox/trunk

We click on the 'Translation' link which takes us to general Firefox
translations overview.

  >>> browser.getLink('Translations').click()
  >>> print browser.url
  http://translations.launchpad.dev/products/firefox/trunk/+translations

Since we still don't have any POTemplates assigned, we must use the general
translations upload link.

  >>> browser.getLink('Upload Translations').click()
  >>> print browser.url
  http://translations.launchpad.dev/products/firefox/trunk/+translations-upload

Lets create a XPI file out of extracted en-US.xpi contents.  en-US.xpi file
is a ZIP file which contains embedded JAR file (which is also a ZIP file) and
a couple of other files.  Embedded JAR file is named 'en-US.jar' and contains
translatable resources.

  >>> import zipfile, tempfile
  >>> import canonical.launchpad, os.path
  >>> test_root = os.path.join(
  ...     os.path.dirname(canonical.launchpad.__file__),
  ...     'pagetests/standalone/firefox/')

First create a en-US.jar file to be included in XPI file.

  >>> jarfile = tempfile.TemporaryFile()
  >>> jar = zipfile.ZipFile(jarfile, 'w')
  >>> jarlist = [ 'copyover1.foo', 'test1.dtd', 'test1.properties',
  ... 	      	  'subdir/test2.dtd', 'subdir/test2.properties',
  ...		  'subdir/copyover2.foo' ]
  >>> for subfile in jarlist:
  ... 	  f = open(test_root + 'en-US/en-US-jar/' + subfile, 'r')
  ...	  jar.writestr(subfile, f.read())
  >>> jar.close()
  >>> jarfile.seek(0)

Add remaining bits and en-US.jar to en-US.xpi.

  >>> xpifile = tempfile.TemporaryFile()
  >>> xpi = zipfile.ZipFile(xpifile, 'w')
  >>> xpilist = [ 'install.rdf', 'copyover3.png' ]
  >>> for subfile in xpilist:
  ... 	  f = open(test_root + 'en-US/' + subfile, 'r')
  ...	  xpi.writestr(subfile, f.read())
  >>> xpi.writestr('chrome/en-US.jar', jarfile.read())
  >>> xpi.close()
  >>> xpifile.seek(0)

Now, lets upload this file.

  >>> browser.getControl('File:').add_file(xpifile,
  ...                                      'application/zip',
  ...					   'en-US.xpi')
  >>> browser.getControl('Request Upload').click()

  >>> print browser.url
  http://translations.launchpad.dev/products/firefox/trunk/+translations-upload
  >>> print browser.contents
  <!DOCTYPE...
  ...
  ...Thank (really) you for your upload...
  ...

Lets check the import queue to edit this entry and set potemplatename.

  >>> browser.getLink('Translation Import Queue').click()
  >>> print browser.url
  http://translations.launchpad.dev/rosetta/imports
  >>> 'en-US.xpi' in browser.contents
  True
  >>> browser.getLink('Edit').click()
  >>> print browser.url
  http://launchpad.dev/rosetta/imports/1

Use 'firefox' as the template name.

  >>> browser.getControl('Template Name').value = 'firefox'
  >>> browser.getControl('Continue').click()
  >>> print browser.url
  http://launchpad.dev/rosetta/imports
  >>> browser.getControl(name='status-1').value == ['APPROVED']
  True
