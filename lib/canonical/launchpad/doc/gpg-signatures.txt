OpenPGP Signature Verification
==============================

    >>> from canonical.launchpad.ftests import import_public_test_keys
    >>> import transaction
    >>> import_public_test_keys()

    >>> transaction.commit()

    >>> from canonical.launchpad.ftests import login
    >>> from canonical.launchpad.interfaces import ILaunchBag

    >>> bag = getUtility(ILaunchBag)

    >>> bag.user is None
    True

    >>> login('test@canonical.com')
    >>> bag.user.name
    u'name12'

    >>> from canonical.launchpad.interfaces import IGPGHandler
    >>> from zope.component import getUtility
    >>> gpghandler = getUtility(IGPGHandler)

    >>> from canonical.launchpad.interfaces import GPGVerificationError

The text below was "clear signed" by 0xDFD20543 master key:

    >>> content = """-----BEGIN PGP SIGNED MESSAGE-----
    ... Hash: SHA1
    ...
    ... Test Message.
    ... -----BEGIN PGP SIGNATURE-----
    ... Version: GnuPG v1.2.5 (GNU/Linux)
    ...
    ... iD8DBQFC7ZYY2yWXVgK6XvYRAgcwAJ43g/8X6DguixRucoXN86No67/W2wCgjFDj
    ... jLeauuXDPTcnzDmDzCaQLXo=
    ... =ettP
    ... -----END PGP SIGNATURE-----
    ... """

    >>> master_sig = gpghandler.verifySignature(content)
    >>> master_sig.fingerprint	
    'A419AE861E88BC9E04B9C26FBA2B9389DFD20543'

The text below was "clear signed" by a 0x02BA5EF6, a subkey of 0xDFD20543

    >>> content = """-----BEGIN PGP SIGNED MESSAGE-----
    ... Hash: SHA1
    ...
    ... Test Message.
    ... -----BEGIN PGP SIGNATURE-----
    ... Version: GnuPG v1.2.5 (GNU/Linux)
    ...
    ... iD8DBQFC7ZVH2yWXVgK6XvYRAqWEAJsF9I1MK2tRPPcxjXR2QclSPiQEsgCgtwst
    ... dZ7wZYeW68bk6GuuadabsSY=
    ... =ioKn
    ... -----END PGP SIGNATURE-----
    ... """
    >>>

    >>> subkey_sig = gpghandler.verifySignature(content)
    >>> subkey_sig.fingerprint
    'A419AE861E88BC9E04B9C26FBA2B9389DFD20543'


   >>> master_sig.fingerprint == subkey_sig.fingerprint
   True

The text below was "clear signed" by 0xDFD20543 master key but tampered with:

    >>> content = """-----BEGIN PGP SIGNED MESSAGE-----
    ... Hash: SHA1
    ...
    ... Test Message
    ... -----BEGIN PGP SIGNATURE-----
    ... Version: GnuPG v1.2.5 (GNU/Linux)
    ...
    ... iD8DBQFC7ZYY2yWXVgK6XvYRAgcwAJ43g/8X6DguixRucoXN86No67/W2wCgjFDj
    ... jLeauuXDPTcnzDmDzCaQLXo=
    ... =ettP
    ... -----END PGP SIGNATURE-----
    ... """

    >>> master_sig = gpghandler.getVerifiedSignature(content)
    Traceback (most recent call last):
    ...
    GPGVerificationError: Bad signature

If no signed content is found, an exception is raised:

    >>> content = """-----BEGIN PGP SIGNED MESSAGE-----
    ... Hash: SHA1
    ...
    ... Test Message
    ... -----BEGIN PGP SIGNATURE-----
    ... -----END PGP SIGNATURE-----
    ... """

    >>> master_sig = gpghandler.getVerifiedSignature(content)
    Traceback (most recent call last):
    ...
    GPGVerificationError: No signatures found


The text below contains two clear signed sections.  As there are two
signing keys involved here, we raise a verification error, since the
signed text can not be attributed solely to either key:

    >>> content = """
    ... -----BEGIN PGP SIGNED MESSAGE-----
    ... Hash: SHA1
    ... 
    ... Test Message.
    ... -----BEGIN PGP SIGNATURE-----
    ... Version: GnuPG v1.4.1 (GNU/Linux)
    ... 
    ... iD8DBQFD3xV52yWXVgK6XvYRAtJQAJ4ojuLC4aap4R9T0og17RkPYoND+ACfbCA3
    ... yrZD6MZcqzyaGNy1s28Co2Q=
    ... =5QGd
    ... -----END PGP SIGNATURE-----
    ... -----BEGIN PGP SIGNED MESSAGE-----
    ... Hash: SHA1
    ... 
    ... Some data appended by foo.bar@canonical.com
    ... -----BEGIN PGP SIGNATURE-----
    ... Version: GnuPG v1.4.1 (GNU/Linux)
    ... 
    ... iD8DBQFD3xWpjn63CGxkqMURAmi6AJ4yHAnhIpt49VlYDG1uxpGy9BmHwwCeKbFM
    ... aHIJLqhWVf8bGLHZBIH5odw=
    ... =iUSC
    ... -----END PGP SIGNATURE-----
    ... """
    >>> master_sig = gpghandler.getVerifiedSignature(content)
    Traceback (most recent call last):
    ...
    GPGVerificationError: Single signature expected, found multiple signatures

