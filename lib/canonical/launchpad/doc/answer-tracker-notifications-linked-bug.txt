= Linked Bug Status Changed Notification =

While a bug is linked to a question , its subscribers will be notified
of changes to the bug status:

    >>> from zope.event import notify
    >>> from zope.interface import providedBy
    >>> from canonical.launchpad.interfaces import BugTaskStatus, IPersonSet
    >>> from canonical.launchpad.event import SQLObjectModifiedEvent
    >>> from lazr.lifecycle.snapshot import Snapshot

    >>> no_priv = getUtility(IPersonSet).getByName('no-priv')
    >>> bugtask = get_bugtask_linked_to_question()
    >>> original_bugtask = Snapshot(bugtask, providing=providedBy(bugtask))
    >>> bugtask.transitionToStatus(BugTaskStatus.CONFIRMED, no_priv)
    >>> bugtask.statusexplanation = 'This bug really happened to me.'
    >>> notify(SQLObjectModifiedEvent(
    ...     bugtask, original_bugtask, ['status', 'statusexplanation'],
    ...     user=no_priv))

    >>> from canonical.launchpad.tests.mail_helpers import pop_notifications
    >>> notifications = pop_notifications()
    >>> len(notifications)
    2
    >>> [notification['To'] for notification in notifications]
    ['support@ubuntu.com', 'test@canonical.com']
    >>> notification_body = notifications[0].get_payload(decode=True)
    >>> print notifications[0]['Subject']
    [Question #...]: Status of bug #... changed to 'Confirmed' in Ubuntu
    >>> print notification_body #doctest: -NORMALIZE_WHITESPACE
    Bug #... status changed in Ubuntu:
    <BLANKLINE>
        New => Confirmed
    <BLANKLINE>
    Status change explanation given by No Privileges Person:
    <BLANKLINE>
    This bug really happened to me.
    <BLANKLINE>
    http://.../ubuntu/+bug/...
    "Installer fails on a Mac PPC"
    <BLANKLINE>
    This bug is linked to #15.
    Can't install Ubuntu
    http://.../ubuntu/+question/...
    <BLANKLINE>
    --...
    You received this question notification because you are a member of
    Ubuntu Team, which is an answer contact for Ubuntu.

Only a change in status triggers a notification.

    >>> sample_person = getUtility(IPersonSet).getByEmail('test@canonical.com')
    >>> original_bugtask = Snapshot(bugtask, providing=providedBy(bugtask))
    >>> bugtask.transitionToAssignee(sample_person)
    >>> notify(SQLObjectModifiedEvent(
    ...     bugtask, original_bugtask, ['assignee', 'dateassigned'],
    ...     user=sample_person))

    >>> len(pop_notifications())
    0

