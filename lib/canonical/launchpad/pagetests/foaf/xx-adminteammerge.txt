= Merging Teams =

There's a separate page for merging teams.  In the case of teams,
though, we can't merge teams with active members, so the user will first
have to confirm that the members should be deactivated before the teams
are merged.

    >>> admin_browser.open('http://launchpad.dev/people/+adminteammerge')
    >>> admin_browser.getControl('Duplicated Team').value = (
    ...     'landscape-developers')
    >>> admin_browser.getControl('Target Team').value = 'guadamen'
    >>> admin_browser.getControl('Merge').click()

    >>> admin_browser.url
    'http://launchpad.dev/people/+adminteammerge'
    >>> print get_feedback_messages(admin_browser.contents)[0]
    Landscape Developers has 2 active members which will have to be
    deactivated before the teams can be merged.

    >>> admin_browser.getControl('Deactivate Members and Merge').click()
    >>> admin_browser.url
    'http://launchpad.dev/~guadamen'

    >>> from canonical.launchpad.ftests import ANONYMOUS, login, logout
    >>> from canonical.launchpad.interfaces import IMailingListSet, IPersonSet
    >>> from zope.component import getUtility
    >>> login(ANONYMOUS)
    >>> person_set = getUtility(IPersonSet)
    >>> landscape = person_set.getByName(
    ...     'landscape-developers-merged', ignore_merged=False)
    >>> landscape.merged.name
    u'guadamen'
    >>> logout()


==  Non-display of merged teams ==

Merged teams shouldn't appear on the team listings:

    >>> browser.open("http://launchpad.dev/people/+teamlist?batch=999")
    >>> "guadamen" in browser.contents
    True
    >>> "landscape-developers" in browser.contents
    False


== Corner cases ==

If the duplicated team is associated with a mailing list, it can't be
merged, though.

    >>> login(ANONYMOUS)
    >>> guadamen = person_set.getByName('guadamen')
    >>> mailing_list = getUtility(IMailingListSet).new(guadamen)
    >>> logout()

    >>> admin_browser.open('http://launchpad.dev/people/+adminteammerge')
    >>> admin_browser.getControl('Duplicated Team').value = 'guadamen'
    >>> admin_browser.getControl('Target Team').value = 'ubuntu-team'
    >>> admin_browser.getControl('Merge').click()

    >>> admin_browser.url
    'http://launchpad.dev/people/+adminteammerge'

    >>> print get_feedback_messages(admin_browser.contents)
    [u'There is 1 error.',
     u"guadamen is associated with a Launchpad mailing list;
       we can't merge it."]

We also can't (for obvious reasons) merge any person/team into itself.

    >>> admin_browser.getControl('Duplicated Team').value = 'ubuntu-team'
    >>> admin_browser.getControl('Target Team').value = 'ubuntu-team'
    >>> admin_browser.getControl('Merge').click()

    >>> admin_browser.url
    'http://launchpad.dev/people/+adminteammerge'

    >>> print get_feedback_messages(admin_browser.contents)
    [u'There is 1 error.', u"You can't merge ubuntu-team into itself."]

Nor can we merge a person into a team or a team into a person.

    >>> admin_browser.getControl('Duplicated Team').value = 'ubuntu-team'
    >>> admin_browser.getControl('Target Team').value = 'salgado'
    >>> admin_browser.getControl('Merge').click()

    >>> admin_browser.url
    'http://launchpad.dev/people/+adminteammerge'

    # Yes, the error message is not of much help, but this UI is only for
    # admins and they're supposed to know what they're doing.
    >>> print get_feedback_messages(admin_browser.contents)
    [u'There is 1 error.', u'Constraint not satisfied']

