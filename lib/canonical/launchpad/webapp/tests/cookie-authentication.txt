The feeds vhost should not set the cookie. Since it is running
on http instead of https, it cannot read the secure cookie on https,
so it cannot tell that it will end up overwriting the existing cookie.

    >>> from canonical.launchpad.testing.cookie import Cookies
    >>> cookies = Cookies(browser)
    >>> browser.open('http://feeds.launchpad.dev:8085/announcements.atom')
    >>> browser.url
    'http://feeds.launchpad.dev:8085/announcements.atom'
    >>> len(cookies)
    0

Our cookies need to have their domain attribute set to ensure that they
are sent to other vhosts in the same domain.

    >>> browser.open('http://blueprints.launchpad.dev:8085/+login')

    # On a browser with JS support, this page would've been automatically
    # submitted (thanks to the onload handler), but testbrowser doesn't support
    # JS, so we have to submit the form manually.
    >>> print browser.contents
    <html>...<body onload="document.forms[0].submit();"...
    >>> browser.getControl('Continue').click()

    >>> browser.getControl(name='field.email').value = 'foo.bar@canonical.com'
    >>> browser.getControl(name='field.password').value = 'test'
    >>> browser.getControl('Continue').click()
    >>> print extract_text(find_tag_by_id(browser.contents, 'logincontrol'))
    Foo Bar...

    # We see two cookies because there's one for the OpenID provider we used
    # when logging in (testopenid) and other for Launchpad itself.
    >>> len(cookies)
    2
    >>> sorted(cookies.keys())
    ['launchpad_tests', 'testopenid']
    >>> session_cookie_name = cookies.keys()[0]
    >>> cookies.getInfo(session_cookie_name)['domain']
    '.launchpad.dev'

If we visit another vhost in the domain, we remain logged in.

    >>> browser.open('http://launchpad.dev:8085/')
    >>> browser.url
    'http://launchpad.dev:8085/'
    >>> print extract_text(find_tag_by_id(browser.contents, 'logincontrol'))
    Foo Bar...
    >>> cookies.getInfo(session_cookie_name)['domain']
    '.launchpad.dev'

Even if the browser passes in a cookie, the feeds vhost should not set one.

    >>> browser.open('http://feeds.launchpad.dev:8085/announcements.atom')
    >>> browser.url
    'http://feeds.launchpad.dev:8085/announcements.atom'
    >>> print browser.headers.get('Set-Cookie')
    None

# XXX stub 20060816 bug=56601: We need to test that for https: URLs, the
# secure attribute is set on the cookie.
