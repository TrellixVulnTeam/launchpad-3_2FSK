Person
======

In Launchpad, the Person class is overloaded to represent both people
and teams. The way to tell if a Person represents a person or a team
is to check its teamowner attribute

>>> from canonical.launchpad.database import Person

>>> buttsource = Person.byName('buttsource')
>>> buttsource.teamowner is None
False
>>> lifeless = Person.byName('lifeless')
>>> lifeless.teamowner is None
True

Person has an inTeam method to allow us to easily check if a person is a
member of a team. It accepts the team name as a string, which is the
common use case when checking permissions.

>>> lifeless = Person.byName('lifeless')
>>> ddaa = Person.byName('ddaa')
>>> lifeless.inTeam('buttsource') and ddaa.inTeam('buttsource')
True


If a Person is not a Team then the Person object will not provide the
ITeam interface.

>>> from canonical.launchpad.interfaces import ITeam
>>> ITeam.providedBy(lifeless)
False

If a Person is a Team then the Person will provide the ITeam interface.

>>> ITeam.providedBy(buttsource)
True

We don't support changing a Person into a Team or a Team into a Person.

>>> lifeless.teamowner = ddaa
>>> ITeam.providedBy(lifeless)
False
>>> buttsource.teamowner = None
>>> ITeam.providedBy(buttsource)
True

