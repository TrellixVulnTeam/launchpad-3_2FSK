= Reset Password =

David Allouche forgot his password and he's going to use the forgotten
password form to reset it.

He locates the forgotten password link on the login page to visit
the page.

    >>> browser.open('http://launchpad.dev/+login')
    >>> browser.getLink('Forgotten your password?').click()

    >>> browser.url
    'http://launchpad.dev/+forgottenpassword'

    >>> browser.title
    'Need a new Launchpad password?'

He types the email address registered in Launchpad and submit the form.

    >>> browser.getControl(name='email').value = (
    ...     'david.allouche@canonical.com')
    >>> browser.getControl('Request Reset').click()

    >>> print browser.contents
    <...
    ...<p>We have sent you an email with instructions to reset your
    password.</p>...
    ...

David receives an email from Launchpad.

    >>> import email, re
    >>> from canonical.launchpad.mail import stub

    # Get the to-addresses and link form the email/
    >>> def get_addr_and_link_from_email():
    ...     from_addr, to_addrs, raw_msg = stub.test_emails.pop()
    ...     assert not stub.test_emails
    ...     msg = email.message_from_string(raw_msg)
    ...     body = msg.get_payload()
    ...     link = re.findall(r'http.*/token/.*', body)[0]
    ...     return to_addrs, link

    >>> to_addrs, link = get_addr_and_link_from_email()

The email was sent to him.

    >>> to_addrs
    ['david.allouche@canonical.com']

David uses the link in the email to visit the reset password page.

    >>> link
    'http://launchpad.dev/token/...'
    >>> browser.open(link)
    >>> browser.url
    'http://launchpad.dev/token/.../+resetpassword'

The token can only be used to reset the password.  Manually typing
another login token view name will redirect to the correct one:

    >>> wrong_link = link + "/+validateemail"
    >>> browser.open(wrong_link)
    >>> browser.url
    'http://launchpad.dev/token/.../+resetpassword'

He may now enter his password.  Unfortunately, he picks a password with
invalid characters:

    >>> browser.getControl(
    ...     name='field.email').value = 'david.allouche@canonical.com'
    >>> browser.getControl(name='field.password').value = 'é'
    >>> browser.getControl(name='field.password_dupe').value = 'é'
    >>> browser.getControl('Continue').click()

    >>> browser.url
    'http://launchpad.dev/token/.../+resetpassword'

    >>> for tag in get_feedback_messages(browser.contents):
    ...     print extract_text(tag)
    There is 1 error.
    The password provided contains non-ASCII characters.

This time, David corrects the password and continues:

    >>> browser.getControl(name='field.password').value = 'test2'
    >>> browser.getControl(name='field.password_dupe').value = 'test2'
    >>> browser.getControl('Continue').click()

    >>> browser.url
    'http://launchpad.dev/~ddaa'

    >>> for tag in get_feedback_messages(browser.contents):
    ...     print extract_text(tag)
    Your password has been reset successfully.

    >>> print extract_text(find_tag_by_id(browser.contents, 'logincontrol'))
    David Allouche...

Now that the token is consumed, he's not able to use it again.

    >>> browser.open(link)

    >>> for tag in get_feedback_messages(browser.contents):
    ...     print extract_text(tag)
    You reached this page probably because you followed a link received by
    email. That link was sent to confirm you have access to the email
    address it was sent to, but this confirmation was already concluded, so
    you don't need to do anything else.

It is now possible for David to log in with his new password.  He
logs out and then logs in again:

    >>> browser.open('http://launchpad.dev/+logout')
    >>> for tag in get_feedback_messages(browser.contents):
    ...     print extract_text(tag)
    You have been logged out

    >>> browser.getLink('Log in / Register').click()

    >>> browser.getControl(
    ...     'E-mail address:', index=0).value = 'david.allouche@canonical.com'
    >>> browser.getControl('Password').value = 'test2'
    >>> browser.getControl('Log In').click()

    >>> browser.url
    'http://launchpad.dev'

      >>> print extract_text(find_tag_by_id(browser.contents, 'logincontrol'))
      David Allouche...


== Teams do not have passwords ==

Teams do not have passwords, they cannot be reset.

    >>> browser.open('http://launchpad.dev/+forgottenpassword')
    >>> browser.getControl(name='email').value = 'support@ubuntu.com'
    >>> browser.getControl('Request Reset').click()

    >>> for tag in find_tags_by_class(browser.contents, 'error'):
    ...     print tag
    <div class="error">The email address <strong>support@ubuntu.com</strong>
    belongs to a team, and teams cannot log in to Launchpad.</div>


== Reactivating an account ==

Users can reactivate their account using the reset password feature.
Former-user deactivated his account after participating in an rather
vicious game of truth or dare. His name was renamed to clearly
state that his account was deactivated.

    >>> browser = setupBrowser()
    >>> browser.open('http://launchpad.dev/~former-user-deactivatedaccount')
    >>> browser.title
    'Former User does not use Launchpad'
    >>> div = find_tag_by_id(browser.contents, 'not-lp-user-or-team')
    >>> print extract_text(div)
    Former User does not use Launchpad.

Former User realises his life is incomplete without Launchpad. He
tries to login, but his password does not work anymore.

    >>> browser.getLink('Log in / Register').click()

    >>> browser.getControl(
    ...     'E-mail address:', index=0).value = 'former-user@canonical.com'
    >>> browser.getControl('Password').value = 'test3'
    >>> browser.getControl('Log In').click()
    >>> browser.title
    'Log in or register with Launchpad'

    >>> for tag in get_feedback_messages(browser.contents):
    ...     print extract_text(tag)
    The email address belongs to a deactivated account. Use the
    "Forgotten your password" link to reactivate it.

He requests a new password.

    >>> browser.getLink('Forgotten your password?').click()
    >>> browser.title
    'Need a new Launchpad password?'

    >>> browser.getControl(name='email').value = (
    ...     'former-user@canonical.com')
    >>> browser.getControl('Request Reset').click()

    >>> print extract_text(find_main_content(browser.contents).p)
    We have sent you an email with instructions to reset your password.

He retrieves the URL form the email opens the page in his browser.

    >>> to_addrs, link = get_addr_and_link_from_email()
    >>> to_addrs
    ['former-user@canonical.com']
    >>> link
    'http://launchpad.dev/token/...'

    >>> browser.open(link)
    >>> browser.url
    'http://launchpad.dev/token/.../+resetpassword'

Former User types his password twice to verify it and submits
it with the Continue button. He is happy to see his name is restored
in the URL.

    >>> browser.getControl(
    ...     name='field.email').value = 'former-user@canonical.com'
    >>> browser.getControl(name='field.password').value = 'test'
    >>> browser.getControl(name='field.password_dupe').value = 'test'
    >>> browser.getControl('Continue').click()

    >>> browser.title
    'Former User in Launchpad'
    >>> browser.url
    'http://launchpad.dev/~former-user'

    >>> for tag in get_feedback_messages(browser.contents):
    ...     print extract_text(tag)
    Welcome back to Launchpad.
    Your password has been reset successfully.

    >>> print find_tag_by_id(browser.contents, 'not-lp-user-or-team')
    None

