= Searching bugtasks with old statuses =

The BugWorkflow spec renames several bug statuses, but we need
bookmarks, etc., to keep working using the old status names. Instead
of simply returning the correct results, we will redirect the user
agent to the new location with a permanent redirect so it has an
opportunity to update bookmarks and so forth.

    >>> from canonical.launchpad.browser.bugtask import (
    ...     BugTaskSearchListingView, get_old_bugtask_status_redirect)
    >>> from canonical.launchpad.webapp.servers import LaunchpadTestRequest

    >>> from canonical.launchpad.interfaces import IDistributionSet
    >>> ubuntu = getUtility(IDistributionSet).getByName('ubuntu')

    >>> server_url = 'http://foobar/'
    >>> query_string = 'field.status%3Alist=Unconfirmed'
    >>> request = LaunchpadTestRequest(
    ...     SERVER_URL=server_url, QUERY_STRING=query_string)
    >>> view = BugTaskSearchListingView(ubuntu, request)

    >>> view.initialize()
    >>> view.request.response.getStatus()
    301
    >>> view.request.response.getHeader('Location')
    'http://foobar/?field.status%3Alist=New'

get_old_bugtask_status_redirect is the mapping function that converts
the old url to an updated one. Only the statuses 'Unconfirmed, 'Needs
Info' and 'Rejected' are converted.

    >>> from canonical.launchpad.webapp.uri import URI

    >>> uri = URI(
    ...     'http://somewhere/over/the/rainbow?'
    ...     'freddy=krueger&'
    ...     'field.status%3Alist=Unconfirmed&'
    ...     'field.status%3Alist=Needs+Info&'
    ...     'field.status%3Alist=Rejected&'
    ...     'field.status%3Alist=Fix+Committed&'
    ...     'sid=nancy'
    ...     )
    >>> converted_uri = get_old_bugtask_status_redirect(uri)
    >>> print converted_uri.host
    somewhere
    >>> print converted_uri.path
    /over/the/rainbow
    >>> print converted_uri.query.split('&')
    ['freddy=krueger',
     'field.status%3Alist=New',
     'field.status%3Alist=Incomplete',
     'field.status%3Alist=Invalid',
     'field.status%3Alist=Fix+Committed',
     'sid=nancy']

If the url does not contain any old statuses it should just return
None.

    >>> print get_old_bugtask_status_redirect(converted_uri)
    None
