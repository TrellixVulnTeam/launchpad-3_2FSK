Now No Privileges Person is still the Welsh translator for the PolyGlot
translation group, and they are the translation group for Ubuntu, which
we are going to set as having Restricted translations. This means that
No Privileges Person should be able to translate any strings in Ubuntu
to Welsh. In other languages, No Privileges Person should be warned that
he is not a designated translator.

    >>> browser.addHeader('Authorization', 'Basic no-priv@canonical.com:test')

    >>> admin_browser.open(
    ...     'http://translations.launchpad.dev/ubuntu/+changetranslators')

    >>> admin_browser.getControl(
    ...     'Translation Permission System').value = ['RESTRICTED']
    >>> admin_browser.getControl('Change').click()
    >>> print admin_browser.url
    http://translations.launchpad.dev/ubuntu/+changetranslators

    >>> for tag in find_tags_by_class(
    ...     admin_browser.contents, 'informational message'):
    ...     print tag.renderContents()
    Updated on ...

The translation group does not assign anyone to tend to the Southern
Sotho translation, so for that language, No Privileges can't even make
suggestions.

    >>> def find_translation_input_label(contents):
    ...     """Find first "New suggestion:" or "New translation:" label."""
    ...     labels = find_tags_by_class(contents, 'translation-input-label')
    ...     if not labels:
    ...         return None
    ...     else:
    ...         return labels[0].renderContents()

    >>> def get_detail_tag(browser, tag_class):
    ...     """Find tag of given class in translation page."""
    ...     tag = find_tag_by_id(browser.contents, tag_class)
    ...     if not tag:
    ...         return None
    ...     else:
    ...         return tag.renderContents()

    >>> def print_upload_option(contents):
    ...     """Print items in navigation menu on given page."""
    ...     found = False
    ...     for item in find_tags_by_class(contents, 'menu-link-upload'):
    ...         print item.renderContents()
    ...         found = True
    ...     if not found:
    ...         print "Not found."

    >>> browser.open(
    ...     'http://translations.launchpad.dev/'
    ...     'ubuntu/hoary/+source/evolution/'
    ...     '+pots/evolution-2.2/st/+translate')

    >>> print find_translation_input_label(browser.contents)
    None

    >>> managers = get_detail_tag(browser, 'translation-managers')
    >>> print managers
    This translation is managed by <...> translation group
    <...>polyglot<...>.

    >>> print get_detail_tag(browser, 'translation-access')
    There is nobody to manage translation into this particular language.  If
    you are interested in working on it, please contact the translation group.

    >>> print_upload_option(browser.contents)
    Not found.

The Polyglot translation group now assigns a Southern Sotho translation
team, of which No Privileges however is not a member.

    >>> admin_browser.open(
    ...     'http://translations.launchpad.dev/+groups/polyglot/+appoint')
    >>> admin_browser.getControl('Language').value=['st']
    >>> admin_browser.getControl('Translator').value='name21'
    >>> admin_browser.getControl('Add').click()

No Privileges Person can now enter text, but the page does warn that it
will only accept suggestions.

    >>> browser.open(
    ...     'http://translations.launchpad.dev/'
    ...     'ubuntu/hoary/+source/evolution/'
    ...     '+pots/evolution-2.2/st/+translate')

    >>> print find_translation_input_label(browser.contents)
    New suggestion:

    >>> managers = get_detail_tag(browser, 'translation-managers')
    >>> print managers
    This translation is managed by <...>...Hoary Gnome Team<...>, assigned
    by <...>polyglot<...>.

The ability to upload files is restricted to those with full edit
privileges.

    >>> print_upload_option(browser.contents)
    Not found.

The translation-managers detail may use ", and" to separate items, but
since there is only one item in this case, we don't see that.

    >>> import re
    >>> print re.search('\band\b', managers)
    None

    >>> print get_detail_tag(browser, 'translation-access')
    Your suggestions will be held for review...

In Welsh, No Privileges Person does have the ability to edit directly,
as well as to upload files.

    >>> def find_no_translation_marker(contents):
    ...     """Find first "no translation yet" marker in contents."""
    ...     markers = find_tags_by_class(contents, 'no-translation')
    ...     if not markers:
    ...         return None
    ...     else:
    ...         return markers[0].renderContents()

    >>> browser.open(
    ...     'http://translations.launchpad.dev/'
    ...     'ubuntu/hoary/+source/evolution/'
    ...     '+pots/evolution-2.2/cy/+translate')
    >>> print_upload_option(browser.contents)
    <...Upload a file...

No Privileges person is going to translate here.  Message number 137 is
not yet translated.

    >>> browser.open(
    ...     'http://translations.launchpad.dev/'
    ...     'ubuntu/hoary/+source/evolution/'
    ...     '+pots/evolution-2.2/cy/8/+translate')

    >>> print get_detail_tag(browser, 'translation-managers')
    This translation is managed by <...No Privileges Person<...>, assigned by
    <...>polyglot<...>.

    >>> print get_detail_tag(browser, 'translation-access')
    You have full access to this translation.

    >>> print find_no_translation_marker(browser.contents)
    (no translation yet)

Now, we need to show that it is translated after a post. Let's go ahead and
POST and see that all goes well:

    >>> browser.getControl(
    ...     name='msgset_137_cy_translation_0_radiobutton').value = [
    ...         'msgset_137_cy_translation_0_new']
    >>> msg_137 = browser.getControl(name='msgset_137_cy_translation_0_new')
    >>> msg_137.value = 'evolution minikaart'

    >>> browser.getControl(name='submit_translations').click()
    >>> print browser.url
    http://.../ubuntu/.../+pots/evolution-2.2/cy/9/+translate

And finally, let's take a look again, and we see that the translation
has been added.

    >>> browser.getLink('Previous').click()
    >>> print find_no_translation_marker(browser.contents)
    None

    >>> print find_main_content(browser.contents).renderContents()
    <...evolution minikaart...

