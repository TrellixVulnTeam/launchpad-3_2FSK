= PO file alternative language selection =

The translation forms allow the user to select an alternative language.  The
form will suggest translations from this alternative language as well as those
in the form's main language.

    >>> def get_alternative_languages_widget(browser):
    ...     """Check and return alternative languages widget offered on page.
    ...
    ...     Inspects the browser's currently opened page, which must be a
    ...     +translate page.  Also verifies that English is never offered as
    ...     an alternative.  We translate from English, but never to English
    ...     (except in variants like 'en_AU').
    ...     """
    ...     if not browser.url.endswith('/+translate'):
    ...         raise AssertionError("Not a +translate page: " + browser.url)
    ...     try:
    ...         browser.getControl('English (en)', index=0).selected
    ...         raise AssertionError(
    ...             "Looking up English among alternative languages "
    ...             "should have failed, but didn't.")
    ...     except LookupError:
    ...         pass
    ...
    ...     return browser.getControl(
    ...         name='field.alternative_language')

An anonymous user is offered all available languages except English for
alternative suggestions.  We do not offer suggestions from standard English
since that is the one language we always translate from, never to.

    >>> translate_page = (
    ...     'http://launchpad.dev/ubuntu/hoary/+source/evolution/'
    ...     '+pots/evolution-2.2/es/+translate')
    >>> anon_browser.open(translate_page)
    >>> print anon_browser.title
    Translating evolution-2.2 in Ubuntu Hoary package "evolution" into Spanish
    >>> get_alternative_languages_widget(anon_browser).displayOptions[:4]
    ['(no value)', 'Abkhazian (ab)', 'Achinese (ace)', 'Acoli (ach)']

The same goes for a user who has no preferred languages set.

    >>> user_browser.addHeader(
    ...     'Authorization', 'Basic jeff.waugh@ubuntulinux.com:jdub')
    >>> user_browser.open(translate_page)
    >>> get_alternative_languages_widget(user_browser).displayOptions[:4]
    ['(no value)', 'Abkhazian (ab)', 'Achinese (ace)', 'Acoli (ach)']

Carlos, however, has configured his preferred languages.  Besides English he
 speaks Spanish and Catalan.

    >>> browser.addHeader('Authorization', 'Basic carlos@canonical.com:test')

When Carlos looks at the same translation page, only Spanish and Catalan are
offered.  No alternative language is selected initially.

    >>> browser.open(translate_page)
    >>> dropdown = get_alternative_languages_widget(browser)
    >>> dropdown.displayOptions
    ['(no value)', 'Catalan (ca)', 'Spanish (es)']

    >>> dropdown.value
    ['']


=== Suggestions ===

Carlos also visits the Catalan equivalent of the same translation page, using
Spanish as an alternative language.

    >>> import re
    >>> browser.open(re.sub('/es/', '/ca/', translate_page))
    >>> browser.getControl('Spanish (es)').selected = True
    >>> browser.getControl(name='select_alternate_language').click()

The Spanish translations now show up as suggestions.  For example, where
"cards" might translate to Catalan as "targetas," the Spanish equivalent is
"tarjetas."

    >>> print extract_text(find_main_content(browser.contents))
    Template "evolution-2.2" in Ubuntu Hoary package "evolution"
    Translating into Catalan
    ...
    English: cards
    ...
    Current Catalan: (no translation yet)
    Suggestions:
    ...
    tarjetas
    Spanish
    ...

Carlos may also attempt to request a page with suggestions from another
language that is not in his preferred-languages list.  He may have clicked on
a link produced by someone else, or generate or edit his URLs, or simply be
coming from a cached page or outdated bookmark.  In this case the language is
Japanese (ja).

    >>> browser.open(translate_page +
    ...     "?field.alternative_language=ja&field.alternative_language-empty-marker=1&select_alternate_language=Change")

This leads to a subtle technical problem as the alternative-language dropdown
would have to be initialized to a language that wasn't in its list of items.
To avoid that, the page omits the suggestions.  It does warn Carlos that the
suggestions will be shown only if he adds Japanese to his preferred languages
first.

    >>> for message in get_feedback_messages(browser):
    ...     print message
    Not showing suggestions from selected alternative language Japanese (ja).
    If you wish to see suggestions from this language, add it to your
    preferred languages first.

This distinction between alternative languages from the user's preferred set
and other alternative languages does not exist, of course, if no preferred
languages are defined.  Suggestions just work for anonymous users.

    >>> anon_browser.open(re.sub('/es/', '/ca/', translate_page))
    >>> anon_browser.getControl('Spanish (es)').selected = True
    >>> anon_browser.getControl(name='select_alternate_language').click()

    >>> print extract_text(find_main_content(anon_browser.contents))
    Template "evolution-2.2" in Ubuntu Hoary package "evolution"
    Browsing Catalan translation
    ...
    English: cards
    ...
    Current Catalan: (no translation yet)
    Suggestions:
    ...
    tarjetas
    Spanish
    ...


== Filtering & Navigation ==

The translate page also allows the user to filter the translatable strings to
show only the strings he is interested in.

    >>> browser.getControl('Show').displayOptions
    ['all', 'untranslated', 'need review', 'translated', 
     'with new suggestions', 'changed in Launchpad']

Let's do a translation submit with an alternative language selected
to see whether the final url is correct. We don't need to change any
translation, just a submitting is enough. We can also set the filter
to display only the untranslated strings.

    >>> browser.open(translate_page)
    >>> browser.getControl('Catalan (ca)').selected = True
    >>> browser.getControl(name='select_alternate_language').click()
    >>> browser.getControl('untranslated').selected = True
    >>> browser.getControl('Filter').click()
    >>> browser.url
    '...+translate?field.alternative_language=ca...show=untranslated'

The navigation indicates are seeing only the first page of results.

    >>> navigation = find_tags_by_class(browser.contents, 'results')[0].td
    >>> print extract_text(navigation)
    1 ... 10  of 13 results ...

We can see the next page of results using the 'Save & Continue' button.

    >>> browser.getControl('Save & Continue').click()
    >>> navigation = find_tags_by_class(browser.contents, 'results')[0].td
    >>> print extract_text(navigation)
    11 ... 13  of 13 results ...

If we specify more than one alternative language in the URL, we get an
UnexpectedFormData exception:

    >>> browser.open(
    ...     'http://launchpad.dev/ubuntu/hoary/+source/evolution/'
    ...     '+pots/evolution-2.2/es/+translate'
    ...     '?field.alternative_language=ca&field.alternative_language=aj')
    Traceback (most recent call last):
    ...
    UnexpectedFormData: You specified...

