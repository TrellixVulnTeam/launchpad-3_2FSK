= Distro Series Binary Packages =

A DistroSeriesBinaryPackage is really a BinaryPackageName for a particular
DistroSeries. That is, it doesn't represent a particular package release or
architecture, but is a reference point for obtaining particular package
releases and/or architectures for a given binary package name within a
specific distribution series.

    >>> from zope.component import getUtility
    >>> from lp.soyuz.model.binarypackagename import (
    ...     BinaryPackageName)
    >>> from canonical.launchpad.interfaces import IDistributionSet
  
A DistroSeriesBinaryPackage is normally accessed via a Distro
Series:

    >>> ubuntu = getUtility(IDistributionSet)['ubuntu']
    >>> firefox_bin_name =  BinaryPackageName.selectOneBy(
    ...     name="mozilla-firefox")
    >>> firefox_dsbp = ubuntu['warty'].getBinaryPackage(firefox_bin_name)

It has a name, summary, description and title:

    >>> firefox_dsbp.name
    u'mozilla-firefox'

    >>> firefox_dsbp.summary
    u'Mozilla Firefox Web Browser'
    
    >>> firefox_dsbp.description
    u'Mozilla Firefox Web Browser is .....'

    >>> firefox_dsbp.title
    u'Binary package "mozilla-firefox" in ubuntu warty'

    >>> firefox_dsbp.distribution.name
    u'ubuntu'

It provides the current publishings for the binary package in the
distro series (ordered by architecture then datecreated):

    >>> for published in firefox_dsbp.current_publishings:
    ...     print "%s %s in %s" % (
    ...         published.distroarchseriesbinarypackagerelease.name,
    ...         published.distroarchseriesbinarypackagerelease.version,
    ...         published.distroarchseries.architecturetag)
    mozilla-firefox 0.9 in hppa
    mozilla-firefox 0.9 in i386
    mozilla-firefox 1.0 in i386

The last published binary can also be accessed directly:

    >>> last_published = firefox_dsbp.last_published
    >>> "%s %s" % (last_published.name, last_published.version)
    u'mozilla-firefox 1.0'

It also provides access to the last DistroSeriesSourcePackageRelease:

    >>> firefox_dsbp.last_sourcepackagerelease.title
    u'iceweasel 1.0 (source) in ubuntu warty'

If a DistroSeriesBinaryPackage doesn't have a DistroSeriesPackageCache,
then the summary and description fields reflect the situation:

    >>> firefox_hoary_dsbp = ubuntu['hoary'].getBinaryPackage(
    ...     firefox_bin_name)
    >>> firefox_hoary_dsbp.summary
    u'No summary available for mozilla-firefox in ubuntu hoary.'
    >>> firefox_hoary_dsbp.description
    u'No description available for mozilla-firefox in ubuntu hoary.'

If a DistroSeriesBinaryPackage doesn't have a publishing history (for
whatever reason), then last_published returns None.

    >>> firefox_hoary_dsbp.current_publishings
    []
    
    >>> print firefox_hoary_dsbp.last_published
    None

In this case, the last DistroSeriesSourcePackageRelease will also be None:

    >>> print firefox_hoary_dsbp.last_sourcepackagerelease
    None

