= The Google stub webservice =

The Google stub web service is a stand-alone process that returns
XML documents for a pre-determined set of URLs.

The URL mapping is specified in a stand-alone text file, whose path
comes from the current configuration.

    >>> from canonical.config import config
    >>> xml_mapfile = config.google_test_service.mapfile

    # Fetch our URL-to-XML file mapping table.
    >>> from canonical.launchpad.testing.googletestservice import (
    ...     url_to_xml_map)
    >>> routes = url_to_xml_map(xml_mapfile)

    >>> routes

    >>> for key in sorted(routes.keys()):
    ...     print key, routes[key]
    * ...
    /custom?... googlesearchservice...xml
    /custom?... googlesearchservice...xml


The service is accessible via a local URL, also pulled from the
config.  Accessing the default URL will return the XML file specified
as the default route, '*'.

    >>> from os.path import join
    >>> response_dir = config.google_test_service.canned_response_directory
    >>> def get_xml_for_url(url):
    ...     fname = routes[url]
    ...     fullname = join(response_dir, fname)
    ...     return file(fullname).read()

    >>> default_xml = get_xml_for_url('*')

    # Grab a Zope testbrowser that talks across the network.
    >>> from zope.testbrowser.browser import Browser
    >>> test_url = config.google.site
    >>> browser.open(join(test_url, 'something'))

    >>> response = browser.contents
    >>> len(response) is not 0
    True
    >>> response == default_xml
    True

The returned content-type should UTF-8 encoded XML.

    >>> browser.headers['content-type']
    'text/xml; charset=UTF-8'

Accessing a specific key returns the appropriate XML file:

    >>> url = '/search?foo'
    >>> xml_for_path = get_xml_for_url(path)
    >>> browser.open(join(test_url, path))

    >>> browser.headers['content-type']
    'text/xml; charset=UTF-8'

    >>> browser.contents == xml_for_path
    True
