= BuildFarm page =

The BuildFarm page is accessible from the root page, although we don't
link to it yet because we are not yet sure of the benefits of doing
this, since the audience of this page is still restricted.

    >>> anon_browser.open('http://launchpad.dev/+builds')

The BuildFarm contains a list of all builders registered in Launchpad
ordered by architecture and a short summary about what they are
processing.

    >>> print extract_text(find_main_content(anon_browser.contents))
    Build machines for Launchpad
    Builder        Architecture Owner                   Status
    bob Automatic  386          Launchpad Buildd Admins Not available
    frog Automatic 386 Virtual  Launchpad Buildd Admins Not available
    Generated at ...

This page also presents a portlet exposing the number of builds waiting
in queue for each supported architecture.

    >>> def print_depth(contents, queue_name):
    ...     portlet = find_portlet(contents, queue_name)
    ...     for td in portlet.fetch('td'):
    ...         print extract_text(td)

    >>> print_depth(anon_browser.contents, 'Build queue depth')
    i386     1

From this page, users with the appropriate permission can register new
builders.

    >>> admin_browser.open("http://launchpad.dev/+builds/+index")
    >>> admin_browser.getLink("Add builder").click()
    >>> print admin_browser.title
    Register a new build machine

While anonymous users are not given the option to register a new build
and are not permitted if they go directly to the URL.

    >>> anon_browser.open("http://launchpad.dev/+builds/+index")
    >>> anon_browser.getLink("Add builder")
    Traceback (most recent call last):
    ...
    LinkNotFoundError

    >>> anon_browser.open("http://launchpad.dev/+builds/+new")
    Traceback (most recent call last):
    ...
    Unauthorized: ..., 'launchpad.Admin')
