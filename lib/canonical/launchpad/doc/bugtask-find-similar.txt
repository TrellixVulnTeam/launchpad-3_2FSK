= Finding Similar Bugs =

The normal bug search requires all the specified keywords to be present
in the found bugs. This works quite well in general, but not when you
want to find bugs similar to a given bug summary when filing a new bug;
then the search is too restrictive.

To address this use case, IBugTask.findSimilar can be used, which uses
nl_phrase_search in order to construct a suitable search string.

It doesn't make much sense to find bugs similar to an empty string, so
no results will be returned.

    >>> from canonical.launchpad.interfaces import (
    ...     IBugTaskSet, IPersonSet, IProductSet)
    >>> firefox = getUtility(IProductSet).getByName('firefox')
    >>> sample_person = getUtility(IPersonSet).getByEmail('test@canonical.com')
    >>> similar_bugs = getUtility(IBugTaskSet).findSimilar(
    ...     sample_person, '', product=firefox)
    >>> similar_bugs.count()
    0

Also, of course, if the given summary isn't similar to any other bugs,
no results are returned.


    >>> similar_bugs = getUtility(IBugTaskSet).findSimilar(
    ...     sample_person, 'nosimilarbugs', product=firefox)
    >>> similar_bugs.count()
    0

Now, let's enter a real bug summary, which doesn't match any other
exactly. We can see that it still manages to find a bug.

    >>> similar_bugs = getUtility(IBugTaskSet).findSimilar(
    ...     sample_person, "Can't display SVG", product=firefox)
    >>> for bugtask in similar_bugs:
    ...     print bugtask.bug.title
    Firefox does not support SVG


Above we specified that only bugs against Firefox should be searched. If
we specify Evolution, no bugs will be returned, since no similar bugs
are found there.

    >>> evolution = getUtility(IProductSet).getByName('evolution')
    >>> similar_bugs = getUtility(IBugTaskSet).findSimilar(
    ...     sample_person, "Can't display SVG", product=evolution)
    >>> similar_bugs.count()
    0

We can also search for distribution bugs:


    >>> from canonical.launchpad.interfaces import IDistributionSet
    >>> ubuntu = getUtility(IDistributionSet).getByName('ubuntu')
    >>> similar_bugs = getUtility(IBugTaskSet).findSimilar(
    ...     sample_person, "Thunderbird chrashes when displaying SVG",
    ...     distribution=ubuntu)
    >>> for bugtask in similar_bugs:
    ...     print bugtask.bug.title
    Firefox does not support SVG
    Thunderbird crashes


As well as limiting it to a specific source package:


    >>> ubuntu_thunderbird = ubuntu.getSourcePackage('thunderbird')
    >>> similar_bugs = getUtility(IBugTaskSet).findSimilar(
    ...     sample_person, "Can't display SVG",
    ...     distribution=ubuntu,
    ...     sourcepackagename=ubuntu_thunderbird.sourcepackagename)
    >>> similar_bugs.count()
    0

Only bugs that the user has access to view will be searched. If we set
the Firefox bug to private, and repeat the search as a user who isn't
allowed to view it, only the Thunderbird bug will be returned this time.

    >>> from canonical.launchpad.interfaces import IBugSet
    >>> from canonical.launchpad.ftests import syncUpdate
    >>> login('test@canonical.com')
    >>> firefox_svg_bug = getUtility(IBugSet).get(1)
    >>> firefox_svg_bug.private = True
    >>> syncUpdate(firefox_svg_bug)

    >>> from canonical.launchpad.helpers import check_permission
    >>> login('no-priv@canonical.com')
    >>> check_permission('launchpad.View', firefox_svg_bug)
    False
    >>> no_priv = getUtility(ILaunchBag).user
    >>> similar_bugs = getUtility(IBugTaskSet).findSimilar(
    ...     no_priv, "Thunderbird chrashes when displaying SVG",
    ...     distribution=ubuntu)
    >>> for bugtask in similar_bugs:
    ...     print bugtask.bug.title
    Thunderbird crashes
