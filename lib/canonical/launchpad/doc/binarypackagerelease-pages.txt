= BinaryPackageRelease Pages =

The view class for IBinaryPackageRelease is exposed via a traversal of
a IBuild, i.e, by traversing a 'name' in an IBuild you can access an
raw (may be unpublished) IBinaryPackageRelease.

  >>> from zope.component import getUtility
  >>> from zope.component import queryView
  >>> from zope.publisher.browser import TestRequest
  >>> from canonical.launchpad.database import BinaryPackageRelease

  >>> pmount_bin = BinaryPackageRelease.get(15)
  >>> pmount_bin.name
  u'pmount'
  >>> pmount_bin.version
  u'0.1-1'

Get a "mock" request:
  >>> mock_form = {}
  >>> request = TestRequest(form=mock_form)

Let's instantiate the view for +index:

  >>> pmount_view = queryView(pmount_bin, "+index", request)

Main functionality of this class is to provide abstracted model of the
stored package relationships. They are provided as a
IPackageRelationshipSet. (see package-relationship.txt).


  >>> pmount_deps = pmount_view.depends()

  >>> from zope.interface.verify import verifyObject
  >>> from canonical.launchpad.interfaces import IPackageRelationshipSet

  >>> verifyObject(IPackageRelationshipSet, pmount_deps)
  True

Let's check the rendering parameters for an specific dep:

Not that the 'url' attribute points to the IDistroArchReleaseBinaryPackage
for 'at'.

Besides that, 'signal' can be null regarding the given relationship,
it automatically means that 'version' will be an empty string.

Another possible case is the binary package mentioned in
package relationship isn't present in the DistroArchRelease in
question. In this case 'url' will be None, which indicates no link
should be rendered for this dependency.

  >>> for dep in pmount_deps:
  ...    dep.name, dep.signal, dep.version, dep.url
  ('at', '>=', '3.14156', u'http://launchpad.dev/ubuntu/hoary/i386/at')
  ('linux-2.6.12', None, '', u'http://launchpad.dev/ubuntu/hoary/i386/linux-2.6.12')
  ('tramp-package', None, '', None)


Other relationship groups use the same mechanism.

