= Message Holds =

When messages are posted to mailing lists, they may sometimes get held for
team administrator approval.  This happens for example, when the sender of the
message is not a member of the mailing list and their personal standing in
Launchpad is unknown.

    >>> from canonical.launchpad.ftests import mailinglists_helper
    >>> team, mailing_list = mailinglists_helper.new_team('test-one', True)


== Initial hold ==

When the message is initially held for approval, a message object is first
created.

    >>> from canonical.launchpad.interfaces import IMessageSet
    >>> message_set = getUtility(IMessageSet)
    >>> message = message_set.fromEmail("""\
    ... From: foo.bar@canonical.com
    ... To: test-one@lists.launchpad.dev
    ... Subject: My first test
    ... Message-ID: <first-post>
    ... Date: Fri, 01 Aug 2008 01:08:59 -0000
    ...
    ... This is my first post!
    ... """)

Then this message is inserted into the approval queue.

    >>> held_message = mailing_list.holdMessage(message)

The new hold has several important pieces of information, such as the message
id of the held message...

    >>> print held_message.message_id
    <first-post>

...the person who posted the message...

    >>> print held_message.posted_by.displayname
    Foo Bar

...and the date it was posted.

    >>> print held_message.posted_date
    XXX

The hold record contains a reference to the mailing list that the message was
posted to....

    >>> print held_message.mailing_list.team.displayname
    Test One

...and to the IMessage object in the database.

    >>> held_message.posted_message == message
    True

The record also contains the status of this held message.

    >>> held_message.status
    <DBItem New...

Because this message has not yet been approved, it has no disposition
information.

    >>> print held_message.disposed_by
    None
    >>> print held_message.disposal_date
    None


== Approving the message ==

Foo Bar is the team owner who reviews the held message, and he decides that it
is appropriate for the mailing list, so he approves it.

    >>> foobar = mailing_list.team.teamowner
    >>> held_message.approve(foobar)

This sets the status of the hold to APPROVAL_PENDING because Mailman still
needs to see this approval.

    >>> held_message.status
    <DBItem APPROVAL_PENDING...

The message has been disposed by Foo Bar on today's date.

    >>> print held_message.disposed_by.displayname
    Foo Bar
    >>> held_message.disposal_date is not None
    True


== Rejecting the message ==

Held messages can also be rejected.

    >>> message = message_set.fromEmail("""\
    ... From: foo.bar@canonical.com
    ... To: test-one@lists.launchpad.dev
    ... Subject: My second test
    ... Message-ID: <second-post>
    ... Date: Fri, 01 Aug 2008 01:09:00 -0000
    ...
    ... This is my second post!
    ... """)
    >>> held_message = mailing_list.holdMessage(message)
    >>> held_message.reject(foobar)

    >>> print held_message.message_id
    <second-post>
    >>> held_message.status
    <DBItem REJECTION_PENDING...
    >>> print held_message.disposed_by.displayname
    Foo Bar
    >>> held_message.disposal_date is not None
    True


== Message sets ==

It's convenient to be able to request all of the new messages, or all messages
that are pending approval or rejection.  The IMessageApprovalSet interface
provides these conveniences.

A few more messages are held for approval.

    >>> message = message_set.fromEmail("""\
    ... From: foo.bar@canonical.com
    ... To: test-one@lists.launchpad.dev
    ... Subject: My third test
    ... Message-ID: <third-post>
    ... Date: Fri, 01 Aug 2008 01:09:01 -0000
    ...
    ... This is my third post!
    ... """)
    >>> held_message = mailing_list.holdMessage(message)

    >>> message = message_set.fromEmail("""\
    ... From: foo.bar@canonical.com
    ... To: test-one@lists.launchpad.dev
    ... Subject: My fourth test
    ... Message-ID: <fourth-post>
    ... Date: Fri, 01 Aug 2008 01:09:02 -0000
    ...
    ... This is my fourth post!
    ... """)
    >>> held_message = mailing_list.holdMessage(message)

    >>> from canonical.launchpad.interfaces import IMessageApprovalSet
    >>> hold_set = getUtility(IMessageApprovalSet)
    >>> from operator import itemgetter
    >>> def print_messages(status):
    ...     messages = hold_set.getHeldMessagesWithStatus(status)
    ...     for message in sorted(messages, key=itemgetter('message-id')):
    ...         print message['subject']

Here are all the messages pending approval...

    >>> print_messages(PostedMessageStatus.APPROVAL_PENDING)
    My first test

...and all the messages pending rejection...

    >>> print_messages(PostedMessageStatus.REJECTION_PENDING)
    My second test

...and all the messages where are waiting for any disposition.

    >>> print_messages(PostedMessageStatus.NEW)
    My fourth post
    My third post
