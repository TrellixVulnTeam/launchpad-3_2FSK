The POTemplate edit page lets us to edit basic aspect of that object. Only
product owners, Rosetta Experts or a Launchpad admin are able to use it.

An unpriviledged user cannot reach this page.

  >>> browser = setupBrowser(auth='Basic no-priv@canonical.com:test')
  >>> browser.open(
  ...     'http://translations.launchpad.dev/evolution/trunk/+pots/'
  ...     'evolution-2.2/+edit')
  Traceback (most recent call last):
  ...
  Unauthorized:...

In fact, the "Change details" option won't even appear for them.

  >>> browser.open(
  ...     'http://translations.launchpad.dev/evolution/trunk/+pots/'
  ...     'evolution-2.2/')
  >>> browser.getLink('Change details').click()
  Traceback (most recent call last):
  ...
  LinkNotFoundError
  

On the other hand, Rosetta expert (Jordi) can reach the POTemplate edit
page.

  >>> browser = setupBrowser(auth='Basic jordi@ubuntu.com:test')
  >>> browser.open(
  ...     'http://translations.launchpad.dev/evolution/trunk/+pots/'
  ...     'evolution-2.2/')
  >>> browser.getLink('Change details').click()
  >>> print browser.url
  http://translations.launchpad.dev/evolution/trunk/+pots/evolution-2.2/+edit

  >>> browser = setupBrowser(auth='Basic test@canonical.com:test')
  >>> browser.open(
  ...     'http://translations.launchpad.dev/evolution/trunk/+pots/'
  ...     'evolution-2.2/+edit')
  >>> print browser.url
  http://translations.launchpad.dev/evolution/trunk/+pots/evolution-2.2/+edit

We should be sure that the edit form get only the non admin fields.

  >>> browser.getControl(name='field.name').value
  Traceback (most recent call last):
  ...
  LookupError:...
  >>> browser.getControl(name='field.description').value
  'Template for evolution in hoary'
  >>> browser.getControl(name='field.header').value
  Traceback (most recent call last):
  ...
  LookupError:...
  >>> browser.getControl(name='field.iscurrent').value
  Traceback (most recent call last):
  ...
  LookupError:...
  >>> browser.getControl(name='field.owner').value
  'rosetta-admins'
  >>> browser.getControl(name='field.productseries').value
  Traceback (most recent call last):
  ...
  LookupError:...
  >>> browser.getControl(name='field.distroseries').value
  Traceback (most recent call last):
  ...
  LookupError:...
  >>> browser.getControl(name='field.sourcepackagename').value
  Traceback (most recent call last):
  ...
  LookupError:...
  >>> browser.getControl(name='field.sourcepackageversion').value
  Traceback (most recent call last):
  ...
  LookupError:...
  >>> browser.getControl(name='field.binarypackagename').value
  Traceback (most recent call last):
  ...
  LookupError:...
  >>> browser.getControl(name='field.languagepack').value
  Traceback (most recent call last):
  ...
  LookupError:...
  >>> browser.getControl(name='field.path').value
  Traceback (most recent call last):
  ...
  LookupError:...

And that we are able to POST it.

  >>> browser.getControl(name='field.description').value = u'foo'
  >>> browser.getControl('Change').click()
  >>> print browser.url
  http://translations.launchpad.dev/evolution/trunk/+pots/evolution-2.2

And the changed value is stored.

  >>> browser.open(
  ...     'http://translations.launchpad.dev/evolution/trunk/+pots/'
  ...     'evolution-2.2/+edit')
  >>> browser.getControl(name='field.description').value
  'foo'


== Distribution templates ==

For distributions, we assume a tighter relationship and a certain amount
of trust between the distro and its chosen translation group.

    >>> from zope.component import getUtility
    >>> from canonical.launchpad.interfaces.launchpad import (
    ...     ILaunchpadCelebrities)

    >>> ubuntu = getUtility(ILaunchpadCelebrities).ubuntu
    >>> group_owner = factory.makePerson(
    ...     email='xyz@example.com', password='test')
    >>> ubuntu.translationgroup = factory.makeTranslationGroup(
    ...     owner=group_owner)

The owner of the distribution's translation group gets edit access to
the distribution's templates.

    >>> template_page = (
    ...     'http://translations.launchpad.dev/evolution/trunk/+pots/'
    ...     'evolution-2.2')
    >>> group_owner_browser = setupBrowser(auth='Basic xyz@example.com:test')
    >>> group_owner_browser.open(template_page)
    >>> group_owner_browser.getLink('Change details').click()

Naturally, once there, the group owner can change fields there and
submit the form successfully.

    >>> group_owner_browser.getControl('field.priority').value = '321'
    >>> group_owner_browser.getControl('Change').click()
    >>> group_owner_browser.url == template_page
