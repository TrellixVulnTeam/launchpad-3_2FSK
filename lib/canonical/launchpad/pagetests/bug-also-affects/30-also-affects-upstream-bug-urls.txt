When adding a bug watch together with a new bugtask, you have to enter
the URL of the remote bug.

    >>> user_browser.open(
    ...    'http://launchpad.dev/firefox/+bug/4/+choose-affected-product')
    >>> user_browser.getControl('Project').value = 'gnome-terminal'
    >>> user_browser.getControl('Continue').click()
    >>> user_browser.url
    'http://bugs.launchpad.dev/firefox/+bug/4/+add-affected-product?field.product=gnome-terminal'


    >>> user_browser.getControl('URL').value = (
    ...     u'http://bugzilla.gnome.org/bugs/show_bug.cgi?id=42')
    >>> user_browser.getControl('Indicate bug in GNOME Terminal').click()
    >>> user_browser.url
    'http://bugs.launchpad.dev/gnome-terminal/+bug/4'

    >>> bug_watches = find_portlet(user_browser.contents, 'Remote bug watches')
    >>> for li in bug_watches('li'):
    ...     print li.findAll('a')[1].renderContents()
    gnome-bugzilla #42

It's possible to supply an HTTPS URL, even though the bug tracker's
base URL is HTTP.

    >>> user_browser.open(
    ...  'http://launchpad.dev/firefox/+bug/4/+choose-affected-product')
    >>> user_browser.getControl('Project').value = 'netapplet'
    >>> user_browser.getControl('Continue').click()
    >>> user_browser.url
    'http://bugs.launchpad.dev/firefox/+bug/4/+add-affected-product?field.product=netapplet'

    >>> user_browser.getControl('URL').value = (
    ...     u'https://bugzilla.gnome.org/bugs/show_bug.cgi?id=84')
    >>> user_browser.getControl('Indicate bug').click()
    >>> user_browser.url
    'http://bugs.launchpad.dev/netapplet/+bug/4'

The URL was automatically converted to HTTP:

    >>> bug_watches = find_portlet(user_browser.contents, 'Remote bug watches')
    >>> for li in bug_watches('li'):
    ...     print li.findAll('a')[1]['href']
    http://bugzilla.gnome.org/bugs/show_bug.cgi?id=42
    http://bugzilla.gnome.org/bugs/show_bug.cgi?id=84


If the URL can't be recognised (i.e., we don't even know what bug
tracker type it is), an error message is displayed.

    >>> user_browser.open(
    ...    'http://launchpad.dev/firefox/+bug/4/+choose-affected-product')
    >>> user_browser.getControl('Project').value = 'alsa-utils'
    >>> user_browser.getControl('Continue').click()
    >>> user_browser.url
    'http://bugs.launchpad.dev/firefox/+bug/4/+add-affected-product?field.product=alsa-utils'

    >>> user_browser.getControl('URL').value = u'http://bugs.unknown/42'
    >>> user_browser.getControl('Indicate bug in alsa-utils').click()
    >>> user_browser.url
    'http://bugs.launchpad.dev/firefox/+bug/4/+add-affected-product'

    >>> for message in find_tags_by_class(user_browser.contents, 'message'):
    ...     print message.renderContents()
    There is 1 error.
    Launchpad doesn't know what kind of bug tracker this URL is pointing at.

If the URL can be recognised as a valid bug URL, but no such tracker is
registered in Launchpad, the user will be prompted to register it first.

    >>> user_browser.getControl('URL').value = u"http://new.trac/ticket/42"
    >>> user_browser.getControl('Indicate bug in alsa-utils').click()
    >>> user_browser.url
    'http://bugs.launchpad.dev/firefox/+bug/4/+add-affected-product'

    >>> for message in find_tags_by_class(user_browser.contents, 'message'):
    ...     print message.renderContents()
    There is 1 error.
    The bug tracker at http://new.trac/ isn't registered in Launchpad. To register it now, please select 'Register bugtracker?' (below) and submit again.

Let's selelect the `Register bugtracker?` checkbox and submit again,
the bugtracker will be automatically registered, and the bug watch
will be assigned using the newly registered bugtracker.

    >>> user_browser.getControl(name='field.register_bugtracker').value = True
    >>> user_browser.getControl('Indicate bug in alsa-utils').click()

The bugtracker is now registered, the bug watch is linked, and we're
redirected to the bug's page.

    >>> user_browser.url
    'http://bugs.launchpad.dev/alsa-utils/+bug/4'

The bug tracker and bug watch were added. We can see that the bugtracker
has a special name, starting with 'auto-', to indicate that it was
registered automatically.

    >>> bug_watches = find_portlet(user_browser.contents, 'Remote bug watches')
    >>> for li in bug_watches('li'):
    ...     print li.findAll('a')[1].renderContents()
    gnome-bugzilla #42
    gnome-bugzilla #84
    auto-new.trac #42

