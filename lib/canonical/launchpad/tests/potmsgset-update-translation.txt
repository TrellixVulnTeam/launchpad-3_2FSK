  >>> import datetime
  >>> import pytz
  >>> from zope.component import getUtility
  >>> from canonical.database.sqlbase import flush_database_updates
  >>> from canonical.launchpad.database import POMsgID
  >>> from canonical.launchpad.database import POTemplate
  >>> from canonical.launchpad.interfaces import IPersonSet
  >>> UTC = pytz.timezone('UTC')

Get the PO msgid we will be working with.

  >>> pomsgid = POMsgID.byMsgid('evolution addressbook')

Carlos is the one that will do the uploads.

  >>> carlos = getUtility(IPersonSet).getByName('carlos')

Now find the po template.

  >>> upstream_evo = POTemplate.get(1)
  >>> upstream_evo.productseries is not None
  True
  >>> upstream_evo.productseries.product.name
  u'evolution'

And the Spanish translation.

  >>> pofile_es = upstream_evo.getPOFileByLang('es')

This method will only overwrite translations in Launchpad with upstream
ones if the previous upstream translation matches the translation used in
Launchpad or there is no complete translation.

  >>> potmsgset = pofile_es.potemplate.getPOTMsgSetByMsgIDText(
  ...     u'EncFS Password: ')

We can see that this is actually the case:

  >>> from canonical.launchpad.database.language import LanguageSet
  >>> spanish = LanguageSet().getLanguageByCode('es')
  >>> message = potmsgset.getCurrentTranslationMessage(upstream_evo, spanish)
  >>> message.msgstr0.translation
  u'Contrase\xf1a de EncFS: '
  >>> message.is_complete
  True
  >>> message.is_imported
  True

We change the published one, and thus, the one in Launchpad will be changed
too at the same time.

  >>> message = potmsgset.updateTranslation(
  ...     pofile_es, carlos, {0: u'foo '}, is_imported=True,
  ...     lock_timestamp=datetime.datetime.now(UTC))

  >>> message.msgstr0.translation
  u'foo '
  >>> message.is_complete
  True
  >>> message.is_imported
  True

Even more, if there is no translation at all in Launchpad, we still get
the update from upstream.

  >>> message = potmsgset.updateTranslation(
  ...     pofile_es, carlos, {}, is_imported=False,
  ...     lock_timestamp=datetime.datetime.now(UTC))
  >>> message.msgstr0 is None
  True
  >>> message.is_complete
  False
  >>> flush_database_updates()
  >>> message = potmsgset.updateTranslation(
  ...     pofile_es, carlos, {0: u'foobar '},
  ...     is_imported=True, lock_timestamp=datetime.datetime.now(UTC))
  >>> flush_database_updates()
  >>> message.msgstr0.translation
  u'foobar '
  >>> message.is_complete
  True
  >>> message.is_imported
  True

So far, the current translation has been the imported one.  If Carlos
now submits another translation for the same message through the web
form, it is marked as current, but the last-imported translation remains
unaffected.

  >>> dummy = potmsgset.updateTranslation(
  ...     pofile_es, carlos, {0: 'boing '}, is_imported=False,
  ...     lock_timestamp=datetime.datetime.now(UTC))
  >>> flush_database_updates()
  >>> message = potmsgset.getCurrentTranslationMessage(upstream_evo, spanish)
  >>> message == dummy
  True
  >>> message.msgstr0.translation
  u'boing '
  >>> message.is_complete
  True
  >>> message.is_imported
  False

Since published and active translations diverged, if we get a new
upstream translation, the one in Launchpad will be kept untouched.

  >>> dummy = potmsgset.updateTranslation(
  ...     pofile_es, carlos, {0: u'bars '}, is_imported=True,
  ...     lock_timestamp=datetime.datetime.now(UTC))
  >>> flush_database_updates()
  >>> message = potmsgset.getCurrentTranslationMessage(upstream_evo, spanish)
  >>> message != dummy
  True
  >>> message.translations
  [u'boing ']
  >>> message.is_complete
  True
  >>> message = potmsgset.getImportedTranslationMessage(upstream_evo, spanish)
  >>> message.translations
  [u'bars ']
  >>> message.is_complete
  True

To force adding a new suggestion even if there are enough
privileges to set it as current, we can use the force_suggestion
parameter.

  >>> dummy = potmsgset.updateTranslation(
  ...     pofile_es, carlos, {0: u'suggestion! '}, is_imported=False,
  ...     lock_timestamp=datetime.datetime.now(UTC), force_suggestion=True)
  >>> flush_database_updates()
  >>> message = potmsgset.getCurrentTranslationMessage(upstream_evo, spanish)
  >>> message != dummy
  True
  >>> message.translations
  [u'boing ']
  >>> message.is_complete
  True
  >>> dummy.translations
  [u'suggestion! ']
  >>> dummy.is_complete
  True
