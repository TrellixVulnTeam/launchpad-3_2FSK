# Copyright 2009 Canonical Ltd.  All rights reserved.

"""Test for DistroSeries templates listing behaviour."""

__metaclass__ = type
__all__ = []

# Generated by the windmill services transformer
from windmill.authoring import WindmillTestClient

from canonical.launchpad.windmill.testing import lpuser

class EnableActionLinksTest:
    """Test that action links are enabled on mouseover."""

    MAX_ROW = 2

    def __init__(self, name=None,
                 url='http://translations.launchpad.dev:8085/evolution/trunk/+templates',
                 suite='translations', user=lpuser.TRANSLATIONS_ADMIN):
        """Create a new EnableActionLinksTest.

        :param name: Name of the test.
        :param url: Start at, default http://translation.launchpad.net:8085.
        :param suite: The suite in which this test is part of.
        :param user: The user who should be logged in.
        """
        self.url = url
        if name is None:
            self.__name__ = 'test_%s_productseries_templates' % suite
        else:
            self.__name__ = name
        self.suite = suite
        self.user = user
        self.client = None

    def _xpath_action_links(self, row_index, active):
        """Return the xpath to the action links div of the specified row."""
        # xpath positions are 1-based
        row_pos = row_index+1
        if active:
            inactive_class = u"not(contains(@class, 'inactive_links'))"
        else:
            inactive_class = u"contains(@class, 'inactive_links')"
        return (u"//tr[contains(@class, 'template_row')][%d]"
                u"/td[contains(@class, 'actions_column')]"
                u"/div[%s]" % (row_pos, inactive_class))

    def __call__(self):
        """Tests that that action links are disabled and enabled.

        The test:
        * opens the templates listing for the Evolution:trunk ProductSeries;
        * verifies that all action_links are disabled initially;
        * repeats for all table rows:
          * simulates moving the mouse cursor onto the table row;
          * verifies that the action links of the row are activated;
          * simulates moving the mouse cursor off the table row;
          * verifies that the action links of the row are deactivated;
        """
        self.client = WindmillTestClient(self.suite)

        # Go to templates page logged in as translations admin.
        self.user.ensure_login(self.client)
        self.client.open(url=self.url)
        self.client.waits.forPageLoad(timeout=u'20000')

        self.client.waits.forElement(id=u'templates_table', timeout=u'8000')
        # All links are inactive to start with.
        for row_num in range(self.MAX_ROW):
            self.client.asserts.assertNode(
                xpath=self._xpath_action_links(row_num, active=False))

        # Action links are activated when the mouse is over the row.
        for row_num in range(self.MAX_ROW):
            self.client.mouseOver(classname=('template_row,%d' % row_num))
            self.client.asserts.assertNode(
                xpath=self._xpath_action_links(row_num, active=True))

            self.client.mouseOut(classname=('template_row,%d' % row_num))
            self.client.asserts.assertNode(
                xpath=self._xpath_action_links(row_num, active=False))

test_import_queue = EnableActionLinksTest(
    name='test_productseries_templates')
