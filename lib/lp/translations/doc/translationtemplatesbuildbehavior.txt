= TranslationTemplatesBuildJobBehavior =

Set up build environment.

    >>> import transaction
    >>> import logging
    >>> logger = logging.getLogger()
    >>> logger.setLevel(logging.CRITICAL)

    >>> from lp.buildmaster.master import BuilddMaster
    >>> bm = BuilddMaster(logger, transaction)

    >>> from canonical.buildd.tests import BuilddSlaveTestSetup
    >>> BuilddSlaveTestSetup().setUp()

    >>> from canonical.librarian.interfaces import ILibrarianClient
    >>> from StringIO import StringIO
    >>> librarian_client = getUtility(ILibrarianClient)

    >>> content = 'anything'
    >>> alias_id = librarian_client.addFile(
    ...    'foo.tar.gz', len(content), StringIO(content), 'text/plain')

    >>> from canonical.launchpad.interfaces import ILibraryFileAliasSet
    >>> from lp.registry.interfaces.distribution import IDistributionSet
    >>> from lp.registry.interfaces.pocket import PackagePublishingPocket

    >>> distroseries = getUtility(IDistributionSet)['ubuntu'].currentseries
    >>> archdistroseries = distroseries['i386']

    >>> chroot = getUtility(ILibraryFileAliasSet)[alias_id]
    >>> pc = archdistroseries.addOrUpdateChroot(chroot=chroot)

Activate builders present in sampledata, we need to be logged in as a
member of launchpad-buildd-admin:

    >>> from canonical.launchpad.ftests import login
    >>> login('celso.providelo@canonical.com')

    >>> bm.addDistroArchSeries(archdistroseries)
    >>> bm.setupBuilders(archdistroseries)

    >>> builder = factory.makeBuilder(virtualized=False)

    >>> from lp.translations.interfaces.translationtemplatesbuildjob import (
    ...     ITranslationTemplatesBuildJobSource)
    >>> from lp.soyuz.interfaces.buildqueue import IBuildQueueSet
    >>> specific_job_source = getUtility(ITranslationTemplatesBuildJobSource)
    >>> branch = factory.makeBranch()
    >>> specific_job = specific_job_source.create(branch)
    >>> buildqueue = getUtility(IBuildQueueSet).getByJob(specific_job.job)

    >>> print buildqueue.date_started
    None

    >>> builder.dispatchBuildCandidate(buildqueue)
    >>> print buildqueue.date_started
    None
