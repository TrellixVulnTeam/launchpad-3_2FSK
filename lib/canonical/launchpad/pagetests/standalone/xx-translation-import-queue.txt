Uploading templates
===================

An upstream maintainer can use Rosetta to submit their initial template uploads.

  >>> from zope.testbrowser.testing import Browser

    >>> ff_owner_browser = Browser()
    >>> ff_owner_browser.addHeader('Authorization', 'Basic test@canonical.com:test')
    >>> ff_owner_browser.open(
    ...     'http://launchpad.dev/firefox/1.0/+translations-upload')
    >>> 'Upload either a single file' in ff_owner_browser.contents
    True

Time to do the upload...

    >>> import canonical.launchpad
    >>> import os.path
    >>> test_file_name = os.path.join(
    ...     os.path.dirname(canonical.launchpad.__file__),
    ...     'pagetests/standalone/xx-translation-import-queue.tar.gz')
    >>> tarball = open(test_file_name, "rb")
    >>> upload = ff_owner_browser.getControl('File')
    >>> upload
    <Control name='file' type='file'>
    >>> upload.add_file(tarball, 'application/x-gzip', test_file_name)
    >>> ff_owner_browser.getControl('Request Upload').click()
    >>> ff_owner_browser.url
    'http://launchpad.dev/firefox/1.0/+translations-upload'
    >>> 'Upload new translation resources' in ff_owner_browser.contents
    True
    >>> 'Thank you for your upload. 1 files from the tarball will be reviewed' in ff_owner_browser.contents
    True

We check now that the upload is available from the translation import queue page
and the status is static as we are not logged in.

  >>> anon_browser.open('http://launchpad.dev/translations/imports')
  >>> anon_browser.url
  'http://launchpad.dev/translations/imports'
  >>> 'po/es.po' in anon_browser.contents
  True
  >>> 'Mozilla Firefox Series' in anon_browser.contents
  True
  >>> '<td>Needs Review</td>' in anon_browser.contents
  True

As an admin, the same page should give us extra rights to edit imports and
thus, the link should appear.

  >>> browser.addHeader('Authorization', 'Basic carlos@canonical.com:test')
  >>> browser.open('http://launchpad.dev/translations/imports')
  >>> browser.url
  'http://launchpad.dev/translations/imports'
  >>> 'po/es.po' in browser.contents
  True
  >>> 'Mozilla Firefox Series' in browser.contents
  True
  >>> browser.getLink(url='imports/3')
  <Link text='Edit' url='http://launchpad.dev/translations/imports/3'>
  >>> browser.getControl(name='status-3').displayValue
  ['Needs Review']

Now, we attach a new file to an already existing translation resource.

  >>> browser.open('http://launchpad.dev/ubuntu/hoary/+source/evolution/+pots/evolution-2.2/+upload')
  >>> browser.url
  'http://launchpad.dev/ubuntu/hoary/+source/evolution/+pots/evolution-2.2/+upload'
  >>> upload = browser.getControl('File')
  >>> upload
  <Control name='file' type='file'>
  >>> from StringIO import StringIO
  >>> upload.add_file(StringIO('# foo\n'), 'text/x-gettext-translation-template', 'evolution.pot')
  >>> browser.getControl('Upload').click()
  >>> browser.url
  'http://launchpad.dev/ubuntu/hoary/+source/evolution/+pots/evolution-2.2/+upload'
  >>> for tag in find_tags_by_class(browser.contents, 'message'):
  ...     print tag
  <div...Thank you for your upload. The file content will be imported soon...

The import queue should have two additional entries with the last upload as
the last entry.

  >>> anon_browser.open('http://launchpad.dev/translations/imports')
  >>> print find_main_content(anon_browser.contents)
  <...1...4...of...4 results...
  ...po/evolution-2.2-test.pot...
  ...Evolution Series: trunk...
  ...<td>Imported</td>...
  ...po/pt_BR.po...
  ...Evolution Series: trunk...
  ...<td>Imported</td>...
  ...po/es.po...
  ...Mozilla Firefox Series...
  ...<td>Needs Review</td>...
  ...evolution in Ubuntu Hoary...
  ...<td>Needs Review</td>...
  ...Carlos Perelló Marín...
  ...Template "evolution-2.2" in Ubuntu Hoary package "evolution"...

Open the edit form for the third entry.

  >>> browser.open('http://launchpad.dev/translations/imports')
  >>> browser.getLink(url='imports/3').click()

And associate this import to the right IPOFile.

  >>> browser.getControl('Template Name').value = 'pkgconf-mozilla'
  >>> browser.getControl('Path').value = ''
  >>> browser.getControl('Language').value = ['es']
  >>> browser.getControl('Variant').value = ''
  >>> browser.getControl('Attach').click()

  >>> browser.url
  'http://launchpad.dev/translations/imports'

And we get that entry approved and with a place where it will be imported

  >>> anon_browser.open('http://launchpad.dev/translations/imports')
  >>> print find_main_content(anon_browser.contents)
  <...1...4...of...4 results...
  ...po/es.po...
  ...Mozilla Firefox Series...
  ...Approved...
  ...Sample Person...
  ...Spanish (es) translation of pkgconf-mozilla in Mozilla Firefox 1.0...


Removing from the import queue
------------------------------

Check the removal feature.
No Privileges Person will try to remove it, but will fail. We are getting
an Internal Server Error and that's fine as the user will not get a UI to do this
POST, if we get this POST is because it was created by hand or not using our forms.

  >>> print http(r"""
  ... POST /translations/imports HTTP/1.1
  ... Authorization: Basic bm8tcHJpdkBjYW5vbmljYWwuY29tOnRlc3Q=
  ... Content-Length: 45
  ... Content-Type: application/x-www-form-urlencoded
  ... Referer: http://localhost:9000/translations/imports
  ... 
  ... status-2=DELETED&handle_queue=Change%20Status""")
  HTTP/1.1 500 Internal Server Error
  ...
  ...UnexpectedFormData...
  ...

But Jordi, a Rosetta expert, will be allowed to remove it.

  >>> jordi_browser = Browser()
  >>> jordi_browser.handleErrors = False
  >>> jordi_browser.addHeader('Authorization', 'Basic jordi@ubuntu.com:test')
  >>> jordi_browser.open('http://launchpad.dev/translations/imports')
  >>> jordi_browser.getControl(name='status-1').value = ['DELETED']
  >>> jordi_browser.getControl('Change Status').click()
  >>> jordi_browser.url
  'http://launchpad.dev/translations/imports/+index'

  >>> print find_main_content(jordi_browser.contents)
  <...po/evolution-2.2-test.pot...
  ...Evolution Series: trunk...
  ...status-1...
  ...selected="yes" value="DELETED"...
  ...Foo Bar...
  ...Template "evolution-2.2-test" in Evolution trunk...

Foo Bar Person is a launchpad admin and he's allowed to remove an entry.

  >>> admin_browser.open('http://launchpad.dev/translations/imports')
  >>> admin_browser.getControl(name='status-2').value = ['DELETED']
  >>> admin_browser.getControl('Change Status').click()
  >>> admin_browser.url
  'http://launchpad.dev/translations/imports/+index'

  >>> print find_main_content(admin_browser.contents)
  <...po/pt_BR.po...
  ...Evolution Series: trunk...
  ...status-2...
  ...selected="yes" value="DELETED"...
  ...Foo Bar...
  ...Portuguese (Brazil) (pt_BR) translation of evolution-2.2-test in Evolution trunk...

And finally, we make sure that the importer is also allowed to remove their
own imports.

  >>> ff_owner_browser.open('http://launchpad.dev/translations/imports')
  >>> ff_owner_browser.getControl(name='status-3').value
  ['APPROVED']
  >>> ff_owner_browser.getControl(name='status-3').value = ['DELETED']
  >>> ff_owner_browser.getControl('Change Status').click()

The entry now appears deleted.

  >>> print find_main_content(ff_owner_browser.contents)
  <...po/es.po...
  ...Mozilla Firefox Series: 1.0...
  ...status-3...
  ...selected="yes" value="DELETED"...
  ...Sample Person...
  ...Spanish (es) translation of pkgconf-mozilla in Mozilla Firefox 1.0...

Corner cases
------------

Let's check tar.bz2 uploads. They work ;-)

  >>> evo_owner_browser = ff_owner_browser
  >>> evo_owner_browser.open('http://launchpad.dev/evolution/trunk/+translations-upload')

  >>> test_file_name = os.path.join(
  ...     os.path.dirname(canonical.launchpad.__file__),
  ...     'pagetests/standalone/xx-translation-import-queue.tar.bz2')
  >>> tarball = open(test_file_name)

  >>> evo_owner_browser.getControl('File').add_file(
  ...     tarball, 'application/x-bzip', test_file_name)
  >>> evo_owner_browser.getControl('Request Upload').click()
  >>> evo_owner_browser.url
  'http://launchpad.dev/evolution/trunk/+translations-upload'
  >>> for tag in find_tags_by_class(evo_owner_browser.contents, 'message'):
  ...     print tag
  <div...Thank you for your upload. 2 files from the tarball will be reviewed...

Let's try breaking the form by not supplying a file object. It give us a
decent error message:

  >>> browser.open(
  ...     'http://launchpad.dev/ubuntu/hoary/'
  ...     '+source/evolution/+pots/evolution-2.2/+upload')
  >>> browser.getControl('Upload').click()
  >>> for tag in find_tags_by_class(browser.contents, 'message'):
  ...     print tag
  <div...Your upload was ignored because you didn't select a file....
  ...Please select a file and try again.</div>...
