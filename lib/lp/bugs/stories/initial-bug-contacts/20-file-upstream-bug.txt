Filing a public bug on an upstream will subscribe the bug supervisor, as
well.

    >>> browser.addHeader("Authorization", "Basic mark@example.com:test")

    >>> browser.open("http://launchpad.dev/firefox/+filebug")

    >>> browser.getControl(name="field.title").value = "bug supervisor test"
    >>> browser.getControl('Continue').click()

    >>> browser.getControl(name="field.comment").value = "a public bug"
    >>> browser.getControl("Submit Bug Report").click()

    >>> bug_id = browser.url.split("/")[-1]
    >>> print browser.url.replace(bug_id, "BUG-ID")
    http://bugs.launchpad.dev/firefox/+bug/BUG-ID

Now mark (because he's the bug reporter), Sample Person (a former bug
supervisor), Landscape Developers (another former bug supervisor) and
Robert Collins (the current bug supervisor) are subscribed to this bug:

    >>> from zope.component import getUtility
    >>> from lp.bugs.interfaces.bug import IBugSet
    >>> from canonical.launchpad.ftests import login, logout, ANONYMOUS

    >>> def subscriber_names(bug):
    ...     subscribers = (
    ...         bug.getDirectSubscribers() + bug.getIndirectSubscribers())
    ...     return sorted(subscriber.displayname for subscriber in subscribers)

    >>> login(ANONYMOUS)
    >>> bugset = getUtility(IBugSet)
    >>> subscriber_names(bugset.get(bug_id))
    [u'Landscape Developers', u'Mark Shuttleworth', u'Robert Collins',
    u'Sample Person']
    >>> logout()

For a security bug, only the reporter and the registrant gets
subscribed, because Firefox does not have a security contact.

    >>> from lp.registry.interfaces.product import IProductSet

    >>> login(ANONYMOUS)
    >>> firefox = getUtility(IProductSet).getByName("firefox")
    >>> firefox.security_contact is None
    True
    >>> logout()

    >>> browser.open("http://launchpad.dev/firefox/+filebug")

    >>> browser.getControl(name="field.title").value = "bug supervisor test"
    >>> browser.getControl('Continue').click()

    >>> browser.getControl(name="field.comment").value = "a PRIVATE bug"
    >>> browser.getControl(
    ...     "This bug is a security vulnerability").selected = True
    >>> browser.getControl("Submit Bug Report").click()

    >>> other_bug_id = browser.url.split("/")[-1]
    >>> print browser.url.replace(other_bug_id, "BUG-ID")
    http://bugs.launchpad.dev/firefox/+bug/BUG-ID

    >>> logout()
    >>> login("mark@example.com")

    >>> subscriber_names(bugset.get(other_bug_id))
    [u'Mark Shuttleworth', u'Sample Person']

    >>> logout()
