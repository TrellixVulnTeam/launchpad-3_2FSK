= Private PPA Subscription Stories =

The owner or admin of a private PPA can add subscribers - people
or teams - to the private archive. This will enable subscribers to obtain
a custom sources.list entry and access the repository.

The owner or admin of a private archive can also edit or cancel
subscribers related to the archive.

== Story: An archive owner can add a subscription for a private archive ==

 * As a software developer who plans to release some private software
 * I want to add certain users or teams as subscribers of my PPA
 * So that they can download my software.

=== Scenario 1: A user is added as a subscriber ===

Given a private PPA for Celso

    >>> admin_browser.open("http://launchpad.dev/~cprov/+archive/ppa")
    >>> admin_browser.getLink("Administer archive").click()
    >>> admin_browser.getControl(name="field.private").value = True
    >>> admin_browser.getControl(name="field.buildd_secret").value = "secret"
    >>> admin_browser.getControl("Save").click()

And a browser for Celso currently navigated to the Manage Subscriptions page

    >>> cprov_browser = setupBrowser(
    ...     auth="Basic celso.providelo@canonical.com:cprov")
    >>> cprov_browser.open(
    ...     "http://launchpad.dev/~cprov/+archive/ppa/+subscriptions")

When Celso fills in the form with 'spiv' as the subscriber
And a blank subscription expiry
And a description of "spiv's my friend"
And clicks on the "Add subscriber" button

    >>> cprov_browser.getControl(name='field.subscriber').value = 'spiv'
    >>> cprov_browser.getControl(
    ...     name='field.description').value = "spiv's my friend"
    >>> cprov_browser.getControl(name="field.actions.add").click()

Then Celso is redirected to the subscribers page
And the new subscription is displayed,
And a notification about the new subscriber is also displayed.

Create a helper function to print subscriptions:
    >>> def print_archive_subscriptions(contents):
    ...     subscriptions = find_tags_by_class(contents,
    ...                                        'archive_subscriber_row')
    ...     for subscription in subscriptions:
    ...         print extract_text(subscription)

    >>> print_archive_subscriptions(cprov_browser.contents)
    Name                Expires     Comment
    Andrew Bennetts                 spiv's my friend

    >>> for msg in get_feedback_messages(cprov_browser.contents):
    ...     print msg
    Andrew Bennetts has been added as a subscriber.

=== Scenario 2: A team is added as a subscriber ===

Given a private PPA for Celso
And a browser for Celso currently navigated to the Manage Subscriptions page

    >>> cprov_browser.open(
    ...     "http://launchpad.dev/~cprov/+archive/ppa/+subscriptions")

When Celso fills in the form with the 'launchpad' team as the subscriber
And an expiry date of '2200-08-01'
And a description of "Launchpad developer access."
And clicks on the "Add subscriber" button

    >>> cprov_browser.getControl(name='field.subscriber').value = 'launchpad'
    >>> cprov_browser.getControl(
    ...     name='field.expiry_date').value = '2200-08-01'
    >>> cprov_browser.getControl(
    ...     name='field.description').value = "Launchpad developer access."
    >>> cprov_browser.getControl(name="field.actions.add").click()

Then Celso is redirected to the subscribers page
And the new subscription for the launchpad team is displayed,
And a notification about the new subscriber is also displayed.

    >>> print_archive_subscriptions(cprov_browser.contents)
    Name                Expires     Comment
    Andrew Bennetts                 spiv's my friend

    >>> for msg in get_feedback_messages(cprov_browser.contents):
    ...     print msg
    Andrew Bennetts has been added as a subscriber.

== Story 2: An owner edits a subscription for her private archive ==
TBD
== Story 3: An owner cancels a subscription for his private archive ==
TBD

== Story 4: A subscriber activates a subscription ==

 * As a user of Celso's software,
 * I want to obtain a private sources.list entry
 * So that I can download and get updates for the software in
   Celso's private PPA.

=== Scenario 1: A user activates a personal subscription ===

Given a subscription for Celso's private PPA

When Andrew visits his profile (?? where would be the logical place for this?)
And clicks on the 'Private software' link (only displayed to those with subscriptions)
Then a list of Andrew's pending subscriptions is displayed
And a sources.list snippet is currently empty.

When Andrew clicks on the 'Activate subscription' button for Celso's PPA
Then the sources.list snippet is updated to include a line for Celso's PPA
And a notification is displayed on the screen

After receiving an email notifying him of his subscription,
Andrew Bennets (spiv) follows the link from the email and
sees the required sources.list entry.

=== Scenario 2: A user activates a team subscription ===

TBD

== Story 5: A user's subscription expires or is cancelled ==

 * As a user of Celso's software
 * I want to know (eventually, be notified) when my subscription expires
 * So that I understand why I can no longer download Celso's software

=== Scenario 1: Accessing details for an expired subscription ===

Given an expired subscription for Celso's private PPA

When Andrew wisits his subscriptions
Then the page clearly identifies the subscription as no longer valid
And there is no entry in the sources.list for the expired subscription.

=== Scenario 2: Accessing details for a cancelled subscription ===

Given a cancelled subscription for Celso's private PPA

When Andrew wisits his subscriptions
Then the page clearly identifies the subscription as no longer valid
And there is no entry in the sources.list for the expired subscription.


