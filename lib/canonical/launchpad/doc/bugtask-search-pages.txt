Distribution Search page
========================

In the 'Bugs' facet of a distribution we can find a list of
bugs reported in that distribution and simple and advanced search forms.

    >>> from canonical.launchpad.interfaces import IDistributionSet
    >>> debian = getUtility(IDistributionSet).getByName('debian')

A helper function to make it easier to construct a view

    >>> from zope.component import getView
    >>> from canonical.launchpad.webapp.servers import LaunchpadTestRequest
    >>> def create_view(context, name, form=None):
    ...     view = getView(context, name, LaunchpadTestRequest(form=form))
    ...     view.initialize()
    ...     return view

The simple search form returns only open bugtasks.

    >>> form_values = {
    ...     'search': 'Search',
    ...     'field.searchtext': '',
    ...     'field.orderby': '-priority,-severity'}

    >>> distro_search_listingview = create_view(
    ...     debian, "+bugs", form_values)

    >>> open_bugtasks = list(distro_search_listingview.search().batch)
    >>> [(bugtask.bug.id, bugtask.status.name) for bugtask in open_bugtasks]
    [(1, 'CONFIRMED'), (2, 'CONFIRMED'), (3, 'UNCONFIRMED')]

And the advanced form allows us to query for specific bug statuses.

    >>> form_values = {
    ...     'search': 'Search bugs in Debian',
    ...     'advanced': 1,
    ...     'field.status': 'Fix Released',
    ...     'field.searchtext': '',
    ...     'field.orderby': '-priority,-severity'}

    >>> distro_advanced_search_listingview = create_view(debian, '+bugs', form_values)
    >>> fix_released_bugtasks = list(distro_advanced_search_listingview.search().batch)
    >>> [(bugtask.bug.id, bugtask.status.name)
    ...     for bugtask in fix_released_bugtasks]
    [(8, 'FIXRELEASED')]

A triager may find it useful to query for bugs with no package:

    >>> ubuntu = getUtility(IDistributionSet).getByName('ubuntu')

    >>> form_values = {
    ...     'search': 'Search bugs in Ubuntu',
    ...     'advanced': 1,
    ...     'field.has_no_package': 'on',
    ...     'field.orderby': '-priority,-severity'}

    >>> distro_advanced_search_listingview = create_view(
    ...     ubuntu, '+bugs', form_values)

    >>> bugtasks_needing_packages = list(
    ...     distro_advanced_search_listingview.search().batch)
    >>> [bugtask.bug.id for bugtask in bugtasks_needing_packages]
    [2]

Distribution Release search page
================================

    >>> woody = debian.getRelease('woody')

The simple search form returns only open bugtasks.

    >>> form_values = {
    ...     'search': 'Search',
    ...     'field.searchtext': '',
    ...     'field.orderby': '-priority,-severity'}

    >>> distrorelease_search_listingview = create_view(
    ...     woody, "+bugs", form_values)

    >>> open_bugtasks = list(distrorelease_search_listingview.search().batch)
    >>> [(bugtask.bug.id, bugtask.status.name) for bugtask in open_bugtasks]
    [(3, 'UNCONFIRMED'), (2, 'UNCONFIRMED')]

And now we'll change the status of one of the bugtasks, but first we need to
be logged in.

    >>> from canonical.launchpad.ftests import login
    >>> from canonical.database.sqlbase import flush_database_updates

    >>> login("test@canonical.com")

    >>> from canonical.lp.dbschema import BugTaskStatus
    >>> open_bugtasks[0].status = BugTaskStatus.REJECTED
    >>> flush_database_updates()

And the advanced form allows us to query for specific bug statuses.

    >>> form_values = {
    ...     'search': 'Search bugs in Woody',
    ...     'advanced': 1,
    ...     'field.status': 'Rejected',
    ...     'field.searchtext': '',
    ...     'field.orderby': '-priority,-severity'}

    >>> distrorelease_advanced_search_view = create_view(woody, '+bugs', form_values)
    >>> rejected_bugtasks = list(distrorelease_advanced_search_view.search().batch)
    >>> [(bugtask.bug.id, bugtask.status.name)
    ...     for bugtask in rejected_bugtasks]
    [(3, 'REJECTED')]
