PO Export Request Browser Views
-------------------------------

    >>> from lp.translations.publisher import TranslationsLayer

Check there are no requests in the database to start with.

    >>> from lp.translations.model.poexportrequest import POExportRequest
    >>> POExportRequest.select().count()
    0

Here's our user who's going to request some PO files.

    >>> login('carlos@canonical.com')

Here's the PO template they're going to request some files from.

    >>> from lp.translations.model.potemplate import POTemplate
    >>> potemplate = POTemplate.get(1)

Here's the for variables from the user.

    >>> form = {
    ...     'what': 'some',
    ...     'potemplate': True,
    ...     'es': True,
    ...     'format': 'PO'}

And here's the view processing that request.

    >>> potemplate_view = create_view(
    ...     potemplate, '+export', form=form, layer=TranslationsLayer)
    >>> potemplate_view.request.method = 'POST'
    >>> potemplate_view.initialize()

Check that the request has been added to the DB.

    >>> requests = POExportRequest.select(
    ...         orderBy=['person', 'potemplate', 'pofile'])
    >>> for request in requests:
    ...     things = [
    ...         request.person.displayname,
    ...         request.potemplate.name]
    ...     if request.pofile:
    ...         things.append(request.pofile.language.englishname)
    ...     print things
    [u'Carlos Perell\xf3 Mar\xedn', u'evolution-2.2', u'Spanish']
    [u'Carlos Perell\xf3 Mar\xedn', u'evolution-2.2']

Clear the queue.

    >>> POExportRequest.delete(requests[1].id)
    >>> POExportRequest.delete(requests[0].id)
    >>> POExportRequest.select().count()
    0

Request an empty potemplate (i.e. without any POTMsgSets).
https://launchpad.net/products/rosetta/+bug/68261

    >>> form = {
    ...     'what': 'some',
    ...     'potemplate': True,
    ...     'format': 'PO'}
    >>> empty_potemplate = POTemplate.get(6)
    >>> broken_potemplate_view = create_view(
    ...     empty_potemplate, '+export', form=form, layer=TranslationsLayer)
    >>> broken_potemplate_view.request.method = 'POST'
    >>> broken_potemplate_view.initialize()

Check that the request has been added to the DB.

    >>> requests = POExportRequest.select(
    ...         orderBy=['person', 'potemplate', 'pofile'])
    >>> print [requests[0].person.displayname, requests[0].potemplate.name]
    [u'Carlos Perell\xf3 Mar\xedn', u'evolution-2.2-test']

Clear the queue.

    >>> POExportRequest.delete(requests[0].id)
    >>> POExportRequest.select().count()
    0

Let's request a PO file instead this time.

    >>> from lp.translations.model.pofile import POFile
    >>> pofile = POFile.get(1)

Here's the request getting processed.

    >>> form = {'format': 'PO'}
    >>> pofile_view = create_view(
    ...     pofile, '+export', form=form, layer=TranslationsLayer)
    >>> pofile_view.request.method = 'POST'
    >>> pofile_view.initialize()

And there it is, format is PO.

    >>> from lp.translations.interfaces.translationfileformat import (
    ...     TranslationFileFormat)
    >>> requests = POExportRequest.select()
    >>> requests.count()
    1
    >>> requests[0].format == TranslationFileFormat.PO
    True

Clear the queue.

    >>> POExportRequest.delete(requests[0].id)
    >>> POExportRequest.select().count()
    0

Let's request a partial PO file instead this time. In the form this is done
by ticking the checkbox 'pochanged'.

    >>> pofile = POFile.get(1)
    >>> form = {'format': 'PO', 'pochanged': 'POCHANGED'}
    >>> pofile_view = create_view(
    ...     pofile, '+export', form=form, layer=TranslationsLayer)
    >>> pofile_view.request.method = 'POST'
    >>> pofile_view.initialize()

And there it is, and its format is POCHANGED.

    >>> from lp.translations.interfaces.translationfileformat import (
    ...     TranslationFileFormat)
    >>> requests = POExportRequest.select()
    >>> requests.count()
    1
    >>> requests[0].format == TranslationFileFormat.POCHANGED
    True
