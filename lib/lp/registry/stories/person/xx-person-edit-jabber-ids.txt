==========
Jabber IDs
==========


In their Launchpad profile, users can register their Jabber IDs.

Adding and editing an ID
------------------------

To register a Jabber ID with his account, the user visits his
profile page and uses the 'Update Jabber IDs' link.

    >>> user_browser.open('http://launchpad.dev/~no-priv')
    >>> user_browser.getLink('Update Jabber IDs').click()
    >>> print user_browser.title
    No Privileges Person's Jabber IDs...

The user enters the Jabber ID in the text field and clicks on the
'Save Changes' button.

    >>> user_browser.getControl(name='newjabberid').value = 'jeff@jabber.org'
    >>> user_browser.getControl('Save Changes').click()

In this case, the user tried registering a jabber ID that was already
registered by someone else. Since only one person can use a Jabber ID,
an error is displayed and the user can enter another one:

    >>> for error in find_tags_by_class(user_browser.contents, 'error'):
    ...     print extract_text(error)
    The Jabber ID jeff@jabber.org is already registered by Jeff Waugh.

However, if the user enters a Jabber ID which isn't already registered,
it will be associated with his account.

    >>> user_browser.getControl(name='newjabberid').value = (
    ...     'no-priv@jabber.org')
    >>> user_browser.getControl('Save Changes').click()

    >>> def show_jabberids(browser):
    ...     tags = find_tags_by_class(browser.contents, 'jabberid')
    ...     if tags:
    ...         for tag in tags:
    ...             print extract_text(tag)
    ...     else:
    ...         print "No jabberids"

    >>> show_jabberids(user_browser)
    no-priv@jabber.org

Removing an ID
--------------

To remove an existing Jabber ID, the user simply checks the 'Remove'
checkbox besides the ID:

    >>> user_browser.getControl('Remove', index=0).click()
    >>> user_browser.getControl('Save Changes').click()

    >>> show_jabberids(user_browser)
    No jabberids
