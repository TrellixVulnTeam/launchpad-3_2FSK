= Private PPA Subscription Stories =

The owner or admin of a private PPA can add subscribers - people
or teams - to the private archive. This will enable subscribers to obtain
a custom sources.list entry and access the repository (but not
necessarily the PPA page... needs discussion).

The owner or admin of a private archive can also edit or cancel
subscribers related to the archive.

== Story: An archive owner can add a subscription for a private archive ==

 * As a software developer who plans to release some private software
 * I want to add certain users or teams as subscribers of my PPA
 * So that they can download my software.

=== Scenario 1: A user is added as a subscriber ===

Given a private PPA for Celso

    >>> admin_browser.open("http://launchpad.dev/~cprov/+archive/ppa")
    >>> admin_browser.getLink("Administer archive").click()
    >>> admin_browser.getControl(name="field.private").value = True
    >>> admin_browser.getControl(name="field.buildd_secret").value = "secret"
    >>> admin_browser.getControl("Save").click()

And a browser for Celso currently navigated to the Manage Subscriptions page
    >>> cprov_browser = setupBrowser(
    ...     auth="Basic celso.providelo@canonical.com:cprov")
    >>> cprov_browser.open(
    ...     "http://launchpad.dev/~cprov/+archive/ppa/+subscriptions")

When Celso fills in the form with 'spiv' as the subscriber
And a blank subscription expiry
And a description of "spiv's my friend"
And clicks on the "Add subscriber" button

    >>> cprov_browser.getControl(name='field.subscriber').value = 'spiv'
    >>> cprov_browser.getControl(
    ...     name='field.description').value = "spiv's my friend"
    >>> cprov_browser.getControl(name="field.actions.add").click()

Then Celso is redirected to the subscribers page
And the new subscription is displayed,
And a notification about the new subscriber is also displayed.

Create a helper function to print subscriptions:
    >>> def print_archive_subscriptions(contents):
    ...     subscriptions = find_tags_by_class(contents,
    ...                                        'archive_subscriber_row')
    ...     for subscription in subscriptions:
    ...         print extract_text(subscription)

    >>> print_archive_subscriptions(cprov_browser.contents)
    Name                Expires     Comment
    Andrew Bennetts                 spiv's my friend

    >>> for msg in get_feedback_messages(cprov_browser.contents):
    ...     print msg
    Andrew Bennetts has been added as a subscriber.

=== Scenario 2: A team is added as a subscriber ===

== Story 2: Owner editing subscribers to a private archive ==
TBD
== Story 3: Owner cancelling subscribers for an archive ==
TBD

== Story 4: A subscriber activates a subscription ==

 * As a user of Celso's software,
 * I want to obtain a private sources.list entry
 * So that I can download and update the softwarein Celso's private PPA.

=== Scenario 1:  ===

After receiving an email notifying him of his subscription,
Andrew Bennets (spiv) follows the link from the email and
sees the required sources.list entry.

=== Scenario 2: Accessing details for an expired subscription ===

Some time later, when the subscription has expired, Andrew Bennets
re-visits the link to display his sources.list entries for
any private PPAs to which he has access.

The page no-longer includes the sources.list entry for Celso's
private PPA.

=== Scenario 3: Accessing details for a cancelled subscription ===


