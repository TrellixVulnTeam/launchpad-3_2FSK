# lint Python modules using external checkers.
# 
# This is the main checker controling the other ones and the reports
# generation. It is itself both a raw checker and an astng checker in order
# to:
# * handle message activation / deactivation at the module level
# * handle some basic but necessary stats data (number of classes, methods...)
# 
[MASTER]

# Specify a configuration file.
#rcfile=

# Profiled execution.
profile=no

# Add <file or directory> to the black list. It should be a base name, not a
# path. You may set this option multiple times.
ignore=sourcecode

# Pickle collected data for later comparisons.
persistent=no

# Set the cache size for astng objects.
cache-size=500

# List of plugins (as comma separated values of python modules names) to load,
# usually to register additional checkers.
load-plugins=


[COMMANDS]

# Display a help message for the given message id and exit. The value may be a
# comma separated list of message ids.
#help-msg=


[MESSAGES CONTROL]

# Enable only checker(s) with the given id(s). This option conflict with the
# disable-checker option
#enable-checker=

# Enable all checker(s) except those with the given id(s). This option conflict
# with the disable-checker option
disable-checker=typecheck,design,miscellaneous,similarities

# Enable all messages in the listed categories.
#enable-msg-cat=

# Disable all messages in the listed categories.
disable-msg-cat=R

# Enable the message(s) with the given id(s).
#enable-msg=

# Disable the message(s) with the given id(s).
# :I0011: *Locally disabling %s*
# :W0142: *Used * or ** magic*
# :W0201: *Attribute %r defined outside __init__*
# :W0223: *Method %r is abstract in class %r but is not overridden* (StructuralObjectPresentation and  SQLObjectVocabularyBase)
# :W0511: *Used when a warning note as FIXME or XXX is detected.*
# :W0613: *Unused argument %r* (We get lots of these from interfaces)
# :W0621: *Redefining name %r from outer scope (line %s)* (pylint does a poor evaluation)
# :W0704: *Except does not do anything* (Does not check for comment explaining fall-through)
# :E0611: *No name %r in module 'sqlobject'* (Pylint shipped with gutsy does not understand SQLObject. Pyflakes checks the imports too anyway.)
disable-msg=I0011,C0302,E0202,W0142,W0201,W0221,W0223,W0232,W0511,W0613,W0621,W0622,W0704,E0611


[REPORTS]

# set the output format. Available formats are text, parseable, colorized and
# html
output-format=parseable

# Include messages id in output
include-ids=yes

# Put messages in a separate file for each module / package specified on the
# command line instead of printing them on stdout. Reports (if any) will be
# written in a file name "pylint_global.[txt|html]".
files-output=no

# Tells wether to display a full report or only the messages
reports=no

# Python expression which should return a note less than 10 (10 is the highest
# note).You have access to the variables errors warning, statement which
# respectivly contain the number of errors / warnings messages and the total
# number of statements analyzed. This is used by the global evaluation report
# (R0004).
evaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)

# Add a comment according to your evaluation note. This is used by the global
# evaluation report (R0004).
comment=no

# Enable the report(s) with the given id(s).
enable-report=

# Disable the report(s) with the given id(s).
#disable-report=


# checks for
# * unused variables / imports
# * undefined variables
# * redefinition of variable from builtins or from an outer scope
# * use of variable before assigment
# 
[VARIABLES]

# Tells wether we should check for unused import in __init__ files.
init-import=no

# A regular expression matching names used for dummy variables (i.e. not used).
dummy-variables-rgx=dummy|ignored|cache

# List of additional names supposed to be defined in builtins. Remember that
# you should avoid to define new builtins when possible.
additional-builtins=


# try to find bugs in the code using type inference
# 
[TYPECHECK]

# Tells wether missing members accessed in mixin class should be ignored. A
# mixin class is detected if its name ends with "mixin" (case insensitive).
ignore-mixin-members=yes

# When zope mode is activated, consider the acquired-members option to ignore
# access to some undefined attributes.
zope=yes

# List of members which are usually get through zope's acquisition mecanism and
# so shouldn't trigger E0201 when accessed (need zope=yes to be considered).
# Also uses this to suppress false E1101 errors
acquired-members=REQUEST,acl_users,aq_parent,byName,providedBy,q,union,teamownerID,items,name,destroySelf,count,version


# checks for :
# * doc strings
# * modules / classes / functions / methods / arguments / variables name
# * number of arguments, local variables, branchs, returns and statements in
# functions, methods
# * required module attributes
# * dangerous default values as arguments
# * redefinition of function / method / class
# * uses of the global statement
# 
[BASIC]

# Required attributes for module, separated by a comma
required-attributes=

# Regular expression which should only match functions or classes name which do
# not require a docstring
no-docstring-rgx=__.*__

# Regular expression which should only match correct module names
module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Regular expression which should only match correct module level names
const-rgx=([a-z_][a-z0-9_]*|[A-Z_][A-Z0-9_]*)$

# Regular expression which should only match correct class names
class-rgx=[A-Z_][a-zA-Z0-9]+$

# Regular expression which should only match correct function names
function-rgx=[a-z_][a-z0-9_]*$

# Regular expression which should only match correct method names
method-rgx=[a-z_][a-zA-Z0-9_]*$

# Regular expression which should only match correct instance attribute names
attr-rgx=[a-z_][a-zA-Z0-9_]*$

# Regular expression which should only match correct argument names
argument-rgx=[a-z_][a-zA-Z0-9_]{1,30}$

# Regular expression which should only match correct variable names
# They are normally all lowercase, but when a constant, they are all uppercase.
variable-rgx=([a-z_][a-z0-9_]*|[A-Z_][A-Z0-9_]*)$

# Regular expression which should only match correct list comprehension /
# generator expression variable names
inlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$

# Good variable names which should always be accepted, separated by a comma
# Update this to supress warnings about inherrited names (C0103)
good-names=_,a,b,c,i,j,k,v,d,f,s,t,l,ex,_,orderBy,getByName,clauseTables

# Bad variable names which should always be refused, separated by a comma
bad-names=foo,bar,baz,toto,tutu,tata

# List of builtins function names that should not be used, separated by a comma
bad-functions=map,filter,apply,input,reduce


# checks for :
# * methods without self as first argument
# * overridden methods signature
# * access only to existant members via self
# * attributes not defined in the __init__ method
# * supported interfaces implementation
# * unreachable code
# 
[CLASSES]

# List of interface methods to ignore, separated by a comma. This is used for
# instance to not check methods defines in Zopes Interface base class.
ignore-iface-methods=isImplementedBy,deferred,extends,names,namesAndDescriptions,queryDescriptionFor,getBases,getDescriptionFor,getDoc,getName,getTaggedValue,getTaggedValueTags,isEqualOrExtendedBy,setTaggedValue,isImplementedByInstancesOf,adaptWith,is_implemented_by,providedBy,request,context

# List of method names used to declare (i.e. assign) instance attributes.
defining-attr-methods=__init__,__new__,setUp


# checks for
# * external modules dependencies
# * relative / wildcard imports
# * cyclic imports
# * uses of deprecated modules
# 
[IMPORTS]

# Deprecated modules which should not be used, separated by a comma
deprecated-modules=regsub,TERMIOS,Bastion,rexec

# Create a graph of every (i.e. internal and external) dependencies in the
# given file (report R0402 must not be disabled)
import-graph=

# Create a graph of external dependencies in the given file (report R0402 must
# not be disabled)
ext-import-graph=

# Create a graph of internal dependencies in the given file (report R0402 must
# not be disabled)
int-import-graph=


# checks for sign of poor/misdesign:
# * number of methods, attributes, local variables...
# * size, complexity of functions, methods
# 
[DESIGN]

# Maximum number of arguments for function / method (see R0913)
max-args=7

# Maximum number of locals for function / method body (see R0914)
max-locals=15

# Maximum number of return / yield for function / method body
max-returns=5

# Maximum number of branch for function / method body (see R0912)
max-branchs=10

# Maximum number of statements in function / method body (see R0915)
max-statements=50

# Maximum number of parents for a class (see R0901).
max-parents=7

# Maximum number of attributes for a class (see R0902).
max-attributes=20

# Minimum number of public methods for a class (see R0903).
min-public-methods=0

# Maximum number of public methods for a class (see R0904).
max-public-methods=50


# checks for similarities and duplicated code. This computation may be
# memory / CPU intensive, so you should disable it if you experiments some
# problems.
# 
[SIMILARITIES]

# Minimum lines number of a similarity.
min-similarity-lines=4

# Ignore comments when computing similarities.
ignore-comments=yes

# Ignore docstrings when computing similarities.
ignore-docstrings=yes


# checks for:
# * warning notes in the code like FIXME, XXX
# * PEP 263: source code with non ascii character but no encoding declaration
# 
[MISCELLANEOUS]

# List of note tags to take in consideration, separated by a comma.
notes=FIXME,XXX,TODO,fixme,todo


# checks for :
# * unauthorized constructions
# * strict indentation
# * line length
# * use of <> instead of !=
# 
[FORMAT]

# Maximum number of characters on a single line.
max-line-length=78

# Maximum number of lines in a module
max-module-lines=1000

# String used as indentation unit. This is usually " " (4 spaces) or "\t" (1
# tab).
indent-string='    '
