
CREATE OR REPLACE VIEW POExport AS SELECT
    coalesce(potmsgset.id::text, 'X') || '.' ||
    coalesce(pomsgset.id::text, 'X') || '.' ||
    coalesce(pomsgidsighting.id::text, 'X') || '.' ||
    coalesce(potranslationsighting.id::text, 'X') AS id,
    potemplatename.name,
    potemplatename.translationdomain,
    potemplate.id AS potemplate,
    potemplate.productrelease,
    potemplate.sourcepackagename,
    potemplate.distrorelease,
    potemplate.header AS potheader,
    pofile.language,
    pofile.variant,
    pofile.topcomment AS potopcomment,
    pofile.header AS poheader,
    pofile.fuzzyheader AS pofuzzyheader,
    pofile.pluralforms AS popluralforms,
    potmsgset.id AS potmsgsetid,
    potmsgset.sequence AS potsequence,
    potmsgset.commenttext AS potcommenttext,
    potmsgset.sourcecomment,
    potmsgset.flagscomment,
    potmsgset.filereferences,
    pomsgset.id AS pomsgsetid,
    pomsgset.sequence AS posequence,
    pomsgset.iscomplete,
    pomsgset.obsolete,
    pomsgset.fuzzy,
    pomsgset.commenttext AS pocommenttext,
    pomsgidsighting.pluralform AS msgidpluralform,
    potranslationsighting.pluralform AS translationpluralform,
    potranslationsighting.active,
    pomsgid.msgid,
    potranslation.translation
FROM
    pomsgid
    JOIN pomsgidsighting
        ON pomsgid.id = pomsgidsighting.pomsgid
    JOIN potmsgset
        ON potmsgset.id = pomsgidsighting.potmsgset
    JOIN potemplate
        ON potemplate.id = potmsgset.potemplate
    JOIN potemplatename
        ON potemplatename.id = potemplate.potemplatename
    JOIN pofile
        ON potemplate.id = pofile.potemplate
    LEFT OUTER JOIN pomsgset
        ON potmsgset.id = pomsgset.potmsgset
    LEFT OUTER JOIN potranslationsighting
        ON pomsgset.id = potranslationsighting.pomsgset
    LEFT OUTER JOIN potranslation
        ON potranslation.id = potranslationsighting.potranslation
WHERE
    pomsgset.id IS NULL OR pomsgset.pofile = pofile.id;

/*
This is the original view, which works much slower than the above.
Kept here in case we need to confirm results generated by the faster
one above to this one as originally assembled in Capetown 2005

CREATE OR REPLACE VIEW POExportOrg AS SELECT
    coalesce(potmsgset.id::text, 'X') || '.' ||
    coalesce(pomsgset.id::text, 'X') || '.' ||
    coalesce(pomsgidsighting.id::text, 'X') || '.' ||
    coalesce(potranslationsighting.id::text, 'X') AS id,
    potemplatename.name,
    potemplatename.translationdomain,
    potemplate.id AS potemplate,
    potemplate.productrelease,
    potemplate.sourcepackagename,
    potemplate.distrorelease,
    potemplate.header AS potheader,
    pofile.language,
    pofile.variant,
    pofile.topcomment AS potopcomment,
    pofile.header AS poheader,
    pofile.fuzzyheader AS pofuzzyheader,
    pofile.pluralforms AS popluralforms,
    potmsgset.id AS potmsgsetid,
    potmsgset.sequence AS potsequence,
    potmsgset.commenttext AS potcommenttext,
    potmsgset.sourcecomment,
    potmsgset.flagscomment,
    potmsgset.filereferences,
    pomsgset.id AS pomsgsetid,
    pomsgset.sequence AS posequence,
    pomsgset.iscomplete,
    pomsgset.obsolete,
    pomsgset.fuzzy,
    pomsgset.commenttext AS pocommenttext,
    pomsgidsighting.pluralform AS msgidpluralform,
    potranslationsighting.pluralform AS translationpluralform,
    potranslationsighting.active,
    pomsgid.msgid,
    potranslation.translation
FROM
    potemplatename, potemplate, pomsgidsighting, pomsgid, pofile,
    potmsgset LEFT OUTER JOIN (
        pomsgset LEFT OUTER JOIN (
            potranslationsighting LEFT OUTER JOIN potranslation
                ON potranslationsighting.potranslation = potranslation.id
            ) ON potranslationsighting.pomsgset = pomsgset.id
        ) ON potmsgset.id = pomsgset.potmsgset
WHERE
    potemplatename.id = potemplate.potemplatename
    AND potemplate.id = potmsgset.potemplate
    AND (pomsgset.id IS NULL OR pomsgset.pofile = pofile.id)
    AND potmsgset.id = pomsgidsighting.potmsgset
    AND pomsgid.id = pomsgidsighting.pomsgid
    AND potemplate.id = pofile.potemplate;

*/

ALTER TABLE pofile DROP CONSTRAINT pofile_id_key;

-- Create indexes so that there is one usable for every join condition.
-- We can remove them later if inserts are too slow or our stats show
-- some of them are unused. We will only know which ones are unused though
-- when we have tested on the production hardware with real data sets.

-- Indexes desirable for the VIEW
CREATE INDEX potemplate_potemplatename_idx ON potemplate(potemplatename);
CREATE INDEX pofile_potemplate_idx ON pofile(potemplate);
CREATE INDEX potranslationsighting_potranslation_idx
    ON potranslationsighting(potranslation);
CREATE INDEX potranslationsighting_pomsgset_idx
    ON potranslationsighting(pomsgset);

-- Indexes desirable for WHERE clauses being used
CREATE INDEX pofile_language_idx ON pofile(language);

-- Indexes desirable for sorting being used
CREATE INDEX pofile_variant_idx ON pofile(variant);
CREATE INDEX potmsgset_sequence_idx ON potmsgset(sequence);
CREATE INDEX pomsgset_sequence_idx ON pomsgset(sequence);
CREATE INDEX potranslationsighting_pluralform_idx
    ON potranslationsighting(pluralform);

INSERT INTO LaunchpadDatabaseRevision VALUES (14,05,0);
