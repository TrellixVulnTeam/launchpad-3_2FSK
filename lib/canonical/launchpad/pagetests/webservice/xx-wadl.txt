= Launchpad's WADL caching =

Because Launchpad's main WADL files are so big, we cache them
internally: one WADL file for every version of the web service.
Because the WADL only changes when the Launchpad software changes,
these documents are cached to files.

Let's retrieve one of those files now.

    >>> cached_wadl = webservice.get(
    ...     '/', 'application/vd.sun.wadl+xml', api_version='devel').body

    >>> cached_wadl = cached_wadl.decode('UTF-8')
    >>> 'http://api.launchpad.dev/devel/' in cached_wadl
    True

To look at the original documents, we need to deactivate the
cache. Simply clearing it out will just cause it to be filled up
again.

    >>> from canonical.launchpad.systemhomes import WebServiceApplication
    >>> old_wadl_cache = WebServiceApplication.cached_wadl
    >>> WebServiceApplication.cached_wadl = None

    >>> wadl = webservice.get(
    ...     '/', 'application/vd.sun.wadl+xml', api_version='devel').body
    >>> wadl = wadl.decode('UTF-8')

The uncached WADL is very similar to the cached WADL we retrieved
earlier. (It may not be identical because some of the stanzas show up
in random order.)

    >>> len(wadl) == len(cached_wadl)
    True

The WADL we received is keyed to the 'devel' version of the web
service. This version will always be present.

    >>> 'http://api.launchpad.dev/devel/' in wadl
    True

If we retrieve the WADL for the '1.0' version of the web service,
we'll get a document keyed to the '1.0' version. The '1.0' version
will be deprecated along with the Lucid release of Ubuntu.

    >>> wadl_10 = webservice.get(
    ...     '/', 'application/vd.sun.wadl+xml', api_version='1.0').body
    >>> wadl_10 = wadl_10.decode('UTF-8')

    >>> 'http://api.launchpad.dev/1.0/' in wadl_10
    True

If we retrieve the WADL for the 'beta' version of the web service,
we'll get a document keyed to the 'beta' version. The '1.0' version
will be deprecated along with the Karmic release of Ubuntu.

    >>> wadl_beta = webservice.get(
    ...     '/', 'application/vd.sun.wadl+xml', api_version='beta').body
    >>> wadl_beta = wadl_beta.decode('UTF-8')

    >>> 'http://api.launchpad.dev/beta/' in wadl_beta
    True

We don't need to check the documents as they're generated, so we'll
reinstate the cache. This way, other tests will have a clean slate.

    >>> WebServiceApplication.cached_wadl = old_wadl_cache

Like all lazr.restful applications, Launchpad's web service generates
valid WADL.

    >>> from lazr.restful import WADL_SCHEMA_FILE
    >>> from canonical.lazr.xml import XMLValidator
    >>> wadl_schema = XMLValidator(WADL_SCHEMA_FILE)

    # We need to replace the nbsp entity, because the validator
    # doesn't support embedded definition.
    >>> wadl_schema.validate(
    ...     wadl.replace('&nbsp;', '&#160;').encode('UTF-8'))
    True
