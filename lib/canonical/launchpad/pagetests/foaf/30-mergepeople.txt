  'foo' is a dupe account for 'no-priv'. Let's merge them, and keep only
  'no-priv'.

  First we have to go to the +requestmerge page.

  >>> print http(r"""
  ... GET /people/+requestmerge HTTP/1.1
  ... Authorization: Basic bm8tcHJpdkBjYW5vbmljYWwuY29tOnRlc3Q=
  ... """)
  HTTP/1.1 200 Ok
  ...
  ...<h1>Merge Launchpad accounts</h1>...
  ...


  If we try to merge a nonexistent account, we'll get an error page.

  >>> print http(r"""
  ... POST /people/+requestmerge HTTP/1.1
  ... Authorization: Basic bm8tcHJpdkBjYW5vbmljYWwuY29tOnRlc3Q=
  ... Content-Type: multipart/form-data; boundary=---------------------------153178557535218118471519623
  ... 
  ... -----------------------------153178557535218118471519623
  ... Content-Disposition: form-data; name="field.dupeaccount"
  ... 
  ... bar
  ... -----------------------------153178557535218118471519623
  ... Content-Disposition: form-data; name="UPDATE_SUBMIT"
  ... 
  ... Submit
  ... -----------------------------153178557535218118471519623--
  ... """)
  HTTP/1.1 200 Ok
  ...
  ...There are <strong>1</strong> input errors...
  ...


  The same will happen if we try to merge a team.

  >>> print http(r"""
  ... POST /people/+requestmerge HTTP/1.1
  ... Authorization: Basic bm8tcHJpdkBjYW5vbmljYWwuY29tOnRlc3Q=
  ... Content-Type: multipart/form-data; boundary=---------------------------153178557535218118471519623
  ... 
  ... -----------------------------153178557535218118471519623
  ... Content-Disposition: form-data; name="field.dupeaccount"
  ... 
  ... support@canonical.com
  ... -----------------------------153178557535218118471519623
  ... Content-Disposition: form-data; name="UPDATE_SUBMIT"
  ... 
  ... Submit
  ... -----------------------------153178557535218118471519623--
  ... """)
  HTTP/1.1 200 Ok
  ...
  ...There are <strong>1</strong> input errors...
  ...


  Then we find the duplicate account and request the merge.

  >>> print http(r"""
  ... POST /people/+requestmerge HTTP/1.1
  ... Authorization: Basic bm8tcHJpdkBjYW5vbmljYWwuY29tOnRlc3Q=
  ... Content-Type: multipart/form-data; boundary=---------------------------153178557535218118471519623
  ... 
  ... -----------------------------153178557535218118471519623
  ... Content-Disposition: form-data; name="field.dupeaccount"
  ... 
  ... foo
  ... -----------------------------153178557535218118471519623
  ... Content-Disposition: form-data; name="UPDATE_SUBMIT"
  ... 
  ... Submit
  ... -----------------------------153178557535218118471519623--
  ... """)
  HTTP/1.1 303 See Other
  ...
  Location: +requestmerge-multiple?dupe=...
  ...


  Get the id of the newly created user account (named 'foo') so we don't
  have problems if our sampledata changes.

  >>> from canonical.launchpad.database import PersonSet
  >>> dupe = PersonSet().getByName('foo')

  This is the page which displays all email addresses owned by the duplicate
  account. Here the user choses the ones which he want to claim.

  >>> print http(r"""
  ... GET /people/+requestmerge-multiple?dupe=%d HTTP/1.1
  ... Authorization: Basic bm8tcHJpdkBjYW5vbmljYWwuY29tOnRlc3Q=
  ... """ % dupe.id)
  HTTP/1.1 200 Ok
  ...
  ...has more than one registered e-mail address...
  ...


  Get the emails too, to make sure tests doesn't break if the ids used in
  sampledata changes.

  >>> from canonical.launchpad.database import EmailAddressSet
  >>> email1 = EmailAddressSet().getByEmail('foo@baz.com')
  >>> email2 = EmailAddressSet().getByEmail('bar.foo@canonical.com')

  >>> from canonical.launchpad.mail import stub
  >>> assert not stub.test_emails

  >>> print http(r"""
  ... POST /people/+requestmerge-multiple?dupe=%d HTTP/1.1
  ... Authorization: Basic bm8tcHJpdkBjYW5vbmljYWwuY29tOnRlc3Q=
  ... Content-Type: application/x-www-form-urlencoded
  ... 
  ... dupe=%d&selected=%d&selected=%d""" % (dupe.id, dupe.id, email1.id,
  ...                                       email2.id))
  HTTP/1.1 200 Ok
  ...
  ...Individual email messages were sent to...
  ...foo@baz.com...bar.foo@canonical.com...
  ...


  Get the token we'll have to use to finish the registration process.

  >>> assert len(stub.test_emails) == 2
  >>> emails = []
  >>> emails.append(stub.test_emails.pop())
  >>> emails.append(stub.test_emails.pop())
  >>> emails.sort()
  >>> from_addr1, to_addrs1, raw_msg1 = emails.pop()
  >>> from_addr2, to_addrs2, raw_msg2 = emails.pop()

  >>> import email, re
  >>> msg = email.message_from_string(raw_msg1)
  >>> body = msg.get_payload()
  >>> link = re.findall(r'http.*/token/.*', body)[0]
  >>> token = re.sub(r'.*token/', '', link)
  >>> base_path = '/token/%s' % token

  >>> print http(r"""
  ... GET %s HTTP/1.1
  ... Authorization: Basic bm8tcHJpdkBjYW5vbmljYWwuY29tOnRlc3Q=
  ... """ % base_path)
  HTTP/1.1 303 See Other
  ...
  Location: http://localhost:9000/token/.../+accountmerge
  ...


  Now the user goes to the page we sent a link via email to validate the first
  claimed email address.

  >>> path = "%s/+accountmerge" % base_path
  >>> print http(r"""
  ... GET %s HTTP/1.1
  ... Authorization: Basic bm8tcHJpdkBjYW5vbmljYWwuY29tOnRlc3Q=
  ... """ % path)
  HTTP/1.1 200 Ok
  ...
  ...trying to merge the Launchpad account...
  ...


  The user types his password and then proves that he is the owner of that
  e-mail address, but the merge wasn't finished because the duplicate account still
  have a registered email adresses.

  >>> print http(r"""
  ... POST %s HTTP/1.1
  ... Authorization: Basic bm8tcHJpdkBjYW5vbmljYWwuY29tOnRlc3Q=
  ... Content-Type: application/x-www-form-urlencoded
  ... 
  ... password=test""" % path)
  HTTP/1.1 303 See Other
  ...
  Location: http://localhost:9000/people/no-priv
  ...
  ...informational message">The e-mail address...
  ...

  >>> msg = email.message_from_string(raw_msg2)
  >>> body = msg.get_payload()
  >>> link = re.findall(r'http.*/token/.*', body)[0]
  >>> token = re.sub(r'.*token/', '', link)
  >>> token_base_path = '/token/%s' % token


  >>> print http(r"""
  ... GET %s HTTP/1.1
  ... Authorization: Basic bm8tcHJpdkBjYW5vbmljYWwuY29tOnRlc3Q=
  ... """ % token_base_path)
  HTTP/1.1 303 See Other
  ...
  Location: http://localhost:9000/token/.../+accountmerge
  ...


  Now the user proves that he's the owner of the second email address of the
  dupe account.

  >>> path = "%s/+accountmerge" % token_base_path
  >>> print http(r"""
  ... GET %s HTTP/1.1
  ... Authorization: Basic bm8tcHJpdkBjYW5vbmljYWwuY29tOnRlc3Q=
  ... """ % path)
  HTTP/1.1 200 Ok
  ...
  ...trying to merge the Launchpad account...
  ...


  And now the merge is completed successfully.

  >>> print http(r"""
  ... POST %s HTTP/1.1
  ... Authorization: Basic bm8tcHJpdkBjYW5vbmljYWwuY29tOnRlc3Q=
  ... Content-Type: application/x-www-form-urlencoded
  ... 
  ... password=test""" % path)
  HTTP/1.1 303 See Other
  ...
  Location: http://localhost:9000/people/no-priv
  ...
  ...informational message">The accounts have been merged successfully...


  Hack to start a new transaction and clear caches etc.

  >>> def new_transaction():
  ...     import transaction
  ...     import canonical.database.sqlbase
  ...     transaction.abort()
  ...     canonical.database.sqlbase.flush_database_caches()
  ...     transaction.begin()

  >>> new_transaction()

  Now we make sure that the team we just created and was owned by 'foo' is now
  owned by 'no-priv'.

  >>> from canonical.launchpad.database import PersonSet
  >>> team = PersonSet().getByName('myemail')
  >>> team.teamowner.name
  u'no-priv'

  Also make sure that foo@baz.com is now an email address of person no-priv.
  (testing here to diagnose failures occuring in 32-setpreferredemail.txt)

  >>> from canonical.launchpad.database import EmailAddressSet
  >>> EmailAddressSet().getByEmail('foo@baz.com').person.name
  u'no-priv'


  If the account we were trying to merge had a single email address, the
  process would be a little simpler.

  To demonstrate that, now we'll merge marilize@hbd.com into
  no-priv@canonical.com.

  >>> assert not stub.test_emails

  >>> print http(r"""
  ... POST /people/+requestmerge HTTP/1.1
  ... Authorization: Basic bm8tcHJpdkBjYW5vbmljYWwuY29tOnRlc3Q=
  ... Content-Type: multipart/form-data; boundary=---------------------------1501047532899874819173278502
  ... 
  ... -----------------------------1501047532899874819173278502
  ... Content-Disposition: form-data; name="field.dupeaccount"
  ... 
  ... marilize@hbd.com
  ... -----------------------------1501047532899874819173278502
  ... Content-Disposition: form-data; name="UPDATE_SUBMIT"
  ... 
  ... Submit
  ... -----------------------------1501047532899874819173278502--
  ... """)
  HTTP/1.1 303 See Other
  ...
  Location: ./+mergerequest-sent?dupe=55
  ...

  >>> assert len(stub.test_emails) == 1

  >>> print http(r"""
  ... GET /people/+mergerequest-sent?dupe=55 HTTP/1.1
  ... Authorization: Basic bm8tcHJpdkBjYW5vbmljYWwuY29tOnRlc3Q=
  ... """)
  HTTP/1.1 200 Ok
  ...
  ...An email message was sent to...marilize@hbd.com...
  ...

  Get the token we'll have to use to finish the registration process.

  >>> from_addr, to_addrs, raw_msg = stub.test_emails.pop()
  >>> assert not stub.test_emails
  >>> msg = email.message_from_string(raw_msg)
  >>> body = msg.get_payload()
  >>> link = re.findall(r'http.*/token/.*', body)[0]
  >>> token = re.sub(r'.*token/', '', link)
  >>> token_base_path = '/token/%s' % token

  ##>>> new_transaction()
  ##>>> from canonical.launchpad.database import LoginTokenSet
  ##>>> tokenobj = LoginTokenSet()[token]
  ##>>> tokenobj.email
  ##u'marilize@hbd.com'
  ##>>> tokenobj.token == token
  ##True

  ##>>> print http(r"""
  ##... GET %s HTTP/1.1
  ##... Authorization: Basic bm8tcHJpdkBjYW5vbmljYWwuY29tOnRlc3Q=
  ##... """ % token_base_path)
  ##HTTP/1.1 303 See Other
  ##...
  ##Location: http://localhost:9000/token/.../+accountmerge
  ##...


  ##>>> path = "%s/+accountmerge" % token_base_path
  ##>>> print http(r"""
  ##... POST %s HTTP/1.1
  ##... Authorization: Basic bm8tcHJpdkBjYW5vbmljYWwuY29tOnRlc3Q=
  ##... Content-Type: application/x-www-form-urlencoded
  ##... 
  ##... password=test&SUBMIT_CHANGES=Submit""" % path)
  ##HTTP/1.1 303 See Other
  ##...
  ##Location: http://localhost:9000/people/no-priv
  ##...
  ##...<div class="informational message">The accounts have been merged successfully. Everything that belonged to the duplicated account should now belong to your own account.</div>...
  ##...


  ##>>> print http(r"""
  ##... GET /people/no-priv HTTP/1.1
  ##... Authorization: Basic bm8tcHJpdkBjYW5vbmljYWwuY29tOnRlc3Q=
  ##... """)
  ##HTTP/1.1 200 Ok
  ##...
