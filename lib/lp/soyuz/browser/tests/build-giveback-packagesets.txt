= Test a user in a group can give back a package in a packageset =

    >>> from zope.component import getUtility
    >>> from lp.soyuz.interfaces.build import BuildStatus
    >>> from lp.registry.interfaces.distribution import IDistributionSet
    >>> from lp.buildmaster.interfaces.builder import IBuilderSet
    >>> from lp.soyuz.tests.test_publishing import SoyuzTestPublisher
    >>> from canonical.launchpad.webapp.servers import LaunchpadTestRequest
    >>> from zope.component import getMultiAdapter

Start the publisher, add a build and twiddle it

    >>> login('admin@canonical.com')
    >>> test_publisher = SoyuzTestPublisher()
    >>> test_publisher.prepareBreezyAutotest()
    >>> bob = getUtility(IBuilderSet)['bob']
    >>> binaries = test_publisher.getPubBinaries(binaryname='rebuild-test', builder=bob)
    >>> rebuild_build = binaries[0].binarypackagerelease.build
    >>> rebuild_build.buildstate = BuildStatus.FAILEDTOBUILD
    >>> transaction.commit()

Get the view for +index

    >>> empty_request = LaunchpadTestRequest(form={})
    >>> rebuild_build_view = getMultiAdapter((rebuild_build, empty_request),
    ...      name="+index")
    >>> rebuild_build_view.label
    u'i386 build of rebuild 666 in ubuntutest breezy-autotest RELEASE'
    >>> rebuild_build_view.user_can_retry_build
    True

Add our test user, joe, and check that they can't rebuild

    >>> joe = factory.makePerson(email='joe@example.com', password='test')
    >>> desktop = factory.makeTeam(name='desktop', owner=joe)
    >>> transaction.commit()
    >>> login('joe@example.com')
    >>> rebuild_build_view.user_can_retry_build
    False

Create our packageset, sprinkle rebuild into it, and allow desktop to upload it

    >>> login('admin@canonical.com')
    >>> from lp.soyuz.interfaces.packageset import IPackagesetSet
    >>> from canonical.launchpad.interfaces import IArchivePermissionSet
    >>> from canonical.launchpad.webapp.interfaces import (
    ...     IStoreSelector, MAIN_STORE, DEFAULT_FLAVOR, MASTER_FLAVOR)
    >>> main_archive = test_publisher.distroseries.main_archive
    >>> store = getUtility(IStoreSelector).get(MAIN_STORE, DEFAULT_FLAVOR)
    >>> from lp.registry.model.sourcepackagename import SourcePackageName
    >>> rebuild_ps = getUtility(IPackagesetSet).new(u'rebuild',
    ...     u'Test package set', desktop)
    >>> rebuild_spn = store.find(SourcePackageName,
    ...     SourcePackageName.name.like('rebuild'))
    >>> rebuild_ps.add(rebuild_spn)
    >>> perms = getUtility(IArchivePermissionSet).newPackagesetUploader(
    ...     main_archive, desktop, rebuild_ps)

Now joe should be able to upload it and retry it

    >>> getUtility(IArchivePermissionSet).isSourceUploadAllowed(main_archive,
    ...     'rebuild', desktop)
    True
    >>> getUtility(IArchivePermissionSet).isSourceUploadAllowed(main_archive,
    ...     'rebuild', joe)
    True
    >>> login('joe@example.com')
    >>> rebuild_build_view.user_can_retry_build
    True

