= Asking a New Question from a Project =

Even if projects are not QuestionTargets, it is still possible to create a
question from a project.

== Register a support contact who speaks a non-English language ==

To illustrate the supported languages behavior we need to register
a non-English speaker as a support contact for thunderbird.

    >>> from zope.testbrowser.testing import Browser
    >>> daf_browser = Browser()
    >>> daf_browser.addHeader('Authorization', 'Basic daf@canonical.com:daf')
    >>> daf_browser.open('http://launchpad.dev/~daf/+editlanguages')
    >>> daf_browser.title
    "Dafydd Harries's preferred languages"
    
    >>> daf_browser.getControl('Japanese').selected == True
    True

    >>> daf_browser.open(
    ...     'http://answers.launchpad.dev/thunderbird/+support-contact')
    >>> daf_browser.title
    'Answer contact for Mozilla Thunderbird'
    
    >>> daf_browser.getControl('I want to be an answer contact for '
    ...                        'Mozilla Thunderbird').selected = True
    >>> daf_browser.getControl('Continue').click()
    >>> from BeautifulSoup import BeautifulSoup
    >>> soup = BeautifulSoup(daf_browser.contents)
    >>> print soup.first('div', 'informational message').renderContents()
    You have been added as an answer contact for Mozilla Thunderbird.

And add Japanese to Sample Person's preferred languages.

    >>> sample_browser = Browser()
    >>> sample_browser.addHeader('Authorization', 
    ...                          'Basic test@canonical.com:test')
    >>> sample_browser.open(
    ...     'http://answers.launchpad.dev/~name12/+editlanguages')
    >>> sample_browser.title 
    "Sample Person's preferred languages"
    
    >>> sample_browser.getControl('Japanese').selected = True
    >>> sample_browser.getControl('Save').click()
    >>> soup = BeautifulSoup(sample_browser.contents)
    >>> print soup.first('div', 'informational message').renderContents()
    Added Japanese to your preferred languages.
    
== Ask a questions about a product in a Project ==

The user must login to proceed:

    >>> anon_browser.open('http://answers.launchpad.dev/mozilla')
    >>> anon_browser.getLink('Ask a question').click()
    Traceback (most recent call last):
      ...
    Unauthorized...
    
    >>> sample_browser.addHeader('Authorization', 
    ...                          'Basic test@canonical.com:test')
    >>> sample_browser.open('http://answers.launchpad.dev/mozilla')
    >>> sample_browser.getLink('Ask a question').click()
    >>> print sample_browser.title
    Ask a question about a project in the Mozilla Project

The workflow is identical to the regular one, except that the user must
select one of the Project's Products.

    >>> print sample_browser.getControl('Project').displayValue
    ['Mozilla Firefox']

Like for the regular workflow, the user is shown a list of languages,
with the supported languages flagged with an asterisk. Note that only
English is flagged as default because we do not know which Product the
question is about.

    >>> print sample_browser.getControl('Language').displayOptions
    ['English (en) *', 'Japanese (ja)']
    
    >>> sample_browser.getControl('Language').value = ['en']

The user enters a short summary of his problem.

    >>> sample_browser.getControl('Summary').value = (
    ...     'Problem displaying complex SVG')
    >>> sample_browser.getControl('Continue').click()

He's shown a list of similar questions in the product selected:

    >>> similar_questions = find_tag_by_id(
    ...     sample_browser.contents, 'similar-questions')
    >>> for row in similar_questions.fetch('tr', 'noted'):
    ...     print row.a.renderContents()
    Problem showing the SVG demo on W3C site

He can see which of his preferred languages are suppported.

    >>> print sample_browser.getControl('Language').displayOptions
    ['English (en) *', 'Japanese (ja)']
    
The user can still change the product against which he's asking the
question.

    >>> sample_browser.getControl('Mozilla Thunderbird').selected = True

If he empties the title, he'll get redirected to the first page.

    >>> sample_browser.getControl('Summary').value = ''
    >>> sample_browser.getControl('Add').click()

An error will inform him that the summary is missing:

    >>> from BeautifulSoup import BeautifulSoup
    >>> soup = BeautifulSoup(sample_browser.contents)
    >>> print soup.first('div', 'message').renderContents()
    You must enter a summary of your problem.

The newly selected product is still selected. He can see that this
product has support for Japanese as well as English.

    >>> print sample_browser.getControl('Language').displayOptions
    ['English (en) *', 'Japanese (ja) *']
    
when the user enters his problem again, similar questions against that 
product will be shown.

    >>> print sample_browser.getControl('Project').displayValue
    ['Mozilla Thunderbird']
    >>> sample_browser.getControl('Summary').value = (
    ...     'Problem displaying complex SVG')
    >>> sample_browser.getControl('Continue').click()

Since there are no similar questions against Thunderbird, an appropriate
message is displayed:

    >>> soup = BeautifulSoup(sample_browser.contents)
    >>> print soup.first('p').renderContents()
    There are no existing questions similar to the summary you entered.

Entering a description and clicking the 'Add' button will create the
question.

    >>> sample_browser.getControl('Description').value = (
    ... "I received an HTML message containing an inlined SVG\n"
    ... "representation of a chessboard. It didn't displayed properly.\n"
    ... "Is there a way to configure Thunderbird to display SVG properly?\n")
    >>> sample_browser.getControl('Add').click()
    >>> sample_browser.url
    '.../thunderbird/+question/...'
    >>> print sample_browser.title
    Mozilla Thunderbird question #...Problem displaying complex...
