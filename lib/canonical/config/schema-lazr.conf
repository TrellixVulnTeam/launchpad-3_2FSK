[answertracker]
# The database user which will be used to expire questions.
# datatype: string
dbuser: answertracker

# The number of days of inactivity required before a question in
# the open or needs information state is expired.
# datatype: integer
days_before_expiration: 15

# The email domain, to which incomings emails should be sent.
# datatype: string
email_domain: answers.launchpad.net


[archivepublisher]
# The database user which will be used by this process.
# datatype: string
dbuser: lucille

# Base directory for distribution archives.
# datatype: string
root: /var/tmp/archive/

# External base URL for distribution archives.
# datatype: string
base_url: http://ftpmaster.internal/


[branchscanner]
# The database user which will be used by this process.
# datatype: string
dbuser: branchscanner

# See [error_reports].
error_dir: none

# See [error_reports].
oops_prefix: none

# See [error_reports].
copy_to_zlog: false


[builddmaster]
# The database user which will be used by this process.
# datatype: string
dbuser: fiera

# datatype: string
default_sender_address: noreply@launchpad.net

# Command-line used to reset the virtual builder. 'vm_host'
# variable will be replaced by the context builder virtual
# machine host.
# datatype: string
vm_resume_command: echo %(vm_host)s

# The time in seconds that the builddmaster will wait for a
# reply from buildd slave.
# datatype: integer
socket_timeout: 40

# Activate the Build Notification system.
# datatype: boolean
send_build_notification: True

# datatype: string
default_sender_name: Launchpad Buildd System

# Controls the notification of sourcepackagerelease.creator.
# If disable only the default_recipient will be notified.
# datatype: boolean
notify_owner: True

# This is the command invoked by the buildd master when it wants
# to process a package upload into the launchpad. The buildd
# master splits the command on spaces so no escaping is allowed.
# If the token BUILDID is present, the build master will replace
# it with the ID of the build record for the upload.
# The build master will append the directory containing the files
# to the command before executing it.
# datatype: string
uploader: none

# Directory to be created to store build results.
# datatype: string
root: none


[buildsequencer]
# The name of the log file for the sequencer (passed to twistd)
# datatype: string
logfile: none

# If true, the buildsequencer will be started by the startup
# scripts. It makes no sense to allow the sequencer to start by
# default on a developer machine because they're unlikely to have
# a build farm of their own. This does not prevent the daemon
# from ever starting.
# datatype: boolean
launch: False

# If one of the subprocesses exits with a failure code then the
# build sequencer will email this address with the output of
# the subprocess. If this variable is set to a single dash then
# the output will simply be logged instead.
# datatype: string
mailproblemsto:

# datatype: boolean
spew: False

# datatype: string
smtphost: localhost

# datatype: string
fromaddress: launchpad@lists.canonical.com


[buildsequencer_job.template]
# The subprocess to run. You can assume LPCONFIG will be set
# and that PYTHONPATH will be set to include the launchpad/lib
# directory and that CWD will be the top level of the launchpad
# tree itself. But that is all.
# datatype: string
command: none

# The minimum delay between invocations of this job type. The
# slavescanner probably wants to be set to 5 seconds or so but
# the queue builder probably wants 5 minutes or so (900 seconds).
# Other tasks will have varying requirements placed on them.
# datatype: integer
mindelay: 1

# If set to true, the output of this job will always be logged to
# the sequencer log file.
# datatype: boolean
alwayslog: false


[buildsequencer_job.slave_scanner]
command: cronscripts/buildd-slave-scanner.py
mindelay: 5


[canonical]
# datatype: boolean
chunkydiff: True

# datatype: boolean
show_tracebacks: False

# datatype: string
noreply_from_address: noreply@launchpad.net

# datatype: existing_directory
pid_dir: /var/tmp

# datatype: string
bounce_address: bounces@canonical.com

# datatype: string
admin_address: system-error@launchpad.net


[checkwatches]
# The database user to run this process as.
# datatype: string
dbuser: checkwatches

# See [error_reports].
error_dir: none

# See [error_reports].
oops_prefix: none

# See [error_reports].
copy_to_zlog: false

# datatype: integer
batch_query_threshold: 10

# datatype: integer
default_socket_timeout: 30

# datatype: boolean
sync_comments: True

# datatype: boolean
sync_debbugs_comments: False

# The URL to the internal XML-RPC server.
# datatype: string
xmlrpc_url: http://xmlrpc-private.launchpad.dev:8087/bugs


[codehosting]
# datatype: string
logfile: -

# The prefix of the URL for the public area of the Supermirror.
# This value is usually not meaningful to change, so it should
# generally not be set explicitly so the default value is used.
#
# This should end with a slash.
#
# If that value is changed in production, the
# branch_url_constraint_not_supermirror database constraint
# should be updated.
# datatype: urlbase
supermirror_root: http://bazaar.launchpad.net/

# The URL of the XML-RPC endpoint that handles authentication of SSH
# users. This should implement IUserDetailsStorageV2.
#
# datatype: string
authentication_endpoint: none

# The URL of the XML-RPC endpoint used to provide the data that drives the
# virtual file systems used by the code hosting service. This should
# implement IBranchFileSystem.
#
# datatype: string
branchfs_endpoint: none

# The URL of the XML-RPC endpoint that provides the interface from the
# puller to the rest of Launchpad. This should implement IPullerAPI.
#
# datatype: string
branch_puller_endpoint: none

# See [error_reports].
oops_prefix: none

# datatype: string
bzr_lp_prefix: lp:

# The hosts which may be used to refer to this server's branches in lp: urls
# The double-comma is used to produce the empty string.
lp_url_hosts: edge,,production

# see [error_reports].
error_dir: none

# The prefix of the URL for the codehosting smart server.
# This value is usually not meaningful to change, so it should
# generally not be set explicitly so the default value is used.
#
# This should end with a slash.
# datatype: urlbase
smartserver_root: bzr+ssh://%(user)s@bazaar.launchpad.net/

# datatype: string
host_key_pair_path: none

# datatype: string
branches_root: none

# datatype: boolean
spew: False

# datatype: boolean
launch: False

# datatype: string
debug_logfile: none

# The URL prefix for links to the Bazaar code browser.
# Links are formed by appending the branch's unique name
# to the root URL.
# datatype: urlbase
codebrowse_root: http://bazaar.launchpad.net/

# The URL prefix for URLs that codebrowse requests should be
# internally proxied to.
# datatype: urlbase
internal_codebrowse_root:

# The URL prefix for where branches are served by URLs based on the
# branch ID.
# datatype: urlbase
internal_branch_by_id_root:

# datatype: string
banner: none

# datatype: string
port: tcp:5022

# See [error_reports].
copy_to_zlog: False

# Private mirror hosts
# A comma separated list of domain names that should not be shown
# to people not associated with the branch.  Any branches with a mirror
# location on one of the specified domains, or any of their subdomains
# will be hidden.  Should be removed when bug 235916 is fixed.
private_mirror_hosts: mysql.com

# Hostnames from which branches cannot be mirrored.
blacklisted_hostnames:

# The codehosting access log location. Information such as connection, SSH
# login and session start times will be logged here.
access_log: /tmp/codehosting-access.log


[codeimport]
# Where the Bazaar imports are stored.
# datatype: string
bazaar_branch_store: sftp://hoover@escudero/srv/importd/www/

# The default value of the update interval of a code import from
# Subversion, in seconds.
# datatype: integer
default_interval_subversion: 21600

# The default value of the update interval of a code import from
# CVS, in seconds.
# datatype: integer
default_interval_cvs: 43200

# Where the tarballs of foreign branches are uploaded for storage.
# datatype: string
foreign_tree_store: sftp://hoover@escudero/srv/importd/sources/

# After how many seconds to kill import workers that show no signs of
# activity.
worker_inactivity_timeout: 3600

[codeimportdispatcher]
# The directory where the code import worker should be directed to
# store its logs.
worker_log_dir: /var/tmp/sm-ng/logs

# Force the dispatcher to look for the code import machine with this
# hostname, rather than the hostname of the machine it is running on,
# so we can use a machine name from the sample data on developer
# machines.
forced_hostname: none

# Where to find the code import scheduler service.
codeimportscheduler_url: http://xmlrpc-private.launchpad.dev:8087/codeimportscheduler

# The maximum number of jobs to run on a machine at one time.
max_jobs_per_machine: 10

# See [error_reports].
copy_to_zlog: False

# See [error_reports].
error_dir: /var/tmp/codehosting.test/

# See [error_reports].
oops_prefix: CID


[codeimportworker]
# This code is used by the code-import-worker-db which lives in
# scripts/code-import-worker-db.py and
# lib/canonical/codehosting/codeimport/worker_monitor.py.

# The interval in seconds the worker should wait between updates to the
# heartbeat field of the CodeImportJob row representing a job.
heartbeat_update_interval: 30

# The amount of time which can elapse between updating a job's heartbeat
# field before the job is considered reclaimable.  This is somewhat
# arbitrarily chosen, but ten times the expected update interval should be
# enough of a margin to prevent false positives and short enough to not impact
# the throughput of the system when a job gets stuck for some reason.
maximum_heartbeat_interval: 300

# The code import worker stores its working files in a directory named
# worker-for-branch-${BRANCH_ID} in this directory.
working_directory_root: /var/tmp/codeimport/data

# See [error_reports].
copy_to_zlog: False

# See [error_reports].
error_dir: /var/tmp/codehosting.test/

# See [error_reports].
oops_prefix: CIW

[commercial]
# URL for salesforce proxy.
# datatype: string; a url
voucher_proxy_url: https://niobium.canonical.com

# Port for salesforce proxy.
# datatype: integer
voucher_proxy_port: 11050

# URL for purchasing a commercial subscription.
# datatype: string; a url
purchase_subscription_url: http://shop.canonical.com/product_info.php?products_id=230

# URL pointing to Ubuntu's licensing policy which Launchpad shares.
# datatype: string; a url
licensing_policy_url: https://help.launchpad.net/Legal/ProjectLicensing

[cveupdater]
# The database user which will be used by this process.
# datatype: string
dbuser: cve

# datatype: string
cve_db_url: http://cve.mitre.org/cve/downloads/allitems.xml.gz


[database]
# datatype: boolean
randomise_select_results: false

# Connection strings, format as per the PQconnectdb connection string as
# documented at:
#     http://www.postgresql.org/docs/8.3/static/libpq-connect.html
# Note that user is not included, as it is specified by the dbuser
# option. This allows config sections to easily override just the dbuser.
# datatype: pgconnection
main_master: dbname=launchpad_prod   host=hackberry.canonical.com
main_slave:  dbname=launchpad_prod_2 host=chokecherry.canonical.com
auth_master: dbname=launchpad_prod   host=hackberry.canonical.com
auth_slave:  dbname=launchpad_prod_2 host=chokecherry.canonical.com

# If the replication lag is more than this many seconds, slave databases
# will not be used.
max_usable_lag: 120

isolation_level: serializable

# SQL statement timeout in milliseconds. If a statement
# takes longer than this to execute, then it will be aborted.
# A value of 0 turns off the timeout. If this value is not set,
# PostgreSQL's default setting is used.
# datatype: integer
db_statement_timeout: none

# The statement timeout will be updated after this many
# ms of statements being executed, decreasing the statement
# timeout while the request is being processed. We don't just
# update the statement timeout after every query to control
# the number of unnecessary db queries sent.
# datatype: integer
db_statement_timeout_precision: 5000

# A soft request timeout in milliseconds.  If a request
# takes longer than this timeout, an oops will be logged.
# If unset, requests will not cause soft timeouts.
# datatype: integer
soft_request_timeout: None


[debug]
# Set this to true to compare memory and reference leaking
# from one request to the next. Turning this to true without
# setting the number of threads to 1 will give not-so-useful
# results.
references: False

# File to keep the reference count into.
references_scoreboard_file: /tmp/refcounts-scoreboard.txt

# Log file where leaks will be reported. Actually, this log will contain
# an entry for each request containing the time, the pageid and the increase
# in refcounts and memory.
references_leak_log: /tmp/references-leak.log

[distributionmirrorprober]
# The database user which will be used by this process.
# datatype: string
dbuser: distributionmirror

# The time in seconds that the mirror prober will wait for
# a reply.
# datatype: integer
timeout: 30

# Should we set an http_proxy environment variable before
# running the prober?
# datatype: boolean
use_proxy: True

# If true, the mirror prober will only try to connect to
# localhost; all other hosts it'll return a success without
# even trying to connect.
# datatype: boolean
localhost_only: False

# The URL to the file containing the list of ISO images that a
# mirror must contain.
# datatype: string
cdimage_file_list_url: http://releases.ubuntu.com/.manifest


[error_reports]
# A prefix for "OOPS" codes for this process instance.
# This is used to allow storing the reports from different
# Launchpad instances in the same directory structure.
# datatype: string
oops_prefix: none

# Directory to write error reports to.
# datatype: string
error_dir: none

# Should exceptions be sent to the zope log as well as being
# saved to disk?
# datatype: boolean
copy_to_zlog: False


[expiredmembershipsflagger]
# The database user which will be used by this process.
# datatype: string
dbuser: teammembership


[gina]
# The database user which will be used by this process.
# datatype: string
dbuser: gina


[gina_target.template]
# The distribution name (e.g. ubuntu) from where the packages
# will be taken and to where they will be imported into
# launchpad. A distribution with name DISTRO must be created
# on launchpad before been used because gina is not able to
# create distributions.
# datatype: string
distro: none

# The distroseries name (e.g. hoary) from where the packages
# will be taken and to where they will be imported (published)
# into launchpad. A distroseries with name DISTROSERIES inside
# the distribution DISTRO must be created on launchpad before
# been used because gina is not able to create distroseries.
# datatype: string
distroseries: none

# A comma separated list with the architectures that should
# be imported into Launchpad. DistroArchSeries entries for
# this architectures having the architecturetag equal to each
# element in ARCHS should be created previously for the given
# DISTROSERIES.
# datatype: string
architectures: i386,powerpc,amd64

# A comma separated list with the component names
# that should be imported into launchpad. As well as in
# distribution and distroseries the components must already
# exists inside launchpad. Currently the componentselection
# table is not checked but ideally it too should be populated.
# datatype: string
components: main,universe,restricted,multiverse

# A full path to where the keyrings files are
# available. These keyrings are used to look up who signed
# what wherever possible.
# datatype: string
keyrings: /usr/share/keyrings

# ROOT is the full path to a debian-style archive from where
# the packages and its info will be read. This directory
# should contain a pool and dists pair of trees.
# datatype: string
root: none

# The pocket where this import should go. A "pocket" is a
# sub-archive for a distribution series. The default pocket
# is called "release", others are "security", "updates" and
# "proposed". There may be more. Packages can be published in
# a specific pocket after the release is made, before that
# they will always be published in the "release" pocket.
# datatype: string
pocket: release

# The distroseries name to where packages should be published
# when working with pockets. Thats because on debian model
# hoary-updates can be seen as another distroseries but it
# does not happens on launchpad.
# datatype: string
pocketrelease: none

# If specified, override packages' components to this value.
# This only affects the publisher tables and may also override
# the archive according to the existing component/archive
# overriding rules.
# datatype: string
componentoverride: none

# The Katie database that should be used to extract extra
# information from.
# datatype: string
katie_dbname: none

# If true, only the source packages are imported and the
# binary packages ignored.
# datatype: boolean
source_only: false

# If true, only the source package names are imported into
# Launchpad
# datatype: boolean"
sourcepackagenames_only: false


[gina_target.hoary.optional]
# This section is only used in tests. The test conf must set the key values.

[gina_target.breezy.optional]
# This section is only used in tests. The test conf must set the key values.

[gina_target.dapper.optional]
# This section is only used in tests. The test conf must set the key values.

[gina_target.dapper-updates.optional]
# This section is only used in tests. The test conf must set the key values.

[gina_target.bogus.optional]
# This section is only used in tests. The test conf must set the key values.

[gina_target.partner.optional]
# This section is only used in tests. The test conf must set the key values.

[gina_target.lenny.optional]
components: main,contrib,non-free
distro: debian
distroseries: lenny
pocketrelease: testing

[gina_target.sid.optional]
components: main,contrib,non-free
distro: debian
distroseries: sid
pocketrelease: unstable


[google_test_service]
# Run a web service stub that simulates the Google search service.

# Where are our canned XML responses stored?
canned_response_directory: lib/canonical/launchpad/ftests/googlesearches/

# Which file maps service URLs to the XML that the server returns?
mapfile: lib/canonical/launchpad/ftests/googlesearches/mapping.txt

# Where should the service log files live?
log: google-stub.log

# Do we actually want to run the service?
launch: False


[google]
# client_id is the unique id Launchpad was issued by Google.
# datatype: string
client_id: 011948274177882366108%3Aixpjdn21yfg

# site is the host and path that search requests are made to.
# eg. http://www.google.com/cse
# datatype: string, a url to a host
site: http://www.google.com/cse

# url_rewrite_exceptions is a list of launchpad.net domains that must
# not be rewritten.
# datatype: string of space separated domains
# Example: help.launchpad.net login.launchapd.net
url_rewrite_exceptions: help.launchpad.net

# maps_api_key is the API key we use for Google Maps. Values for the API
# keys are documented in lib/canonical/launchpad/google.txt
# The default value is the key for the launchpad.net domain, so we only
# need to override it when running in dev mode.
# datatype: string
maps_api_key: ABQIAAAACeZ5XCmHJlEwBYdSuT5n8xSpSJz2e5W2U1FEKkpRR5DvAoRnExQHcQr64ybfyPfb3_vaIFpvET1ZJg

[gpghandler]
# Host running PKS-like (SKS) keyserver Application.
# datatype: ip_address_or_hostname
host: keyserver.internal

# A public host running PKS-like (SKS) keyserver Application.
# This option is used to display links in the UI referring to
# the public keyserver.
# datatype: ip_address_or_hostname
public_host: keyserver.ubuntu.com

# Port number on Host to access the keyserver.
# datatype: int
port: 11371


[karmacacheupdater]
# The database user which will be used by this process.
# datatype: string
dbuser: karma

# When calculating karma, if a categories scaling factor is
# larger than this it is reduced down to this maximum. This is
# to stop ridiculous spikes when a new category is added and
# there is little karma in the category's pool.
# datatype: integer
max_scaling: 500


[launchpad]
# The database user which will be used by this process.
# datatype: string
dbuser: launchpad

# If true, the main template will be styled so that it is
# obvious to the end user that they are using a demo system
# and that any changes they make will be lost at some point.
# This should not be true for any systems talking to the
# production database.
# datatype: boolean
is_demo: False

# Should the 'edge system' indicator in the footer be turned on?
# Should be true for edge and false for all other live systems.
is_edge: False

# On launchpad.net, Launchpad's version and revision numbers aren't shown,
# because it's a Web site. Should be True for launchpad.net and False for all
# other systems.
# datatype: boolean
is_lpnet: False

# Proxy to be used when issuing HTTP requests.
#
# XXX: StuartBishop 2007-06-09: This should be in the canonical section,
# not the Launchpad section? At the moment, there are only scripts
# using this.
# datatype: string
http_proxy: http://squid.internal:3128/

# Session cookies being sent to a subdomain of the parent
# domains listed here will be sent to the parent domain,
# allowing sessions to be shared between vhosts.
# Domains should not start with a leading '.'.
cookie_domains: demo.launchpad.net, staging.launchpad.net, launchpad.net, launchpad.dev

# Maximum size of product release download files in bytes. A value
# of 0 means no limit.
# datatype: integer
# 200MiB
max_productrelease_file_size: 209715200

# Maximum size of a product release download file signature in bytes.
# A value of 0 means no limit.
# datatype: integer
max_productrelease_signature_size: 1024

# If this is provided, the message given in the string will appear
# in the site status bar at the top of every page.
# datatype: string
site_message:

# The default size used in a batched branch listing of results.
# Set the batching size for branch listings to be small, but
# different from the default size when testing so we can confirm
# that it is using the appropriate setting.
# datatype: integer
branchlisting_batch_size: 100

# If restrict_to_team is set (such as on the beta
# website), then this indicates the hostname suffix for
# the non-restricted version of Launchpad.  Replacing
# config.launchpad.vhosts.mainsite.hostname with this
# value in a URI should give a valid host.
#
# This is intended to provide a way for non beta-testers
# to get back to the production instance if they are
# given a beta URL.
# datatype: string
non_restricted_hostname: launchpad.net

# If set, the host name to redirect beta testers to.
# e.g. beta.launchpad.net
# datatype: string
beta_testers_redirection_host: none

# Domain where incoming email related to specifications are sent to.
# datatype: string
specs_domain: specs.launchpad.net

# Number of seconds a blob stored in the temporary blob storage
# must remain before it may be garbage collected.
# datatype: integer
default_blob_expiry: 10800

# The default size used in a batched listing of results. See
# canonical.launchpad.webapp.batching for details. Use a
# small list for development because there is not a lot of
# sampledata.
# datatype: integer
default_batch_size: 50

# The maximum batch size that can be requested. A higher
# number will raise an InvalidBatchSizeError.
# datatype: integer
max_batch_size: 300

# Maximum size of bug attachments in bytes. A value of 0 means
# no limit.
# datatype: integer
max_bug_attachment_size: 0

# Email address, to which all error reports are sent.
# Messages should have distinct Subject: or Keywords: headers
# so they can be filtered easily. Whenever code starts using this,
# we probably need to setup a new Mailman topic in the
# launchpad-error-reports mailing list or the error reports will
# be lost.
# datatype: string
errors_address: launchpad-error-reports@lists.canonical.com

# Email address for the Launchpad users mailing list.
# datatype: string
users_address: launchpad-users@lists.launchpad.net

# If this is provided, only members of the given team, and
# launchpad admins, may access the site.  Anonymous access is
# not allowed.  If this is provided, but not a known team name,
# only launchpad admins may access the site.
# datatype: string
restrict_to_team:

# The maximum number of minutes that Branch feeds should be cached for.
# datatype: integer
max_branch_feed_cache_minutes: 60

# The maximum number of minutes that Revision feeds should be cached for.
# datatype: integer
max_revision_feed_cache_minutes: 60

# Maximum size of blobs that can be stored in the temporary
# blob storage. Set to 0 for unlimited.
# datatype: integer
max_blob_size: 0

# datatype: integer
branch_dormant_days: 180

# The maximum number of minutes that feeds should be cached for.
# This is used to set the Expires and Cache-Control headers.
# datatype: integer
max_feed_cache_minutes: 60

# The maximum number of direct user-to-user emails allowed within a certain
# time period.
# datatype: int
user_to_user_max_messages: 3

# The time period for calculating the maximum number direct emails per user.
# datetime: canonical.lazr.config.as_timedelta
user_to_user_throttle_interval: 24h

# OOPS reports root for linking to OOPS reports.
# datatype: urlbase
oops_root_url: https://devpad.canonical.com/~matsubara/oops.cgi/

# Domain part of the bugs' email addresses. All email addresses in
# this domain should get redirected to the MailIntoLaunchpad handler.
# datatype: string
bugs_domain: bugs.launchpad.net

# Domain part of the code's email addresses. All email addresses in
# this domain should get redirected to the code mail handler.
# datatype: string
code_domain: code.launchpad.net

# The URL prefix for importd's bzr branches that it imports from
# other RCSes like CVS.  Used to generate URLs for the branch
# puller to use, not for public URLs.
# datatype: urlbase
bzr_imports_root_url: http://escudero.ubuntu.com:680/

# This key allows us to selectively disable the bug search feeds
# because of performance concerns.
# datatype: boolean
is_bug_search_feed_active: True

# The maximum number of minutes that Bug feeds should be cached for.
# datatype: integer
max_bug_feed_cache_minutes: 60

# datatype: integer
code_homepage_product_cloud_size: 120

# The referrers and the trust_roots they are allowed to pre-authorize.
# (e.g. http://referrer.example.com http://trustroot.example.com)
# datatype: string
openid_preauthorization_acl: None


[launchpad_session]
# The hostname where the session database is located.
# If the value is empty or None, localhost via UNIX sockets
# will be used by the database adapter.
# datatype: string
dbhost: none

# The name of the session database.
# datatype: string
dbname: session_prod

# The name of the session database user.
# datatype: string
dbuser: session

# The id of the cookie used to store the session token.
# datatype: string
cookie: launchpad


[librarian]
# The database user which will be used by this process.
# datatype: string
dbuser: librarian

isolation_level: read_committed

# Port number Librarian listens for storage requests on.
# datatype: int
upload_port: 9090

# Port number the Restricted Librarian listens for storage
# requests on.
# datatype: int
restricted_upload_port: 9095

# Port number Librarian listens for HTTP GET and
# HEAD requests on.
# datatype: int
download_port: 8000

# Port number Restricted Librarian listens for HTTP GET and
# HEAD requests on.
# datatype: int
restricted_download_port: 8005

# Host Librarian is listening on for storage requests.
# datatype: ip_address_or_hostname
upload_host: localhost

# Host Librarian is listening on for HTTP requests.
# datatype: ip_address_or_hostname
download_host: localhost

# Host the Restricted Librarian is listening on for storage
# requests.
# datatype: ip_address_or_hostname
restricted_upload_host: localhost

# Host the Restricted Librarian is listening on for HTTP requests.
# datatype: ip_address_or_hostname
restricted_download_host: localhost

# The base URL used to generate URLs to the Library contents.
# Note that this might be on a different host or port to what is
# specified above if access to the Library is via Apache redirects.
# datatype: urlbase
download_url: http://librarian.launchpad.net/

# The base URL used to generate URLs to the Restricted Library contents.
# datatype: urlbase
restricted_download_url: http://restricted-librarian.launchpad.net/

[librarian_gc]
# The database user which will be used by this process.
# datatype: string
dbuser: librariangc


[librarian_server]
# datatype: ip_address_or_hostname
upstream_host: none

# datatype: port_number
upstream_port: 80

# datatype: boolean
launch: False

# datatype: boolean
spew: False

# datatype: string
logfile: -

# The log file used by the restricted version of the Librarian.
# datatype: string
restricted_logfile: -

# datatype: string
root: none


# Mailman configuration.  This is only a shim to the real Mailman
# configuration system and is primarily used to specify settings that
# differ from the defaults, or are needed during the build.
[mailman]

# This string is used in the X-Launchpad-Hash header as salt in a hash that's
# added whenever a Launchpad-generated message will potentially get delivered
# to a Mailman mailing list. The header basically just tells Mailman that the
# message should be pre-approved.
# datatype: string
shared_secret: sutsGNcUEpc

# datatype: string
beta_testers_team: mailing-list-beta-testers

# datatype: string
list_help_header: https://help.launchpad.net/ListHelp

# datatype: string
archive_address: archive@mail-archive.com

# Whether Mailman should be started (i.e mailmanctl start).
# datatype: boolean
launch: False

# datatype: integer
xmlrpc_runner_sleep: 10

# The hostname and port in the form of hostname:port.
# datatype: string
smtp: localhost:25

# The list owner header is a template URL that may contain
# $team_name in it.
# datatype: string
list_owner_header_template: https://launchpad.net/~$team_name

# datatype: string
xmlrpc_url: http://xmlrpc-private.launchpad.dev:8087/mailinglists

# datatype: string
archive_url_template: http://lists.launchpad.net/$team_name

# The list subscription header is a template URL that may contain
# $team_name in it.
# datatype: string
list_subscription_headers: https://launchpad.net/~$team_name

# The XMLRPC qrunner batch size when requesting mailing list information.  The
# qrunner will only ask for the info for these number of mailing lists at a
# time, though all will be requested during any one time through the loop.
# datatype: integer
subscription_batch_size: 25

# See [error_reports].
error_dir: none

# See [error_reports].
oops_prefix: none

# See [error_reports].
copy_to_zlog: false

# Whether Mailman should be built if it is not already.
# datatype: boolean
build: false

# Specify Mailman's configure's --prefix argument.
# If a value is given we assume it's a path and make it absolute.
# datatype: string
build_prefix:

# The 'VAR_DIR' location.  This is where Mailman will put and look
# for variable run time data, such as the list pickles and queue
# directories.
# datatype: string
build_var_dir: /var/mailman

# The user:group names that the Mailman process will run under.
# You may need to invoke buildmailman.py or "make run" as root via
# sudo to have the necessary permissions during the build or run
# phase.  Leave this commented to use the current user and group.
# datatype: string
build_user_group:

# Specify the site list's owner address and password
# If not set, a fake email address and random password
# will be used.
# datatype: string
build_site_list_owner:

# set this if you want a host_name other than the current
# machine's `hostname -f`.  This is only used for the email domain
# part.
# datatype: string
build_host_name:


[malone]
# A team which can use the comment syncing interface for bug watches.
# If it's set to None, the comment syncing interfaces will be visible
# for everyone.
# datatype: string or None
comment_syncing_team: launchpad-beta-testers

# The From address for Malone email interface errors.
# datatype: string
bugmail_error_from_address: none

# The database user which will be used to send bug notifications.
# datatype: string
bugnotification_dbuser: bugnotification

# The batch size of bug lists.
# Use a small batch size to actually be able to verify batching
# works with our limited sampledata. Use a different one from
# the default batch size to be able to actually tell it's
# being used.
# datatype: integer
buglist_batch_size: 20

# The maximum number of characters a bug comment can be
# without being truncated when displayed on the main bug page.
# datatype: integer
max_comment_size: 3200

# The number of days of inactivity required before an unassigned
# bugtask with the status of INCOMPLETE is expired.
# datatype: integer
days_before_expiration: 60

# The number of minutes that at most should pass between
# changes to a bug to cause them to be grouped together into a
# single notification.
# datatype: integer
bugnotification_interval: 5

# Whether comments should be searched when searching bugs.
# datatype: boolean
search_comments: False

# The database user that will be used to expire bugtask.
# datatype: string
expiration_dbuser: bugnotification

# Where the sample debbugs db is located.
# datatype: string
debbugs_db_location: /srv/bugs-mirror.debian.org/


[person_notification]
# User for person notification db access
# datatype: string
dbuser: personnotification

# The number of days we should keep the notification records.
# datatype: integer
retained_days: 366


[personalpackagearchive]
# Directory to be created to store PPAs.
# datatype: string
root: /var/tmp/ppa

# Directory to be created to store private PPAs.
# datatype: string
private_root: /var/tmp/private-ppa

# External base URL for PPAs.
# datatype: string
base_url: http://ppa.launchpad.net

# External base URL for private PPAs.
# datatype: string
private_base_url: https://private-ppa.launchpad.net

# Directory where secret signing-keys will be stored.
# datatype: string
signing_keys_root: /var/tmp/ppa-signing-keys


[poimport]
# The database user which will be used by this process.
# datatype: string
dbuser: poimport


[processmail]
# The database user which will be used by this process.
# datatype: string
dbuser: processmail


[productreleasefinder]
# The database user which will be used by this process.
# datatype: string
dbuser: productreleasefinder

[profiling]
# When set to True, each requests will be profiled and the resulting data
# saved in profile_dir.
# datatype: boolean
profile_requests: False

# Directory to save profile info. The filename is in the format
# <timestamp>-<threadName>.prof
# datatype: filename
profile_dir: .

# If this option is set, that file will contain a log of the VSS and RSS
# at the start and end of each request.
# datatype: filename
memory_profile_log:


[revisionkarma]
# The database user which will be used by this process.
# datatype: string
dbuser: revisionkarma


[rosettaadmin]
# The database user which will be used by this process.
# datatype: string
dbuser: rosettaadmin

# From-address used in PO import, export and language
# pack notifications.
# datatype: string
email: rosetta@launchpad.net


[shipit]
# The database user which will be used by this process.
# datatype: string
dbuser: shipit

# datatype: string
admins_email_address: info@shipit.ubuntu.com

# datatype: integer
max_cds_for_auto_approval: 19

# datatype: string
ubuntu_from_email_address: noreply@shipit.ubuntu.com

# datatype: string
edubuntu_from_email_address: noreply@shipit.edubuntu.com

# datatype: string
kubuntu_from_email_address: noreply@shipit.kubuntu.com

# datatype: boolean
prerelease_mode: False

# datatype: string
beta_download_link: http://www.ubuntu.com/testing/hardy/beta


# For the personal standing updater cron script.
[standingupdater]
dbuser: standingupdater
# datatype: integer
approvals_needed: 3


[statistician]
# The database user which will be used by this process.
# datatype: string
dbuser: statistician


[supermirror]
# The database user which will be used by this process.
# datatype: string
dbuser: supermirror

# datatype: string
masterlock: /var/tmp/bazaar.launchpad.dev/masterlock

# The longest period of time, in seconds, that the scheduler will
# wait for the worker to produce meaningful output.
# datatype: integer
worker_timeout: 900

# URL prepended to branch ids to obtain internal branch URLs.
# datatype urlbase
warehouse_root_url: http://bazaar.launchpad.dev/

# datatype: string
branchesdest: /var/tmp/bazaar.launchpad.dev/mirrors

# datatype: integer
maximum_workers: 4


[supermirror_import_puller]
# See [error_reports].
error_dir: none

# See [error_reports].
oops_prefix: none

# See [error_reports].
copy_to_zlog: false


[supermirror_mirror_puller]
# See [error_reports].
error_dir: none

# See [error_reports].
oops_prefix: none

# See [error_reports].
copy_to_zlog: false


[supermirror_upload_puller]
# See [error_reports].
error_dir: none

# See [error_reports].
oops_prefix: none

# See [error_reports].
copy_to_zlog: false


[targetnamecacheupdater]
# The database user which will be used by this process.
# datatype: string
dbuser: targetnamecacheupdater


[uploader]
# The database user which will be used by this process.
# datatype: string
dbuser: uploader

# datatype: string
default_recipient_name: none

# datatype: string
default_sender_address: none

# datatype: string
default_recipient_address: none

# datatype: string
default_sender_name: none


[uploadqueue]
# The database user which will be used by this process.
# datatype: string
dbuser: queued


[binaryfile_expire]
dbuser: binaryfile-expire


[vhosts]
# When true, use https URLs unless explicitly overridden.
# When false, use http URLs unless explicitly overridden.
# datatype: boolean
use_https: True


[vhost.template]
# Host name of this virtual host.
# This is matched from the incoming Host header, and
# also used to put together URLs if rooturl is not provided.
# Example: launchpad.net
# datatype: string
hostname: none

# Alternative host names to match, in addition to
# the one given in hostname, comma separated.
# Example: wwwww.launchpad.net, www.launchpad.net
# datatype: string
althostnames: none

# Explicit root URL for this virtual host.
# If this is not provided, the root URL is calculated
# based on the host name.
# Example: https://launchpad.net/
# datatype: string
rooturl: none


[vhost.mainsite]
# Can the profile page act as a OpenID delegated identity?
# data-type: boolean
openid_delegate_profile: False


[vhost.api]
# The name of the team whose members may access the web service.
# If the value is set to None, any person with an OAuth token
# may access the service. If the name does not match a team name,
# no one can access the web service.
# data-type: string, a team name or None.
beta_test_team: launchpad


[vhost.blueprints]


[vhost.code]


[vhost.translations]


[vhost.bugs]


[vhost.answers]

# XXX sinzui 2008-09-04 bug=264783:
# Remove this vhost.
[vhost.openid]


[vhost.id]


[vhost.shipitubuntu]


[vhost.shipitkubuntu]


[vhost.shipitedubuntu]


[vhost.xmlrpc]


[vhost.xmlrpc_private.optional]


[vhost.feeds]


# Stubed Key server for test proposes, it's able to server
# in SKS fortmat, a restricted set of keys. (fixed address at
# localhost:11371)
[zeca]
# Directory to be created to store the pre-installed key-files
# datatype: string
root: /var/tmp/zeca


# Configuration specific for code that is running in the Zopeless
# environment. Hopefully this section will disappear when the
# Zope and Zopeless environments grow closer.
[zopeless]
# datatype: port_number
smtp_port: 25

# datatype: ip_address_or_hostname
smtp_host: localhost

# datatype: boolean
send_email: true
