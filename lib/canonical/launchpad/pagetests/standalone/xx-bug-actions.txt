The bug index page includes an actions portlet, which provides various
links to add things to the bug.

  >>> user_browser.open(
  ...     'http://launchpad.dev/distros/debian/+source/mozilla-firefox/+bug/3')
  >>> print user_browser.contents
  <...
  ...Mark as Duplicate...
  ...Activity Log...

  Tests the marking of a bug that is a duplicate of a duplicate.

  >>> user_browser.getLink('Mark as Duplicate').click()
  >>> print user_browser.url
  http://launchpad.dev/distros/debian/+source/mozilla-firefox/+bug/3/+duplicate

  >>> user_browser.getControl('Duplicate Of').value = '6'
  >>> user_browser.getControl('Change').click()
  >>> print user_browser.contents
  <...
  <p class="error message">There is 1 error</p>
  ...
  ...already a duplicate...


  Tests the marking of a bug that is a duplicate of itself.

  >>> user_browser.getControl('Duplicate Of').value = '3'
  >>> user_browser.getControl('Change').click()
  >>> print user_browser.contents
  <...
  <p class="error message">There is 1 error</p>
  ...
  ...can't mark a bug as a duplicate of itself...
  ...


  Tests the marking of a bug that is already marked as duplicate with
  the same value. In this case, nothing should happen, since nothing
  changed.

  >>> user_browser.open(
  ...     'http://launchpad.dev/products/firefox/+bug/6/+duplicate')
  >>> user_browser.getControl('Duplicate Of').value
  '5'
  >>> user_browser.getControl('Change').click()
  >>> user_browser.url
  'http://launchpad.dev/products/firefox/+bug/6'


  Tests the input of data that is not a valid value.

  >>> user_browser.open(
  ...     'http://launchpad.dev/products/firefox/+bug/6/+duplicate')
  >>> user_browser.getControl('Duplicate Of').value = 'xajskd'
  >>> user_browser.getControl('Change').click()
  >>> print user_browser.contents
  <...
  ...Not a valid bug number or nickname...
  ...

  Tests using a bug nickname as the duplicate value

  >>> user_browser.open(
  ...     'http://launchpad.dev/products/evolution/+bug/7/+duplicate')
  >>> user_browser.getControl('Duplicate Of').value = 'blackhole'
  >>> user_browser.getControl('Change').click()
  >>> user_browser.url
  'http://launchpad.dev/products/evolution/+bug/7'


  Marking a bugX as a duplicate of bugY is not allowed if bugX has dupes.

  >>> user_browser.open(
  ...     'http://launchpad.dev/products/firefox/+bug/5/+duplicate')
  >>> user_browser.getControl('Duplicate Of').value = '4'
  >>> user_browser.getControl('Change').click()
  >>> print user_browser.contents
  <...
  ...There are other bugs already...
  ...

  >>> from canonical.launchpad.database import Bug
  >>> Bug.get(5).duplicateof is None
  True
