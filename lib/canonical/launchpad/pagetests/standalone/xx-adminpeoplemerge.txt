There's an admin interface to merge accounts. Let's test it.

First, it shouldn't be possible to access the page without the proper
authorization. Sample Person isn't allowed here.

  >>> print http(r"""
  ... GET /people/+adminrequestmerge HTTP/1.1
  ... Authorization: Basic dGVzdEBjYW5vbmljYWwuY29tOnRlc3Q=
  ... """)
  HTTP/1.1 403 Forbidden
  ...Not allowed here...
  ...
  ...You are logged in as <span>Sample Person</span>...
  ...


Now we try to access the +adminrequestmerge page with the FooBar admin.

  >>> print http(r"""
  ... GET /people/+adminrequestmerge HTTP/1.1
  ... Authorization: Basic Zm9vLmJhckBjYW5vbmljYWwuY29tOnRlc3Q=
  ... """)
  HTTP/1.1 200 Ok
  ...
  ...Admin interface to merge two accounts...
  ...


We choose an invalid account and try to merge it.

  >>> print http(r"""
  ... POST /people/+adminrequestmerge HTTP/1.1
  ... Authorization: Basic Zm9vLmJhckBjYW5vbmljYWwuY29tOnRlc3Q=
  ... 
  ... field.dupe_account=aaaaaa&field.target_account=mark&continue=Continue""")
  HTTP/1.1 200 Ok
  ...
  ...<p class="error message">aaaaaa is an invalid account.</p>...
  ...


Now we choose the same account as the dupe and target accounts.

  >>> print http(r"""
  ... POST /people/+adminrequestmerge HTTP/1.1
  ... Authorization: Basic Zm9vLmJhckBjYW5vbmljYWwuY29tOnRlc3Q=
  ... 
  ... field.dupe_account=sabdfl&field.target_account=mark%40hbd.com&continue=Continue""")
  HTTP/1.1 200 Ok
  ...
  ...<p class="error message">You can't merge sabdfl into itself.</p>...
  ...

Before merging we'll check the email addresses owned by the dupe account
  
  >>> from zope.component import getUtility
  >>> from canonical.launchpad.interfaces import IPersonSet, IEmailAddressSet
  >>> from canonical.launchpad.ftests import login, logout, ANONYMOUS

  >>> login(ANONYMOUS)
  >>> emailset = getUtility(IEmailAddressSet)
  >>> dupe_account = getUtility(IPersonSet).getByName('debonzi')
  >>> [email.email for email in emailset.getByPerson(dupe_account)]
  [u'daniel.debonzi@canonical.com']
  >>> logout()

And finally we choose two valid accounts to merge

  >>> print http(r"""
  ... POST /people/+adminrequestmerge HTTP/1.1
  ... Authorization: Basic Zm9vLmJhckBjYW5vbmljYWwuY29tOnRlc3Q=
  ... 
  ... merge=Merge&dupe_name=debonzi&target_name=cprov""")
  HTTP/1.1 303 See Other
  ...
  Location: http://localhost:9000/people/cprov
  ...
  ..."informational message">Merge completed...
  ...

After the merge we can verify that the email is now owned by the target
account.

  >>> login(ANONYMOUS)
  >>> target_account = getUtility(IPersonSet).getByName('cprov')
  >>> [email.email for email in emailset.getByPerson(target_account)]
  [u'celso.providelo@canonical.com', u'daniel.debonzi@canonical.com']
  >>> logout()

Now we check that we can't access the duplicated account page.

  >>> print http(r"""
  ... GET /people/debonzi HTTP/1.1
  ... Authorization: Basic Zm9vLmJhckBjYW5vbmljYWwuY29tOnRlc3Q=
  ... """)
  HTTP/1.1 404 Not Found 
  ...
  ...Page not found...
  ...


And can access the target page which now has the email from the dupe account.

  >>> print http(r"""
  ... GET /people/cprov/+editemails HTTP/1.1
  ... Authorization: Basic Zm9vLmJhckBjYW5vbmljYWwuY29tOnRlc3Q=
  ... """)
  HTTP/1.1 200 Ok
  ...
  ...Your e-mail addresses...
  ...
  ...daniel.debonzi@canonical.com...
  ...
