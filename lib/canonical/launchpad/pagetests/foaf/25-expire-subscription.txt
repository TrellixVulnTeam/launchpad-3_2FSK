We want to simulate an expired subscription. This can't be done through
the web UI, because we explicitly check that the expiration date is in
the future.

We can't use the browser instance to test this directly because the form
value for the year 2000 is not available in HTML, but we can encode the
variables:

  >>> import urllib
  >>> browser.addHeader("Authorization", "Basic foo@baz.com:f")
  >>> browser.open("http://launchpad.dev/~myemail/+member/name16",
  ...              urllib.urlencode(dict(
  ...                   admin="no",
  ...                   day=1,
  ...                   month=1,
  ...                   year=2000,
  ...                   comment="",
  ...                   editactive="Change")))
  >>> browser.contents
  <BLANKLINE>
  ...
  ...Invalid expiration: date provided is in the past...
  ...

Let's do it under the wraps:

  >>> from canonical.launchpad.database import Person, TeamMembership
  >>> from canonical.lp.dbschema import TeamMembershipStatus
  >>> foobar = Person.byName('name16')
  >>> team = Person.byName('myemail')
  >>> tm = TeamMembership.selectOneBy(personID=foobar.id, teamID=team.id)
  >>> tm.setStatus(TeamMembershipStatus.EXPIRED)

Persist the change:

  >>> import transaction
  >>> transaction.commit()

And make sure that 'name16' is now an EXPIRED member of this team.

  >>> foobar.inTeam(team)
  False

