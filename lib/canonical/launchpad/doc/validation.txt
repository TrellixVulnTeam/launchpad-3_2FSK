= Validation =

The validation interface contains different kinds of validation functions.


== validate_new_target() ==

The validate_new_target() function does the same checks as
validate_target(), but it does some extra checks as well.

We can't add a task on just the distribution, because it doesn't
make sense to have tasks open on just the distribution and also packages
in that distribution on the same bug.

    >>> from lp.bugs.model.bugtask import validate_new_target
    >>> validate_new_target(bug_two, debian)
    Traceback (most recent call last):
      ...
    IllegalTarget: ...

If the bug already has a distribution with no package, we can't add
another distribution task with a source package (the task with no
package should be edited instead).

    >>> validate_new_target(
    ...     ubuntu_bug_no_sourcepackage,
    ...     ubuntu.getSourcePackage(alsa_utils))
    Traceback (most recent call last):
      ...
    IllegalTarget: ...


== LaunchpadValidationError ==

LaunchpadValidationError is the standard exception used for custom
validators upon a validation error. Rendering one is done by getting
an IWidgetInputErrorView:

    >>> from lp.app.validators import (
    ...     LaunchpadValidationError)
    >>> from canonical.launchpad.webapp.servers import (
    ...     LaunchpadTestRequest)
    >>> from zope.app.form.browser.interfaces import (
    ...     IWidgetInputErrorView)
    >>> from zope.app import zapi

    >>> error = LaunchpadValidationError('lp validation error')
    >>> request = LaunchpadTestRequest()
    >>> view = zapi.getMultiAdapter((error, request),
    ...     IWidgetInputErrorView)

    >>> IWidgetInputErrorView.providedBy(view)
    True
    >>> view.snippet()
    u'lp validation error'
