
Imports:

  >>> from datetime import datetime
  >>> from pytz import timezone
  >>> from zope.component import getUtility, getView
  >>> from canonical.launchpad.interfaces import (
  ...     ISprintSet, IPersonSet, ISpecificationSet)
  >>> from canonical.launchpad.browser.sprint import SprintMeetingExportView
  >>> from canonical.launchpad.webapp.servers import LaunchpadTestRequest

Set up a few variables:

  >>> ubz = getUtility(ISprintSet)['ubz']
  >>> carlos = getUtility(IPersonSet).getByName('carlos')
  >>> sabdfl = getUtility(IPersonSet).getByName('sabdfl')
  >>> sampleperson = getUtility(IPersonSet).getByName('name12')
  >>> svg_spec = getUtility(ISpecificationSet).getByName('svg-support')
  >>> ext_spec = getUtility(ISpecificationSet).getByName(
  ...     'extension-manager-upgrades')
  >>> js_spec = getUtility(ISpecificationSet).getByName('e4x')


Create a view for the UBZ sprint meeting export:

  >>> request = LaunchpadTestRequest()
  >>> view = getView(ubz, '+temp-meeting-export', request)

Verify that the view is a SprintMeetingExportView:

  >>> isinstance(view, SprintMeetingExportView)
  True

There are currently no people registered for the sprint:

  >>> view.initialize()
  >>> view.attendees
  []

While there are three sprints registered for the ubz sprint, only one
has been accepted.  So that is the only one that is exposed by the
view:

  >>> ubz.specificationLinks().count()
  3
  >>> len(view.specifications)
  1
  >>> print view.specifications[0]['spec'].name
  extension-manager-upgrades


We now subscribe Sample Person to the Extension Manager Upgrades spec
and check the list of interested people:

  >>> ext_spec.subscribe(sampleperson)
  <SpecificationSubscription at ...>
  >>> view = getView(ubz, '+temp-meeting-export', request)
  >>> view.initialize()

The person does not show up as interested in the spec though. Only the
specification assignee is listed (the drafter would be too if one was
assigned).

  >>> sorted(person.name for person in view.specifications[0]['interested'])
  [u'carlos']

This is because sample person has not registered as an attendee of the
sprint.  If we add them as an attendee, then they will be available:

  >>> time_starts = datetime(2005, 10, 8, 7, 0, 0, tzinfo=timezone('UTC'))
  >>> time_ends = datetime(2005, 11, 17, 20, 0, 0, tzinfo=timezone('UTC'))
  >>> ubz.attend(sampleperson, time_starts, time_ends)
  <SprintAttendance at ...>

  >>> view = getView(ubz, '+temp-meeting-export', request)
  >>> view.initialize()
  >>> sorted(person.name for person in view.specifications[0]['interested'])
  [u'carlos', u'name12']

The person is also included in the list of attendees:

  >>> len(view.attendees)
  1
  >>> print view.attendees[0]['name']
  name12
  >>> print view.attendees[0]['displayname']
  Sample Person
  >>> print view.attendees[0]['start']
  2005-10-08T07:00:00Z
  >>> print view.attendees[0]['end']
  2005-11-17T20:00:00Z


If a specification's priority is undefined or marked as not for us,
then it is not included in the meeting list for the sprint:

  >>> print js_spec.priority.name
  NOTFORUS
  >>> for link in js_spec.sprint_links:
  ...     if link.sprint == ubz:
  ...         break
  ... else:
  ...     raise AssertionError('should not be reached')
  >>> ubz.acceptSpecificationLinks([link.id])
  0

Verify that the Extension Manager Upgrades spec is the only one listed:

  >>> view = getView(ubz, '+temp-meeting-export', request)
  >>> view.initialize()
  >>> len(view.specifications)
  1
  >>> print view.specifications[0]['spec'].name
  extension-manager-upgrades
