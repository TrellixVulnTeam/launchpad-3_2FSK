= LaunchpadRadioWidget =

There are two Launchpad radio widgets, one that shows descriptions,
and one that doesn't.

    >>> from canonical.widgets import (
    ...     LaunchpadRadioWidget, LaunchpadRadioWidgetWithDescription)

The LaunchpadRadioWidget is mostly used to display items from
an enumerated type.

    >>> from BeautifulSoup import BeautifulSoup
    >>> from canonical.launchpad.webapp.servers import LaunchpadTestRequest
    >>> from canonical.launchpad.interfaces import (
    ...     IBranch, IBranchSet, BranchType)
    >>> from canonical.launchpad.testing import LaunchpadObjectFactory
    >>> branch = LaunchpadObjectFactory().makeBranch()
    >>> branch_type_field = IBranch['branch_type'].bind(branch)
    >>> request = LaunchpadTestRequest()
    >>> radio_widget = LaunchpadRadioWidget(
    ...     branch_type_field, branch_type_field.vocabulary, request)
    >>> radio_widget.setRenderedValue(branch_type_field.vocabulary.HOSTED)

The widget is rendered as a collection of labels with the radio
buttons inside.

    >>> html = BeautifulSoup(radio_widget())
    >>> for label in html.findAll('label'):
    ...     print label.renderContents()
    <input class="radioType" checked="checked" id="field.branch_type.0"
           name="field.branch_type" type="radio" value="HOSTED" />&nbsp;Hosted
    <input class="radioType" id="field.branch_type.1" name="field.branch_type"
           type="radio" value="MIRRORED" />&nbsp;Mirrored
    <input class="radioType" id="field.branch_type.2" name="field.branch_type"
           type="radio" value="REMOTE" />&nbsp;Remote


= LaunchpadRadioWidgetWithDescription =

The LaunchpadRadioWidgetWithDescription widget renders the descriptions
along with the titles from the enumerated type vocabulary.

    >>> radio_widget = LaunchpadRadioWidgetWithDescription(
    ...     branch_type_field, branch_type_field.vocabulary, request)
    >>> radio_widget.setRenderedValue(branch_type_field.vocabulary.HOSTED)

The widget is rendered in a table with the descriptions lined up
under the labels.  The labels are rendered next to the radio buttons,
in a different table cell, and use the 'for' attribute of the label
to associate the label with the radio button input.

    >>> print radio_widget()
    <table class="radio-button-widget"><tr>
      <td rowspan="2"><input class="radioType" checked="checked"
          id="field.branch_type.0" name="field.branch_type" type="radio"
          value="HOSTED" /></td>
      <td><label for="field.branch_type.0">Hosted</label></td>
    </tr>
    <tr>
      <td class="formHelp">Launchpad is the primary location of this branch.
      </td>
    </tr>
    <tr>
      <td rowspan="2"><input class="radioType" id="field.branch_type.1"
          name="field.branch_type" type="radio" value="MIRRORED" /></td>
      <td><label for="field.branch_type.1">Mirrored</label></td>
    </tr>
    <tr>
      <td class="formHelp">Primarily hosted elsewhere and is periodically
      mirrored from the remote location into Launchpad.  </td>
    </tr>
    <tr>
      <td rowspan="2"><input class="radioType" id="field.branch_type.2"
          name="field.branch_type" type="radio" value="REMOTE" /></td>
      <td><label for="field.branch_type.2">Remote</label></td>
    </tr>
    <tr>
      <td class="formHelp">Registered in Launchpad with an external location,
      but is not to be mirrored, nor available through Launchpad. </td>
    </tr>
    </table>
    <input name="field.branch_type-empty-marker" type="hidden" value="1" />

If the enumerated type doesn't have any descriptions, then the extra
rows are not rendered.

    >>> from canonical.lazr import (
    ...     EnumeratedType, DBEnumeratedType, Item, DBItem, use_template)
    >>> class SomeFruit(EnumeratedType):
    ...     "A choice of fruit."
    ...     APPLE = Item('Apple')
    ...     PEAR = Item('Pear')
    ...     ORANGE = Item('Orange')

    >>> radio_widget = LaunchpadRadioWidgetWithDescription(
    ...     branch_type_field, SomeFruit, request)
    >>> print radio_widget()
    <table class="radio-button-widget"><tr>
      <td><input class="radioType" id="field.branch_type.0"
                 name="field.branch_type" type="radio" value="APPLE" /></td>
      <td><label for="field.branch_type.0">Apple</label></td>
    </tr>
    <tr>
      <td><input class="radioType" id="field.branch_type.1"
                 name="field.branch_type" type="radio" value="PEAR" /></td>
      <td><label for="field.branch_type.1">Pear</label></td>
    </tr>
    <tr>
      <td><input class="radioType" id="field.branch_type.2"
                 name="field.branch_type" type="radio" value="ORANGE" /></td>
      <td><label for="field.branch_type.2">Orange</label></td>
    </tr>
    </table>
    <input name="field.branch_type-empty-marker" type="hidden" value="1" />

