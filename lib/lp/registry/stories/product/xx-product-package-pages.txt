Launchpad can show you a product's packages by distribution, with links to each.

    >>> anon_browser.open(
    ...     'http://launchpad.dev/evolution/+distributions')
    >>> anon_browser.url
    'http://launchpad.dev/evolution/+distributions'
    >>> print anon_browser.contents
    <...
    <h1>Packages by distribution</h1>
    ...
    <h2>Ubuntu Linux</h2>
    ...
    >>> anon_browser.getLink(url='/ubuntu/warty/+source/evolution').click()
    >>> print anon_browser.contents
    <...
    ...evolution in Ubuntu Warty...
    ...

It can also show the packages by product series. And if you have permission (for
example, you're the owner of the product), Launchpad lets you register packages
for each series. In this case, mark@example.com is the owner of Evolution.

    >>> evo_owner = setupBrowser(auth='Basic mark@example.com:test')
    >>> evo_owner.open('http://launchpad.dev/evolution/+packages')
    >>> evo_owner.url
    'http://launchpad.dev/evolution/+packages'
    >>> print evo_owner.title
    Evolution packages in Launchpad
    >>> print extract_text(find_tag_by_id(evo_owner.contents, 'packages'))
    Distribution  Series        Source Package  Version
    Ubuntu        4.10 (warty)  evolution ...

    >>> evo_owner.getLink(url='/ubuntu/hoary/+source/evolution') is not None
    True
    >>> evo_owner.getLink(url='/evolution/trunk/+addpackage') is not None
    True

If you're not the owner or an admin, you still see the packages, but without
the link to add packages yourself.

    >>> browser.open('http://launchpad.dev/evolution/+packages')
    >>> browser.url
    'http://launchpad.dev/evolution/+packages'
    >>> print browser.title
    Evolution packages in Launchpad
    >>> browser.getLink(url='/evolution/trunk/+addpackage')
    Traceback (most recent call last):
    ...
    LinkNotFoundError
