= Launchpad Single-Signon Workflow: Switching Users =

If a user is making use of a public or shared computer, and wants to
log into a Launchpad-SSO website, they may find that someone else has
logged into Launchpad.  In this case, the user can log out and then
back in as part of the authentication process.

First we will set up the helper view that lets us test the final
portion of the authentication process:

    >>> from openid.consumer.consumer import Consumer
    >>> from openid.fetchers import setDefaultFetcher
    >>> from openid.store.memstore import MemoryStore
    >>> from canonical.launchpad.ftests.openidhelpers import (
    ...     complete_from_browser, install_consumer,
    ...     make_identifier_select_endpoint, uninstall_consumer,
    ...     PublisherFetcher)
    >>> install_consumer()
    >>> setDefaultFetcher(PublisherFetcher())

We will first authenticate as Mark Shuttleworth:

    >>> openid_store = MemoryStore()
    >>> consumer = Consumer(session={}, store=openid_store)

    >>> request = consumer.beginWithoutDiscovery(
    ...     make_identifier_select_endpoint(PROTOCOL_URI))
    >>> browser.open(request.redirectURL(
    ...     'http://launchpad.dev/', 'http://launchpad.dev/+openid-consumer'))

    >>> print browser.title
    Launchpad Login Service
    >>> browser.getControl(name='field.email').value = 'mark@hbd.com'
    >>> browser.getControl(name='field.password').value = 'test'
    >>> browser.getControl('Continue').click()
    >>> print browser.url
    http://launchpad.dev/+openid-consumer?...

Now lets imagine that test@canonical.com starts using the computer and
wishes to log into a Launchpad-SSO web site.  They will be asked if
they want to authenticate as Mark Shuttleworth:

    >>> request = consumer.beginWithoutDiscovery(
    ...     make_identifier_select_endpoint(PROTOCOL_URI))
    >>> browser.open(request.redirectURL(
    ...     'http://launchpad.dev/', 'http://launchpad.dev/+openid-consumer'))
    >>> print browser.title
    Authenticate to http://launchpad.dev/
    >>> print extract_text(find_main_content(browser.contents).findAll(
    ...     'h2')[1])
    Sign in as Mark Shuttleworth?


At this point, the user says that they are not Mark Shuttleworth,
which presents them with a login page:

    >>> browser.getControl("I'm Someone Else").click()
    >>> print browser.title
    Launchpad Login Service

They can now log in as test@canonical.com, and the appropriate
identity URL will be sent to the relying party:

    >>> browser.getControl(name='field.email').value = 'test@canonical.com'
    >>> browser.getControl(name='field.password').value = 'test'
    >>> browser.getControl('Continue').click()
    >>> print browser.url
    http://launchpad.dev/+openid-consumer?...
    >>> info = complete_from_browser(
    ...     consumer, browser, 'http://openid.launchpad.dev/+id/name12_oid')
    >>> print info.status
    success
    >>> print info.endpoint.claimed_id
    http://openid.launchpad.dev/+id/name12_oid


== Cleanup ==

    >>> setDefaultFetcher(None)
    >>> uninstall_consumer()
