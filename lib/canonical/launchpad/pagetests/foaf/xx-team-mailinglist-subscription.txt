== Mailing list subscription management ==

Teams can have mailing lists associated with them, and a member of a
team with a usable mailing list can subscribe to that list. A person
can subscribe to a mailing list using any of their email addresses, or
a dynamic subscription which uses whichever email address is their
preferred address at a given time.

==Setup==

We're going to use the sample user Carlos, who belongs to four teams
(`admins`, `rosetta-admins`, `testing-spanish-team`, and
`ubuntu-translators`) and has two email addresses. We're going to give
mailing lists to `admins` and `rosetta-admins`, but only `admins` will
actually have its mailing list used as its contact address. We're also
going to create a mailing list for `testing-spanish-team`, but not
approve it.

    >>> from canonical.launchpad.ftests.mailinglists_helper import (
    ...     new_list_for_team)
    >>> new_list_for_team('admins', True)
    >>> new_list_for_team('rosetta-admins', False)

    >>> browser = setupBrowser(auth='Basic carlos@canonical.com:test')
    >>> browser.open('http://launchpad.dev/~testing-spanish-team')
    >>> browser.getLink('Configure mailing list').click()
    >>> browser.getControl('Apply for Mailing List').click()

==Subscription management==

To subscribe to a mailing list, Carlos needs to use his subscription
management screen, which shows a subscription control for every
mailing list.

    >>> browser.open('http://launchpad.dev/~carlos/')
    >>> browser.getLink("Change e-mail settings").click()
    >>> browser.title
    "Carlos Perell\xc3\xb3 Mar\xc3\xadn's e-mail addresses"

    >>> admins = browser.getControl(name='field.subscription.admins')
    >>> rosetta_admins = browser.getControl(
    ...     name='field.subscription.rosetta-admins')

    >>> print admins.value
    ["Don't subscribe"]
    >>> print rosetta_admins.value
    ["Don't subscribe"]

Note that a mailing list shows up whether or not it's currently the
team contact method. Also note that the not-fully-created mailing list
doesn't show up.

Carlos can subscribe to a list under his preferred email address:

    >>> admins = browser.getControl(name='field.subscription.admins')
    >>> admins.value = ['Preferred address']
    >>> browser.getControl('Update Subscriptions').click()

    >>> for msg in get_feedback_messages(browser.contents):
    ...     print msg
    Subscriptions updated.

    >>> admins = browser.getControl(name='field.subscription.admins')
    >>> rosetta_admins = browser.getControl(
    ...     name='field.subscription.rosetta-admins')
    >>> print admins.value
    ['Preferred address']
    >>> print rosetta_admins.value
    ["Don't subscribe"]

He can subscribe to a list under one or the other of his
addresses. Note that having mail delivered to the address that happens
to be your preferred address right now, is *not* the same as having
mail delivered to whatever your preferred address is at the time of
delivery.

    >>> admins.value = ['carlos@canonical.com']
    >>> rosetta_admins.value = ['carlos@test.com']
    >>> browser.getControl('Update Subscriptions').click()

    >>> admins = browser.getControl(name='field.subscription.admins')
    >>> rosetta_admins = browser.getControl(
    ...     name='field.subscription.rosetta-admins')
    >>> print admins.value
    ['carlos@canonical.com']
    >>> print rosetta_admins.value
    ['carlos@test.com']

He can switch from one address to another, or from a specific address
to the preferred address.

    >>> admins.value = ['Preferred address']
    >>> rosetta_admins.value = ['carlos@canonical.com']
    >>> browser.getControl('Update Subscriptions').click()

    >>> admins = browser.getControl(name='field.subscription.admins')
    >>> rosetta_admins = browser.getControl(
    ...     name='field.subscription.rosetta-admins')
    >>> print admins.value
    ['Preferred address']
    >>> print rosetta_admins.value
    ['carlos@canonical.com']

Finally, he can unsubscribe from lists.

    >>> admins = browser.getControl(name='field.subscription.admins')
    >>> rosetta_admins = browser.getControl(
    ...     name='field.subscription.rosetta-admins')
    >>> admins.value = ["Don't subscribe"]
    >>> rosetta_admins.value = ["Don't subscribe"]
    >>> browser.getControl('Update Subscriptions').click()

    >>> admins = browser.getControl(name='field.subscription.admins')
    >>> rosetta_admins = browser.getControl(
    ...     name='field.subscription.rosetta-admins')
    >>> print admins.value
    ["Don't subscribe"]
    >>> print rosetta_admins.value
    ["Don't subscribe"]
