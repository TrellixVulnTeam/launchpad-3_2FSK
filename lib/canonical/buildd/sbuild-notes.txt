Notes on how to handle sbuild
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The buildd slave runs as the user buildd (ensure UID=1003, due 'tar'
silly defect when decompressing chroots)

This user has sudo privs for running the chroots (must be passwordless)

Sbuild needs patching:

$main::build_source = 0;
+#$main::jobs_file = "$main::HOME/build/build-progress";
-$main::jobs_file = "build-progress";
$main::max_lock_trys = 120;

  cleanup_close:
	analyze_fail_stage( $pkgv );
+	if( $main::pkg_status eq 'failed' ) {
+	    $main::pkg_status = 'failed ' . $main::pkg_fail_stage;
+	}
	write_jobs_file( $main::pkg_status );

 close_log();
-unlink( $main::jobs_file ) if $main::batchmode;
+#unlink( $main::jobs_file ) if $main::batchmode;
 unlink( "SBUILD-FINISHED" ) if $main::batchmode;


Process is as follows:

1. unpack the chroot tarball (must unpack to chroot-autobuild)
   Failure -> BUILDERFAIL
2. mount up the proc, and devpts dirs
   Failure -> BUILDERFAIL
3. do apt-get update, apt-get dist-upgrade in the chroot
   Failure -> CHROOTFAIL
4. Copy into the dir the relevant dsc, orig (and diff if needed)
5. sbuild --nolog --batch --distribution autobuild foo.dsc
   Failure -> check build-progress
              DEPFAIL / PACKAGEFAIL
6. sudo ./kill-any-chrooted-processes.py
   Failure -> BUILDERFAIL
7. umount the proc, and devpts dirs
   Failure -> BUILDERFAIL
8. unlink the chroot (rm -rf or whatever as root)
   Failure -> BUILDERFAIL
9. OK

We may make 8 an out-of-band process in which case it can't return BUILDERFAIL
