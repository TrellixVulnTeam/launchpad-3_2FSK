= Field for assigning aliases to pillars =

    >>> from canonical.launchpad.fields import PillarAliases
    >>> from canonical.launchpad.interfaces.product import IProductSet
    >>> firefox = getUtility(IProductSet)['firefox']
    >>> field = PillarAliases(__name__='aliases')
    >>> bound_field = field.bind(firefox)

The field takes a list of aliases separated by one or more spaces.

    >>> login('mark@hbd.com')
    >>> aliases = u'iceweasel snowchicken'
    >>> bound_field.validate(aliases)

    >>> aliases = u'iceweasel      snowchicken'
    >>> bound_field.validate(aliases)

It also knows how to set these values as the aliases of the pillar it is bound
to.

    >>> bound_field.set(firefox, aliases)
    >>> bound_field.get(firefox)
    u'iceweasel snowchicken'

If existing aliases are not passed to the field's set() method, they will be
removed.

    >>> bound_field.set(firefox, u'iceweasel')
    >>> bound_field.get(firefox)
    u'iceweasel'

Each of these aliases must be valid names and must be unique.

    >>> bound_field.validate(u'names_cannot_have_underscores')
    Traceback (most recent call last):
    ...
    LaunchpadValidationError: Invalid name...

    >>> bound_field.validate(u'ubuntu')
    Traceback (most recent call last):
    ...
    LaunchpadValidationError: ubuntu is already used by another project

Also, they must not be identical to the pillar's own name.

    >>> bound_field.validate(firefox.name)
    Traceback (most recent call last):
    ...
    LaunchpadValidationError: This is your name: firefox

Black-listed names are not accepted as aliases either.

    >>> bound_field.validate(u'blacklisted')
    Traceback (most recent call last):
    ...
    LaunchpadValidationError: The name 'blacklisted' has been blocked...
