= Hide bug comments =

Comments that have had their visible attribute set to False
will not show up when browsing the comment list for a bug.
All comments are set visible by default.

    >>> user_browser.open(
    ...     'http://bugs.launchpad.dev'
    ...     '/jokosher/+bug/11')
    >>> user_browser.getControl(name='field.comment').value = (
    ...     'This comment will not visible when the test completes.')
    >>> user_browser.getControl('Post Comment', index=-1).click()
    >>> main_content = find_main_content(user_browser.contents)
    >>> new_comment = main_content('div', 'boardCommentBody')[-1]
    >>> new_comment_text = extract_text(new_comment.div)
    >>> print new_comment_text
    This comment will not visible when the test completes.

Admin users can set a message's visible attribute to False.
In this case, the last message in the list, the one just added,
is now set to be hidden.

    >>> from zope.component import getUtility
    >>> from lp.bugs.interfaces.bug import IBugSet
    >>> from lp.bugs.interfaces.bugmessage import IBugMessageSet

    >>> login('foo.bar@canonical.com')
    >>> bug_11 = getUtility(IBugSet).get(11)
    >>> message = bug_11.messages[-1]
    >>> print message.text_contents
    This comment will not visible when the test completes.
    >>> bug_message = getUtility(IBugMessageSet).getByBugAndMessage(
    ...     bug_11, message)
    >>> bug_message.visible = False
    >>> transaction.commit()
    >>> logout()

For ordinary users, the newly created message no longer appears
in the list once visible has been set False.

    >>> user_browser.open(
    ...     'http://bugs.launchpad.dev'
    ...     '/jokosher/+bug/11')
    >>> main_content = find_main_content(user_browser.contents)
    >>> last_comment = main_content('div', 'boardCommentBody')[-1]
    >>> last_comment_text = extract_text(last_comment.div)
    >>> print last_comment_text
    This title, however, is the same as the bug title and so it will
    be suppressed in the UI.

For admin users, the message is still visible.

    >>> admin_browser.open(
    ...     'http://bugs.launchpad.dev'
    ...     '/jokosher/+bug/11')
    >>> main_content = find_main_content(admin_browser.contents)
    >>> last_comment = main_content('div', 'boardCommentBody')[-1]
    >>> last_comment_text = extract_text(last_comment.div)
    >>> print last_comment_text
    This comment will not visible when the test completes.

Also, admin users will see the hidden message grayed out via an
'adminHiddenComment' style.

    >>> print last_comment.parent['class']
    boardComment adminHiddenComment
