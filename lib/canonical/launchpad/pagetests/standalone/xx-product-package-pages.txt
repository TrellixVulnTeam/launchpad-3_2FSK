Launchpad can show you a product's packages by distribution.

  >>> print http(r"""
  ... GET /products/evolution/+distributions HTTP/1.1
  ... """)
  HTTP/1.1 200 Ok
  Content-Length: ...
  Content-Type: text/html;charset=utf-8
  ...
    <h1>Packages by distribution</h1>
  ...
      <h2>Ubuntu Linux</h2>
  ...

It can also show the packages by product series. And if you have permission (for
example, you're the owner of the product), Launchpad lets you register packages
for each series. In this case, mark@hbd.com is the owner of Evolution.

    >>> from zope.testbrowser.testing import Browser

    >>> evo_owner = Browser()
    >>> evo_owner.addHeader('Authorization', 'Basic mark@hbd.com:test')
    >>> evo_owner.open('http://launchpad.dev/products/evolution/+packages')
    >>> evo_owner.url
    'http://launchpad.dev/products/evolution/+packages'
    >>> print evo_owner.contents
    <...
    ...<h1>Distribution packages</h1>
    ...
    ...trunk...
    ...
    .../trunk/+addpackage">Register a package...
    ...

If you're not the owner or an admin, you still see the packages, but without
the link to add packages yourself.

    >>> browser.open('http://launchpad.dev/products/evolution/+packages')
    >>> browser.url
    'http://launchpad.dev/products/evolution/+packages'
    >>> print browser.contents
    <...
    ...<h1>Distribution packages</h1>...
    ...
    >>> '/trunk/+addpackage' in browser.contents
    False

If there are no product series, and you have permission, Launchpad invites you to
create a series. Here, test@canonical.com is the owner of the Bazaar product.
XXX 20060704 mpt: Remove once bug 51799 is fixed.

    >>> from zope.testbrowser.testing import Browser

    >>> owner_browser = Browser()
    >>> owner_browser.addHeader('Authorization', 'Basic test@canonical.com:test')
    >>> owner_browser.open('http://launchpad.dev/products/bazaar/+packages')
    >>> owner_browser.url
    'http://launchpad.dev/products/bazaar/+packages'
    >>> print owner_browser.contents
    <...
    ...no series are registered...
    ...
    >>> '+addseries">register a series</a>' in owner_browser.contents
    True

If you don't have permission, Launchpad doesn't offer that invitation.
(We can't use user_browser here, because that's name12, the owner of Bazaar.)

    >>> unprivileged_browser = Browser()
    >>> unprivileged_browser.addHeader(
    ...     'Authorization', 'Basic no-priv@canonical.com:test')
    >>> unprivileged_browser.open(
    ...     'http://launchpad.dev/products/bazaar/+packages')
    >>> unprivileged_browser.url
    'http://launchpad.dev/products/bazaar/+packages'
    >>> print unprivileged_browser.contents
    <...
    ...no series are registered...
    ...
    >>> '+addseries' in unprivileged_browser.contents
    False
