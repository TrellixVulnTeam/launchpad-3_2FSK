This test is going to test the form prefill so we speedup the productivity
of the Translation import queue reviewers.

First, we need to feed the import queue.

XXX CarlosPerelloMarin 2005-06-01: We need to mix two styles of pagetest
because the bug #47831. Seems like the new system doesn't work correctly
to do file uploads.

  >>> import canonical.launchpad
  >>> import os.path
  >>> test_file_name = os.path.join(
  ...     os.path.dirname(canonical.launchpad.__file__),
  ...     'pagetests/standalone/xx-translation-import-queue-edit-autofilling.tar.gz')
  >>> tarball = open(test_file_name)
  >>> print http(r"""
  ... POST /products/alsa-utils/trunk/+translations-upload HTTP/1.1
  ... Authorization: Basic Y2FybG9zQGNhbm9uaWNhbC5jb206dGVzdA==
  ... Content-Length: 530
  ... Content-Type: multipart/form-data; boundary=---------------------------428463014358220843450431786
  ... 
  ... -----------------------------428463014358220843450431786
  ... Content-Disposition: form-data; name="file"; filename="test-autofilling.tar.gz"
  ... Content-Type: application/x-gzip
  ... 
  ... %s
  ... -----------------------------428463014358220843450431786
  ... Content-Disposition: form-data; name="translations_upload"
  ... 
  ... Request Upload
  ... -----------------------------428463014358220843450431786--
  ... """ % tarball.read(), handle_errors=False)
  HTTP/1.1 200 Ok
  ...Thank you for your upload. 2 files from the tarball will be reviewed...

Let's check the values we get by default from the .pot file. As we can see,
the form is completely empty.

  >>> browser.addHeader('Authorization', 'Basic carlos@canonical.com:test')
  >>> browser.open('http://localhost/rosetta/imports/2')
  >>> browser.url
  'http://localhost/rosetta/imports/2'
  >>> browser.getControl(name='field.potemplatename').value
  ''
  >>> browser.getControl(name='field.path').value
  ''

Let's fill the information.

  >>> browser.getControl(name='field.potemplatename').value = 'alsa-utils'
  >>> browser.getControl(name='FORM_SUBMIT').click()
  >>> browser.url
  'http://localhost/rosetta/imports'

Now, as we already know the potemplatename, a new form load should
give us that field with information.

  >>> browser.open('http://localhost/rosetta/imports/2')
  >>> browser.url
  'http://localhost/rosetta/imports/2'
  >>> browser.getControl(name='field.potemplatename').value
  'alsa-utils'

Let's move to the .po file. By default, we don't know anything about it,
but we can guess the language. As it's a guessed value, we warn the user so
he checks that it's ok.

  >>> browser.open('http://localhost/rosetta/imports/1')
  >>> browser.url
  'http://localhost/rosetta/imports/1'
  >>> browser.getControl(name='field.potemplatename').value
  ''
  >>> browser.getControl(name='field.path').value
  ''
  >>> browser.getControl(name='field.language').value
  ['es']
  >>> browser.getControl(name='field.variant').value
  ''

Let's add the potemplatename information and confirm the language selection.

  >>> browser.getControl(name='field.potemplatename').value = 'alsa-utils'
  >>> browser.getControl(name='FORM_SUBMIT').click()
  >>> browser.url
  'http://localhost/rosetta/imports'

And reloading the form, we should get all that information.

  >>> browser.open('http://localhost/rosetta/imports/1')
  >>> browser.url
  'http://localhost/rosetta/imports/1'
  >>> browser.getControl(name='field.potemplatename').value
  'alsa-utils'
  >>> browser.getControl(name='field.path').value
  ''
  >>> browser.getControl(name='field.language').value
  ['es']
  >>> browser.getControl(name='field.variant').value
  ''
