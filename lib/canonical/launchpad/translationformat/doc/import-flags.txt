= Importing translation files =

We are using gettext PO file to document how our translation files
are being imported into our database, showing how translations are
overridden or not, depending on the type of the import.

We'll be going through usual steps of the PO file lifetime:
 * importing a template
 * importing a translation from package
 * importing updated translation from a translator
 * importing an updated translation from a package
 * importing update from a translator again

== Helper imports ==

    >>> from zope.app import datetimeutils
    >>> from canonical.launchpad.ftests import syncUpdate
    >>> from canonical.launchpad.interfaces import (
    ...     ILaunchpadCelebrities, IPOTemplateNameSet, IPersonSet,
    ...     IProductSet, ITranslationImportQueue)
    >>> from canonical.launchpad.database import (
    ...     POTemplateSubset, SourcePackageName)
    >>> from canonical.launchpad.scripts.po_import import (
    ...     AutoApproveProcess, ImportProcess)
    >>> import datetime
    >>> import pytz
    >>> UTC = pytz.timezone('UTC')
    >>> def ISO_FORMATTED_DATE(): return datetime.datetime.now(UTC).isoformat()

We need this for the Librarian to work properly.

    >>> import transaction

We also need the DBEnumeratedType to change the import status.

    >>> from canonical.launchpad.interfaces import RosettaImportStatus

Then, let's get a handle to our mailer. This is the thing we'll examine to show
what email has been sent, to whom, and what the body of the message contains:

    >>> import email
    >>> from canonical.launchpad.mail import stub

Here's a fake logger to capture any errors that happen.

    >>> from canonical.launchpad.scripts import FakeLogger

To ease the pain of importing many files during testing, lets introduce
a helper function to import either a PO file or a PO template from the string
with the contents of the file.

    >>> def import_pofile_or_potemplate(file_contents, person, series,
    ...                                 pofile=None, potemplate=None,
    ...                                 published=True):
    ...     """Import a `POFile` or `POTemplate` from the string.
    ...
    ...	    If pofile is None, it imports a potemplate.
    ...	    Returns `TranslationImportQueueEntry` as added to the import queue.
    ...	    """
    ...     translation_import_queue = getUtility(ITranslationImportQueue)
    ...     if pofile:
    ...         entry = translation_import_queue.addOrUpdateEntry(
    ...             pofile.path, file_contents, published, person,
    ...             productseries=series, pofile=pofile)
    ...     else:
    ...         # A POTemplate can only be published, so setting
    ...         # the published flag makes no difference.
    ...         entry = translation_import_queue.addOrUpdateEntry(
    ...             potemplate.path, file_contents, True, person,
    ...             productseries=series, potemplate=potemplate)
    ...     transaction.commit()
    ...     entry.status = RosettaImportStatus.APPROVED
    ...     syncUpdate(entry)
    ...     if pofile:
    ...         pofile.importFromQueue(FakeLogger())
    ...     else:
    ...         potemplate.importFromQueue(FakeLogger())
    ...     return entry

And lets define a nice printout function for PO files.

    >>> def print_pofile(pofile):
    ...     # We are using length=18 for msgid, translation and
    ...     # published translation to be able to fit them with two
    ...     # fuzzy flags into a single line for nicer and more
    ...     # readable diffs in the test.
    ...     def strip_to_length(string, length=18):
    ...         if string is None: return None
    ...         if len(string)>length:
    ...             return string[:length-3]+'...'
    ...         else:
    ...             return string
    ...
    ...     print "%2s. %-18s %-18s %-4s %-18s %-4s" % (
    ...         "no", "msgid", "translation", "fuz", "published", "pfuz")
    ...     for potmsgset in pofile.potemplate.getPOTMsgSets():
    ...         msgid = potmsgset.singular_text
    ...         pomsgset = pofile.getPOMsgSetFromPOTMsgSet(potmsgset)
    ...         publishedfuzzy = fuzzy = ''
    ...         published = translation = None
    ...         if pomsgset is not None:
    ...             active_texts = pomsgset.active_texts
    ...             published_texts = pomsgset.published_texts
    ...             if len(active_texts) > 0:
    ...                 translation = active_texts[0]
    ...             if len(published_texts) > 0:
    ...                 published = published_texts[0]
    ...             if pomsgset.publishedfuzzy:
    ...                 publishedfuzzy = 'yes'
    ...             if pomsgset.isfuzzy:
    ...                 fuzzy = 'yes'
    ...         print "% 2d. %-18s %-18s %-4s %-18s %-4s *" % (
    ...             potmsgset.sequence,
    ...             strip_to_length(msgid),
    ...             strip_to_length(translation),
    ...             strip_to_length(fuzzy, 4),
    ...             strip_to_length(published),
    ...             strip_to_length(publishedfuzzy, 4))


We'll be doing all our imports into Firefox trunk as
carlos@canonical.com.

    >>> carlos = getUtility(IPersonSet).getByEmail('carlos@canonical.com')
    >>> login('carlos@canonical.com')

    >>> firefox = getUtility(IProductSet).getByName('firefox')
    >>> firefox_trunk = firefox.getSeries('trunk')
    >>> firefox_potemplatename = getUtility(IPOTemplateNameSet)['firefox']
    >>> firefox_potsubset = POTemplateSubset(productseries=firefox_trunk)

    >>> firefox_potemplate = firefox_potsubset.new(
    ...     potemplatename=firefox_potemplatename,
    ...     path='po/firefox.pot',
    ...     owner=carlos)

== Importing a template ==

To avoid using sample data, we import a template into Firefox here, to
be able to import translations later on.

    >>> test_template = r'''
    ... msgid ""
    ... msgstr ""
    ... "POT-Creation-Date: 2004-07-11 16:16+0900\n"
    ... "Content-Type: text/plain; charset=CHARSET\n"
    ... "Plural-Forms: nplurals=INTEGER; plural=EXPRESSION;\n"
    ...
    ... msgid "first"
    ... msgstr ""
    ...
    ... msgid "second"
    ... msgstr ""
    ...
    ... msgid "third"
    ... msgstr ""
    ...
    ... msgid "fourth"
    ... msgstr ""
    ...
    ... msgid "fifth"
    ... msgstr ""
    ...
    ... msgid "sixth"
    ... msgstr ""
    ... '''
    >>> entry = import_pofile_or_potemplate(test_template, carlos,
    ...                                     firefox_trunk,
    ...                                     potemplate=firefox_potemplate)
    >>> print entry.status.name
    IMPORTED

Usually, the first import we get is published (i.e. coming from a
package upload in Ubuntu).

    # fifth and sixth are untranslated
    >>> test_translation_published = r'''
    ... msgid ""
    ... msgstr ""
    ... "PO-Revision-Date: %s\n"
    ... "Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
    ... "Content-Type: text/plain; charset=UTF-8\n"
    ... "X-Launchpad-Export-Date: 2005-05-03 20:40+0100\n"
    ...
    ... msgid "first"
    ... msgstr "a"
    ...
    ... msgid "second"
    ... msgstr "b"
    ...
    ... #, fuzzy
    ... msgid "third"
    ... msgstr "c"
    ...
    ... #, fuzzy
    ... msgid "fourth"
    ... msgstr "d"
    ... ''' % ISO_FORMATTED_DATE()

    >>> firefox_serbian = firefox_potemplate.newPOFile('sr')
    >>> firefox_serbian.path='sr.po'
    >>> entry = import_pofile_or_potemplate(test_translation_published,
    ...                                     carlos, firefox_trunk,
    ...                                     pofile=firefox_serbian)
    >>> print entry.status.name
    IMPORTED

When this file is imported, we notice that all the messages are
imported as expected: active translation is set to the same published
one, and fuzzy flags are carried over as well.

    >>> print_pofile(firefox_serbian)
    no. msgid              translation        fuz  published          pfuz
     1. first              a                       a                       *
     2. second             b                       b                       *
     3. third              c                  yes  c                  yes  *
     4. fourth             d                  yes  d                  yes  *
     5. fifth              None                    None                    *
     6. sixth              None                    None                    *

After initial translation import from the package, it's common for
translators to work either directly in Launchpad or to upload PO files
with their updates.  This is a file where the "second" and "fourth"
message are updated with new translations, the fuzzy flag is removed
from the "fourth" message, and the "fifth" message is newly translated.

    >>> test_translation_update1 = r'''
    ... msgid ""
    ... msgstr ""
    ... "PO-Revision-Date: %s\n"
    ... "Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
    ... "Content-Type: text/plain; charset=UTF-8\n"
    ... "X-Launchpad-Export-Date: %s\n"
    ...
    ... # stays as published
    ... msgid "first"
    ... msgstr "a"
    ...
    ... # changes published translation
    ... msgid "second"
    ... msgstr "b-from-LP"
    ...
    ... # same as already published one
    ... #, fuzzy
    ... msgid "third"
    ... msgstr "c"
    ...
    ... # takes the fuzzy flag off and updates the translation
    ... msgid "fourth"
    ... msgstr "d-from-LP"
    ...
    ... # translates untranslated message
    ... msgid "fifth"
    ... msgstr "e-from-LP"
    ... ''' % (ISO_FORMATTED_DATE(), ISO_FORMATTED_DATE())

    >>> entry = import_pofile_or_potemplate(test_translation_update1,
    ...                                     carlos, firefox_trunk,
    ...                                     pofile=firefox_serbian,
    ...                                     published=False)
    >>> print entry.status.name
    IMPORTED

Again, PO file in the database reflects the changes: translations for
"second", "fourth" and "fifth" are updated (and now different from
published translations), and fuzzy flag is off on "fourth" (and
published fuzzy is still on).

    >>> print_pofile(firefox_serbian)
    no. msgid              translation        fuz  published          pfuz
     1. first              a                       a                       *
     2. second             b-from-LP               b                       *
     3. third              c                  yes  c                  yes  *
     4. fourth             d-from-LP               d                  yes  *
     5. fifth              e-from-LP               None                    *
     6. sixth              None                    None                    *


Common next step is having a new package upload which provides us with
updated translations upstream.  The "second" message translation is changed,
a fuzzy flag is removed from the "fourth" message, and both "fifth" and
"sixth" are translated.

    >>> test_translation_published_update = r'''
    ... msgid ""
    ... msgstr ""
    ... "PO-Revision-Date: %s\n"
    ... "Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
    ... "Content-Type: text/plain; charset=UTF-8\n"
    ... "X-Launchpad-Export-Date: %s\n"
    ...
    ... msgid "first"
    ... msgstr "a"
    ...
    ... msgid "second"
    ... msgstr "b-updated"
    ...
    ... #, fuzzy
    ... msgid "third"
    ... msgstr "c"
    ...
    ... # removes the fuzzy flag on the published translation
    ... msgid "fourth"
    ... msgstr "d"
    ...
    ... # translate remaining messages
    ... msgid "fifth"
    ... msgstr "e"
    ...
    ... msgid "sixth"
    ... msgstr "f"
    ... ''' % (ISO_FORMATTED_DATE(), ISO_FORMATTED_DATE())

    >>> entry = import_pofile_or_potemplate(test_translation_published_update,
    ...                                     carlos, firefox_trunk,
    ...                                     pofile=firefox_serbian,
    ...                                     published=True)
    >>> print entry.status.name
    IMPORTED

We can see that the published fuzzy flag has been removed from the
"fourth" message in the database, and that translations for "fifth"
and "sixth" have been updated.  However, note that active translation
for "fifth" has not been overriden by a package upload, since we give
preference to translations done inside Launchpad over imported ones.

    >>> print_pofile(firefox_serbian)
    no. msgid              translation        fuz  published          pfuz
     1. first              a                       a                       *
     2. second             b-from-LP               b-updated               *
     3. third              c                  yes  c                  yes  *
     4. fourth             d-from-LP               d                       *
     5. fifth              e-from-LP               e                       *
     6. sixth              f                       f                       *


A new translation for "second" message through Launchpad is added.  We also
do another translator (i.e. not from a package) update, where we remove the
fuzzy flag from the published translation for "third", and revert "fourth"
to the published translation.  Finally, "fifth" translation is updated with
a new translation.

    >>> test_translation_update2 = r'''
    ... msgid ""
    ... msgstr ""
    ... "PO-Revision-Date: %s\n"
    ... "Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
    ... "Content-Type: text/plain; charset=UTF-8\n"
    ... "X-Launchpad-Export-Date: %s\n"
    ...
    ... # stays as published
    ... msgid "first"
    ... msgstr "a"
    ...
    ... msgid "second"
    ... msgstr "b-from-LP-two"
    ...
    ... # same as already published one, removes the fuzzy flag
    ... msgid "third"
    ... msgstr "c"
    ...
    ... # revert to published translation
    ... msgid "fourth"
    ... msgstr "d"
    ...
    ... # updates active translation
    ... msgid "fifth"
    ... msgstr "e-from-LP-two"
    ...
    ... # sixth message is not being updated at all
    ... msgid "sixth"
    ... msgstr "f"
    ... ''' % (ISO_FORMATTED_DATE(), ISO_FORMATTED_DATE())

    >>> entry = import_pofile_or_potemplate(test_translation_update2,
    ...                                     carlos, firefox_trunk,
    ...                                     pofile=firefox_serbian,
    ...                                     published=False)
    >>> print entry.status.name
    IMPORTED

We can see that "third" message has fuzzy flag removed from the active
translation (but not from the published one), "fourth" is reverted to
the same translation as published, and "fifth" has an updated
translation.

    >>> print_pofile(firefox_serbian)
    no. msgid              translation        fuz  published          pfuz
     1. first              a                       a                       *
     2. second             b-from-LP-two           b-updated               *
     3. third              c                       c                  yes  *
     4. fourth             d                       d                       *
     5. fifth              e-from-LP-two           e                       *
     6. sixth              f                       f                       *

Finally, we make sure that adding another suggestion to the "second" message
works properly, even if it makes us have two inactive and non-published
suggestions.

    >>> test_translation_update3 = r'''
    ... msgid ""
    ... msgstr ""
    ... "PO-Revision-Date: %s\n"
    ... "Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
    ... "Content-Type: text/plain; charset=UTF-8\n"
    ... "X-Launchpad-Export-Date: %s\n"
    ...
    ... # stays as published
    ... msgid "first"
    ... msgstr "a"
    ...
    ... msgid "second"
    ... msgstr "b-from-LP-three"
    ...
    ... # same as already published one, removes the fuzzy flag
    ... msgid "third"
    ... msgstr "c"
    ...
    ... # revert to published translation
    ... msgid "fourth"
    ... msgstr "d"
    ...
    ... # updates active translation
    ... msgid "fifth"
    ... msgstr "e-from-LP-two"
    ...
    ... # sixth message is not being updated at all
    ... msgid "sixth"
    ... msgstr "f"
    ... ''' % (ISO_FORMATTED_DATE(), ISO_FORMATTED_DATE())

    >>> entry = import_pofile_or_potemplate(test_translation_update3,
    ...                                     carlos, firefox_trunk,
    ...                                     pofile=firefox_serbian,
    ...                                     published=False)
    >>> print entry.status.name
    IMPORTED

Notice that "second" message is indeed updated properly.  We are making sure
we don't get any problems with too many inactive suggestions for that
one ("b-from-LP", "b-from-LP-two").

    >>> print_pofile(firefox_serbian)
    no. msgid              translation        fuz  published          pfuz
     1. first              a                       a                       *
     2. second             b-from-LP-three         b-updated               *
     3. third              c                       c                  yes  *
     4. fourth             d                       d                       *
     5. fifth              e-from-LP-two           e                       *
     6. sixth              f                       f                       *
