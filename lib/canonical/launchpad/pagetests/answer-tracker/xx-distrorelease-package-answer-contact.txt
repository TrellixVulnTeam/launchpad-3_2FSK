Anonymous doesn't have access to the page:

  >>> anon_browser.handleErrors = True
  >>> anon_browser.open("http://launchpad.dev/ubuntu/hoary/+source/evolution/+support-contact")
  >>> anon_browser.url
  'http://launchpad.dev/ubuntu/hoary/+source/evolution/+support-contact/+login'

Any logged in person has access to the page.

  >>> browser.addHeader('Authorization', 'Basic foo.bar@canonical.com:test')
  >>> browser.open("http://launchpad.dev/ubuntu/hoary/+source/evolution/+support-contact")
  >>> browser.url
  'http://launchpad.dev/ubuntu/hoary/+source/evolution/+support-contact'

Add Foo Bar, Launchpad Developers and the Ubuntu Team as answer
contacts.

  >>> browser.getControl("I want to be an answer contact for Hoary evolution").click()
  >>> browser.getControl(name="field.answer_contact_teams").value = ["ubuntu-team", "launchpad"]
  >>> browser.getControl("Continue").click()
  >>> browser.url
  'http://launchpad.dev/ubuntu/hoary/+source/evolution/+tickets'

Check that the change worked:

  >>> from canonical.launchpad.database import Distribution, SourcePackageName, AnswerContact
  >>> ubuntu = Distribution.selectOneBy(name="ubuntu")
  >>> mf = SourcePackageName.selectOneBy(name="evolution")
  >>> [sc.person.name for sc in AnswerContact.selectBy(distribution=ubuntu, sourcepackagename=mf)]
  [u'name16', u'launchpad', u'ubuntu-team']

Remove Foo Bar and the Ubuntu team as answer contacts.

  >>> browser.open("http://launchpad.dev/ubuntu/hoary/+source/evolution/+support-contact")
  >>> browser.getControl("I want to be an answer contact for Hoary evolution").click()
  >>> browser.getControl(name="field.answer_contact_teams").value
  ['launchpad', 'ubuntu-team']
  >>> browser.getControl(name="field.answer_contact_teams").value = ["launchpad"]
  >>> browser.getControl("Continue").click()
  >>> browser.url
  'http://launchpad.dev/ubuntu/hoary/+source/evolution/+tickets'

And check the outcome:

  >>> [sc.person.name for sc in AnswerContact.selectBy(distribution=ubuntu, sourcepackagename=mf)]
  [u'launchpad']

