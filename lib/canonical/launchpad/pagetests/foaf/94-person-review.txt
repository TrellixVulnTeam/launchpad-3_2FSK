Test the Person +review page.

This test also confirms the behavior of the password change widget.

Confirm that mismatched passwords are handled correctly. Note also that
the password fields are empty (we don't want to return the password
entered back to the client for security reasons).

    >>> admin_browser.open('http://launchpad.dev/%7Estub/+review')
    >>> print admin_browser.title
    Review Stuart Bishop
    >>> print admin_browser.getControl('Display Name').value
    Stuart Bishop
    >>> admin_browser.getControl('Password').value = 'foo'
    >>> admin_browser.getControl('Retype the password').value
    ''
    >>> admin_browser.getControl('Change').click()

We stay in the same page.

    >>> print admin_browser.title
    Review Stuart Bishop

The password fields are empty:

    >>> admin_browser.getControl('Password').value
    ''
    >>> admin_browser.getControl('Retype the password').value
    ''

And we show the error to the user.

    >>> for tag in find_tags_by_class(admin_browser.contents,
    ...                               'message'):
    ...     print tag.renderContents()
    An error occurred.
    There is a problem with the information you entered.
    Please fix it and try again.
    Passwords do not match.

Now change the password correctly.

    >>> admin_browser.getControl('Password').value = 'foo'
    >>> admin_browser.getControl('Retype the password').value = 'foo'
    >>> admin_browser.getControl('Change').click()

    >>> for tag in find_tags_by_class(admin_browser.contents,
    ...                               'message'):
    ...     print tag.renderContents()
    Updated on...

Leaving the password blank will be accepted, as this means 'keep the
current value'.

    >>> admin_browser.open('http://launchpad.dev/%7Estub/+review')
    >>> admin_browser.getControl('Password').value = ''
    >>> admin_browser.getControl('Retype the password').value = ''
    >>> admin_browser.getControl('Change').click()
    >>> for tag in find_tags_by_class(admin_browser.contents,
    ...                               'message'):
    ...     print tag.renderContents()

And the password fields are empty:

    >>> admin_browser.getControl('Password').value
    ''
    >>> admin_browser.getControl('Retype the password').value
    ''
