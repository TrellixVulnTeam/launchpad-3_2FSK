Form Processing with GeneralFormView
====================================

You should use GeneralFormView as the base class for your add and edit
views.

    >>> from canonical.launchpad.webapp.generalform import GeneralFormView

Here's a simple example, to demonstrate some key GeneralFormView methods
that you can override:

    >>> from zope.interface import Interface

    >>> class ITestSchema(Interface):
    ...     pass

    >>> class DummyView(GeneralFormView):
    ...     schema = ITestSchema
    ...
    ...     def __init__(self, context, request):
    ...         GeneralFormView.__init__(self, context, request)
    ...         self.validate_called = False
    ...         self.process_called = False
    ...         self.nexturl_called = False
    ...
    ...     def process(self, *args, **kw):
    ...         self.process_called = True
    ...
    ...     def validate(self, data):
    ...         self.validate_called = True
    ...
    ...     def nextURL(self):
    ...         self.nexturl_called = True

In your view code, you would call view.process_form to trigger the
GeneralFormView validate->process->redirect workflow.

    >>> from canonical.launchpad.webapp.servers import LaunchpadTestRequest

    >>> request = LaunchpadTestRequest(
    ...     SERVER_URL="http://127.0.0.1/foo/bar",
    ...     form={'FORM_SUBMIT': "Save"})
    >>> foobar = object()
    >>> dummy_view = DummyView(foobar, request)

    >>> dummy_view.validate_called
    False
    >>> dummy_view.process_called
    False
    >>> dummy_view.nexturl_called
    False

    >>> dummy_view.process_form()
    >>> dummy_view.validate_called
    True
    >>> dummy_view.process_called
    True
    >>> dummy_view.nexturl_called
    True
