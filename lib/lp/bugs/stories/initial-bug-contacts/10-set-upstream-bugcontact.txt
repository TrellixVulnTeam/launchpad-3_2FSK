== Setting Upstream Bug Supervisor ==

Setting the bug supervisor for an upstream requires launchpad.Edit
permission on the product. But regular users can only appoint
themselves as bug supervisors and teams they administer.

    >>> sample_browser = setupBrowser()
    >>> sample_browser.addHeader("Authorization",
    ...                          "Basic test@canonical.com:test")

    >>> sample_browser.open(
    ...     "http://bugs.launchpad.dev/firefox/+bugsupervisor")
    >>> sample_browser.getControl(name="field.bug_supervisor").value = (
    ...                           "test@canonical.com")
    >>> sample_browser.getControl("Change").click()

He is now redirected to the main product page, and he sees a confirmation
message.

    >>> print extract_text(find_tag_by_id(
    ...     sample_browser.contents, 'bug-supervisor'))
    Bug supervisor: Sample Person

Another example, this time with a team that has no "preferred email" set.

    >>> sample_browser.open(
    ...     "http://bugs.launchpad.dev/firefox/+bugsupervisor")
    >>> sample_browser.getControl(name="field.bug_supervisor").value = (
    ...     "landscape-developers")
    >>> sample_browser.getControl("Change").click()
    >>> print extract_text(find_tag_by_id(
    ...     sample_browser.contents, 'bug-supervisor'))
    Bug supervisor: Landscape Developers

Launchpad administrators can appoint anybody.

    >>> admin_browser = setupBrowser()
    >>> admin_browser.addHeader("Authorization",
    ...                          "Basic foo.bar@canonical.com:test")

    >>> admin_browser.open("http://bugs.launchpad.dev/firefox/+bugsupervisor")
    >>> admin_browser.getControl(name="field.bug_supervisor").value = (
    ...                           "robertc@robertcollins.net")
    >>> admin_browser.getControl("Change").click()
    >>> print extract_text(find_tag_by_id(
    ...     admin_browser.contents, 'bug-supervisor'))
    Bug supervisor: Robert Collins
