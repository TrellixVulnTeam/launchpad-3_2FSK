    >>> from canonical.launchpad.testing.pages import find_tag_by_id

Set branch
----------

The productseries +setbranch view allows the user to set a branch for
this series.  The branch can one that already exists in Launchpad, or
a new branch in Launchpad can be defined, or it can be a repository
that exists externally in a variety of version control systems.

    >>> product = factory.makeProduct(name="roomba")
    >>> series = factory.makeProductSeries(name="rumba", product=product)
    >>> transaction.commit()
    >>> login_person(product.owner)
    >>> view = create_initialized_view(series, name='+setbranch', principal=product.owner)
    >>> print find_tag_by_id(view.render(), 'maincontent')
    <div...
    Link to a Bazaar branch already in Launchpad...
    Create a new, empty branch in Launchpad and link to this series...
    Import a branch hosted somewhere else...
    ...Branch name:...
    ...Branch owner:...


Linking to an existing branch
-----------------------------

If linking to an existing branch is selected then the branch location must be provided.

    >>> form = {
    ...     'field.branch_type': 'link-lp-bzr',
    ...     'field.actions.update': 'Update',
    ...     }
    >>> view = create_initialized_view(series, name='+setbranch', principal=product.owner, form=form)
    >>> for error in view.errors:
    ...     print error
    The branch location must be set.

Setting the branch location to an invalid branch results in another
validation error.

    >>> form = {
    ...     'field.branch_type': 'link-lp-bzr',
    ...     'field.branch_location': 'foo',
    ...     'field.actions.update': 'Update',
    ...     }
    >>> view = create_initialized_view(series, name='+setbranch', principal=product.owner, form=form)
    >>> for error in view.errors:
    ...     print error
    ('Invalid value', InvalidValue("token 'foo' not found in vocabulary"))
    The branch location must be set.

Providing a valid branch results in a successful linking.

    >>> series.branch is None
    True
    >>> branch = factory.makeBranch(name='rumba-branch', owner=product.owner, product=product)
    >>> form = {
    ...     'field.branch_type': 'link-lp-bzr',
    ...     'field.branch_location': branch.unique_name,
    ...     'field.actions.update': 'Update',
    ...     }
    >>> view = create_initialized_view(series, name='+setbranch', principal=product.owner, form=form)
    >>> for error in view.errors:
    ...     print error
    >>> for notification in view.request.response.notifications:
    ...     print notification.message
    Series code location updated.

    >>> print series.branch.name
    rumba-branch
