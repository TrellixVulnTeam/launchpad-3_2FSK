= A team's home page =

The home page of a team is publicly visible and contains a few interesting
details about the team.

    >>> browser.open('http://launchpad.dev/~ubuntu-team')
    >>> print extract_text(
    ...     find_tag_by_id(browser.contents, 'your-involvement'))
    You must log in to join or leave this team.

    >>> print extract_text(
    ...     find_tag_by_id(browser.contents, 'recently-approved'))
    Recently approved
    Warty Gnome Team (warty-gnome)
    Daniel Silverstone (kinnison)
    Celso Providelo (cprov)
    Steve Alexander (stevea)...

    >>> print extract_text(
    ...     find_tag_by_id(browser.contents, 'recently-applied'))
    Recently applied
    Sample Person (name12)
    Andrew Bennetts (spiv)

    >>> print extract_text(
    ...     find_tag_by_id(browser.contents, 'team-details'))
    Team owned by Mark Shuttleworth, created on 2005-06-06

    >>> print extract_text(
    ...     find_tag_by_id(browser.contents, 'membership-summary'))
    This team has: 10 active members, 1 invited members,
    2 proposed members and is a Moderated Team...

    >>> print extract_text(
    ...     find_tag_by_id(browser.contents, 'contact-details'))
    Contact details
    Log in for email information.
    Languages: English

    >>> print extract_text(
    ...     find_tag_by_id(browser.contents, 'subteam-of'))
    Subteam of
    &#8220;Ubuntu Team&#8221; is a member of these teams: GuadaMen...

In the above case there's no user logged in, so it doesn't actually show
what's the user's involvement with the team. If the user logs in, he'll see
that, though.

    >>> browser = setupBrowser(auth='Basic foo.bar@canonical.com:test')
    >>> browser.open('http://launchpad.dev/~guadamen')
    >>> print extract_text(
    ...     find_tag_by_id(browser.contents, 'your-involvement'))
    You are the owner of this team...

    >>> browser.open('http://launchpad.dev/~rosetta-admins')
    >>> print extract_text(
    ...     find_tag_by_id(browser.contents, 'your-involvement'))
    You are a member of the team that owns this team.
    You are not currently an active member...

    >>> browser.open('http://launchpad.dev/~ubuntu-team')
    >>> print extract_text(
    ...     find_tag_by_id(browser.contents, 'your-involvement'))
    You are a member of this team...

He can also see the contact email address and a link to contact the team.

    >>> print extract_text(
    ...     find_tag_by_id(browser.contents, 'contact-details'))
    Contact details
    support@ubuntu.com
    Contact this team
    Languages: English

Member can contact their team even if the team does not have a contact
address:

    >>> sample_browser = setupBrowser(auth='Basic test@canonical.com:test')
    >>> sample_browser.open('http://launchpad.dev/~landscape-developers')
    >>> print extract_text(
    ...     find_tag_by_id(sample_browser.contents, 'contact-details'))
    Contact details
    No contact address
      Contact this team
      (Launchpad notifications are sent to all team members)
    Languages: English

As teams do not have OpenID Logins, there is not link in the Contact
details section for help.

    >>> sample_browser.getLink('(What\xe2\x80\x99s\xc2\xa0this?)')
    Traceback (most recent call last):
     ...
    LinkNotFoundError

If the logged in user is an indirect member of the team, we'll say that and
will even show the path from the user to the team.

    >>> sample_browser.open('http://launchpad.dev/~name18')
    >>> print extract_text(
    ...     find_tag_by_id(sample_browser.contents, 'your-involvement'))
    You are an indirect member of this team:
    Sample Person &rarr; Warty Security Team &rarr; Ubuntu Gnome Team...

It is also possible to view the set of mugshots of the people in the team.

    >>> anon_browser.open('http://launchpad.dev/~ubuntu-team/+mugshots')
    >>> print find_main_content(anon_browser.contents)
    <...
    <h1>Who's in this team?</h1>
    ...


== Non members ==

No Privileges Person is not a member of the Ubuntu team.

    >>> user_browser.open('http://launchpad.dev/~ubuntu-team')
    >>> print extract_text(
    ...     find_tag_by_id(user_browser.contents, 'your-involvement'))
    You are not a member of this team...

He can see the contact address, but the link's title explains the email
will actually go to the team's owner.

    >>> content = find_tag_by_id(user_browser.contents, 'contact-details')
    >>> print extract_text(content)
    Contact details
    support@ubuntu.com
    Contact this team
    Languages: English

    >>> content.a
    <a href="+contactuser"
      title="Send an email to this team's owner through Launchpad">...
