Editing Bug Tasks
=================

A bugtask's status, assignee, package name, milestone, etc., can be
modified on its +editstatus page.

Edit the Status
---------------

Let's start simple and edit the status of a bug task logged in as Sample
Person:

    >>> from zope.component import getView
    >>> from canonical.launchpad.interfaces import IBugSet
    >>> from canonical.launchpad.webapp.servers import LaunchpadTestRequest
    >>> login('test@canonical.com')
    >>> bug_nine = getUtility(IBugSet).get(9)
    >>> ubuntu_thunderbird_task = bug_nine.bugtasks[1]
    >>> ubuntu_thunderbird_task.status.title
    'Confirmed'

    >>> edit_form = {
    ...    'FORM_SUBMIT': '',
    ...    'field.status': 'In Progress',
    ...    'field.importance': ubuntu_thunderbird_task.importance.title,
    ...    'field.field.assignee.option': 'assign_to_nobody',
    ...    'field.sourcepackagename':
    ...        ubuntu_thunderbird_task.sourcepackagename.name}
    >>> request = LaunchpadTestRequest(form=edit_form)
    >>> edit_view = getView(
    ...     ubuntu_thunderbird_task, '+editstatus-page', request)
    >>> edit_view.process_form()
    >>> ubuntu_thunderbird_task.status.title
    'In Progress'

Edit the Package
----------------

When editing the package of a distribution task, the user may enter
either a binary or a source package name. We only deal with bugs on
source packages, though, so if a binary name is entered, it gets mapped
to the correct source package. For example, the binary package
linux-2.6.12 is built from the source package linux-source-2.6.15, so
if linux-2.6.12 is entered in the package field, the bugtask will be
assigned to linux-source-2.6.15 instead.


    >>> edit_form['field.sourcepackagename'] = u'linux-2.6.12'
    >>> request = LaunchpadTestRequest(form=edit_form)
    >>> edit_view = getView(
    ...     ubuntu_thunderbird_task, '+editstatus-page', request)
    >>> edit_view.process_form()
    >>> ubuntu_thunderbird_task.sourcepackagename.name
    u'linux-source-2.6.15'

XXX: a notification should be shown as well.

If we try to change the source package to package name that doesn't
exist in Launchpad. we'll get an error message.

    >>> edit_form['field.sourcepackagename'] = u'no-such-package'
    >>> request = LaunchpadTestRequest(form=edit_form)
    >>> edit_view = getView(
    ...     ubuntu_thunderbird_task, '+editstatus-page', request)
    >>> edit_view.process_form()
    u'Please fix the problems below and try again.'
    >>> for error in edit_view.errors:
    ...     print error
    Launchpad doesn't know of any source package named 'no-such-package'
    in Ubuntu.

Bug Watch Linkage
-----------------

Let's edit a bugtask which is linked to a remote bug. The most
important thing to edit is the bug watch, since it controls the status
information about the bug task. To show it how it works we remote the
link temporarily:

    >>> thunderbird_task = bug_nine.bugtasks[0]
    >>> bugzilla_watch = thunderbird_task.bugwatch
    >>> thunderbird_task.bugwatch = None

Now we simulate that the bug watch got updated:

    >>> bugzilla_watch.remotestatus = 'RESOLVED FIXED'

If we now link the bugtask to the bug watch, the bugtask's status will
be set to Unknown:

XXX: We really should update the status from the bug watch, but that's
     not trivial to do at the moment. I will fix this later.
     -- Bjorn Tillenius, 2006-03-01

    >>> from canonical.lp.dbschema import BugTaskStatus
    >>> thunderbird_task.transitionToStatus(BugTaskStatus.UNCONFIRMED)
    >>> request = LaunchpadTestRequest(
    ...     form={
    ...         'FORM_SUBMIT': '',
    ...         'field.status': 'Confirmed',
    ...         'field.importance': 'Critical',
    ...         'field.bugwatch': '6'})
    >>> edit_view = getView(
    ...     thunderbird_task, '+editstatus-page', request)
    >>> edit_view.process_form()
    >>> thunderbird_task.bugwatch == bugzilla_watch
    True
    >>> thunderbird_task.status.title
    'Unknown'

If we unlink the bug watch, the bugtask's status and importance will be
set to their default values:

    >>> request = LaunchpadTestRequest(
    ...     form={
    ...         'FORM_SUBMIT': '',
    ...         'field.bugwatch-empty-marker': '1'})
    >>> edit_view = getView(
    ...     thunderbird_task, '+editstatus-page', request)
    >>> edit_view.process_form()
    >>> thunderbird_task.bugwatch is None
    True

    >>> from canonical.launchpad.interfaces import IBugTask
    >>> thunderbird_task.status == IBugTask['status'].default
    True
    >>> thunderbird_task.importance == IBugTask['importance'].default
    True

Milestone Editing Permissions
-----------------------------

A milestone can be edited only by a user with launchpad.Edit permissions
on the distribution or product context. When the user has this
permission, the edit page renders an input widget, otherwise it renders
a display widget.

    >>> from zope.app.form.interfaces import IInputWidget
    >>> from canonical.launchpad.interfaces import IBugTaskSet

The distribution owner gets an edit widget for the distribution task.

    >>> login("mark@hbd.com")

    >>> request = LaunchpadTestRequest()
    >>> ubuntu_task = getUtility(IBugTaskSet).get(17)
    >>> bugtask_edit_view = getView(ubuntu_task, "+editstatus-page", request)
    >>> bugtask_edit_view.initialize()

    >>> IInputWidget.providedBy(bugtask_edit_view.milestone_widget)
    True
    
But an unprivileged user does not.

    >>> from zope.app.form.browser import ItemDisplayWidget

    >>> login("no-priv@canonical.com")

    >>> bugtask_edit_view = getView(ubuntu_task, "+editstatus-page", request)
    >>> bugtask_edit_view.initialize()

    >>> isinstance(bugtask_edit_view.milestone_widget, ItemDisplayWidget)
    True

A bug contact can also change the milestone. Let's set no-priv as Ubuntu's bug
contact.

    >>> from canonical.launchpad.interfaces import (
    ...     IDistributionSet, IPersonSet)

    >>> login("foo.bar@canonical.com")
    >>> ubuntu = getUtility(IDistributionSet).getByName("ubuntu")
    >>> ubuntu.bugcontact = getUtility(IPersonSet).getByName("no-priv")
    
Unlike before, no-priv can now edit the milestone.

    >>> bugtask_edit_view = getView(ubuntu_task, "+editstatus-page", request)
    >>> bugtask_edit_view.initialize()

    >>> IInputWidget.providedBy(bugtask_edit_view.milestone_widget)
    True
