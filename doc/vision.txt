=====================
Launchpad: The Vision
=====================

Introduction
============

Open source software is bigger than you think.  It is much more than simply
writing the code.  Code has to be packaged and delivered to users who then can
give feedback and file bugs.  Distributions made up of thousands of different
software packages need to be released to meet a deadline.  Translations must
be made into hundreds of different languages and accumulated from a variety of
sources.  Everywhere bugs need to be tracked, plans made and kept.
Distributions have to be made to work on a wide variety of hardware
platforms.

 * Who is affected by it
 * What properties must a solution have
 * Why solve it? (scales)
 * Where is world at now


What is Launchpad?
==================

Launchpad is a complete system for gathering changes from different types of
sources and collaboratively organizing them into packaged software for the end
user, delivered as part of an operating system that can be downloaded or comes
pre-installed on purchased hardware.


Distinctives
------------

Launchpad is different from other "forges" in a few important ways:

  Cross-project collaboration
    No project lives in isolation.  Each project is part of an ecosystem of
    software.  Projects must be able to interact with each other, share bugs,
    teams, goals and code with each other.

  Front-end to open source
    Launchpad aims to be a front-end to open source.  Whether or not a project
    chooses to host on Launchpad, opportunistic developers can use Launchpad
    to navigate bugs, get code and send patches.  Likewise, we aim to present a
    uniform interface to the projects we have.

  Distributions are projects too
    Launchpad hosts Linux distributions in much the same way as it hosts
    projects, allowing for developers to feel at home when interacting with
    distributions.

  Gated development
    Sometimes, secrets are necessary.  Launchpad understands that sometimes
    development needs to be done privately, and the results only later shared
    with the world.  Security fixes, OEM development for new hardware,
    proprietary services with open source clients are all examples of these.

  Hardware matters
    Many software developers like to pretend that hardware does not really
    exist.  When people distribute software as part of an operating system,
    they don't have the luxury of forgetting. Launchpad understands that
    developers often need to acknoweldge and work around differences thrown up
    by hardware.


Values
------

Invisible.  If not, fun.
~~~~~~~~~~~~~~~~~~~~~~~~

Launchpad is a tool to help busy people get important stuff done.  It should
stay out of the way where possible.  Bugs, OOPSes, downtime and slowness all
draw attention to Launchpad and away from the interesting problems that our
users are trying to solve.

Where it is not possible to stay out of the way, Launchpad should be fun to
use.  We make next actions obvious and draw attention to users' achievements.


Create and highlight opportunities
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

One of the grand things about open source software is that it is open to
contributions from total strangers.

Launchpad makes those contributions possible by removing as many barriers as
possible to contribution, and highlights areas where contributions would be
especially welcome.


XXX - Where communities intersect
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Curtis goes on about this one.  I think he's on to something, but I don't
really know what it is or where it should go.


XXX - Collaboration occurs between people
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Something about the fact that "cross-project collaboration" is actually about
acknowledging that people are the entities that exist between projects.


Not our data
~~~~~~~~~~~~

The data in Launchpad does not really belong to us, we are merely its
stewards.  We make sure that users can get their data easily and that they can
change it as they see fit.


Launchpad Agents
================

 * People
 * Projects
 * Distribution
 * Hardware

Launchpad Stock-in-trade
========================

Stuff people make
-----------------

 * Translations
 * Code
 * Packages
 * These are published, reviewed, accepted

Stuff people want
-----------------

 * Bugs
 * Blueprints
 * Milestones
 * These are plans made, commented on

Shop front
----------

 * Project home
 * Answers
 * Announcement

New World
=========

 * Describe the impact
 * Example stories
 * Refer to distinctives


Quotes lifted from elsewhere
============================

By encompassing the entire process, all the way to OS delivery, Launchpad and
Canonical can provide a unique service: enable each contributor to focus on
the work they care about, while giving them an ambient awareness of how their
work fits into a larger picture, and providing a path by which they can
participate in other parts of that picture when they feel the need.

Launchpad's relationship to them is to increase their surface area: to provide
a binding surface by which OS-driven improvements can reach upstream code
faster, and upstream improvements can reach the OS faster.

Two networks are meshed together in Launchpad:
 1. Network of people making software
 1. The network of dependencies between software.

People who are interested in doing something great will need to coordinate
their work, describe the things that they aren't doing yet but wish they
could, and keep track of the defects in the things they have already done.

But open source software is not quite the same as proprietary software or a
commercial product. In open source software, all users are potential
contributors.
