#! /bin/bash

# This script will setup a brand new Ubuntu machine as a LP developer
# workstation, from scratch. The script lives in the LP codebase itself,
# as utilities/rocketfuel-setup

if [ ! -e "$HOME/.rocketfuel-env.sh" ]; then
  echo "# Common environment variables for the rocketfuel-* scripts.
#
# The ones you can set are:
#
# LP_PROJECT_ROOT - The root directory of all your Canonical stuff.  Your
#                   Launchpad shared repository will live in a child directory
#                   of this directory.
# LP_SHARED_REPO  - Your Launchpad shared repository directory.  All of your
#                   Launchpad development branches will live under here.
# LP_TRUNK_NAME   - The directory name (not path!) to your rocketfuel trunk
#                   mirror directory.  This is relative to your shared repo.
# LP_SOURCEDEPS_DIR - The name of the directory (not path!) where your
#                   trunk sourcecode will be placed.  This is relative to your
#                   LP_PROJECT_ROOT and should /not/ have the 'sourcecode'
#                   path appended to it, since this is automatically added by
#                   the scripts.

LP_PROJECT_ROOT=\${LP_PROJECT_ROOT:=~/canonical}
LP_SHARED_REPO=\${LP_SHARED_REPO:=lp-branches}
LP_PROJECT_PATH=\$LP_PROJECT_ROOT/\$LP_SHARED_REPO
LP_TRUNK_NAME=\${LP_TRUNK_NAME:=trunk}
LP_TRUNK_PATH=\$LP_PROJECT_PATH/\$LP_TRUNK_NAME

LP_SOURCEDEPS_DIR=\${LP_SOURCEDEPS_DIR:=lp-sourcedeps}
LP_SOURCEDEPS_PATH=\$LP_PROJECT_ROOT/\$LP_SOURCEDEPS_DIR/sourcecode

# Force tilde expansion
LP_SOURCEDEPS_PATH=\$(eval echo \${LP_SOURCEDEPS_PATH})
" > "$HOME/.rocketfuel-env.sh"
fi

source "$HOME/.rocketfuel-env.sh"
if [ "$?" != 0 ]; then
    echo "Something went wrong with rocketfuel-setup!"
    exit 1
fi

# load up Ubuntu release details so we know which repos to enable
source /etc/lsb-release

# Establish Canonical username
whoami=`whoami`
printf "What is your username on Canonical servers? [$whoami] "
read canusrname
if [ ! -z ${canusrname} ]; then
  whoami=${canusrname};
fi

# Test that we can access Canonical servers
ssh ${whoami}@chinstrap.canonical.com pwd > /dev/null
if [ $? -ne 0 ]; then
  echo "
ERROR: Unable to login to chinstrap, please check your Canonical account
details.
"
  exit 1
fi

# Establish LP username
printf "What is your Launchpad username? [$whoami] "
read lpusername
if [ -z ${lpusername} ]; then
  lpusername=${whoami}
fi

# Make sure you have all the needed virtual hosts

dev_host() {
  grep -q "^127.0.0.88.* ${hostname}" /etc/hosts
  if [ $? -ne 0 ]; then
    sudo sed -i "s/^127.0.0.88.*$/&\ ${hostname}/" /etc/hosts
    echo "${hostname} added to /etc/hosts"
  fi
  }

grep -q "^127.0.0.88" /etc/hosts
if [ $? -ne 0 ]; then
  echo "Adding development hosts on local machine"
  echo "
# Launchpad virtual domains. This should be on one line.
127.0.0.88      launchpad.dev
" | sudo tee -a /etc/hosts > /dev/null
  echo "launchpad.dev added to /etc/hosts"
fi

declare -a hostnames
hostnames=$(cat <<EOF
    answers.launchpad.dev
    api.launchpad.dev
    bazaar.launchpad.dev
    bazaar-internal.launchpad.dev
    beta.launchpad.dev
    blueprints.launchpad.dev
    bugs.launchpad.dev
    code.launchpad.dev
    feeds.launchpad.dev
    id.launchpad.dev
    openid.launchpad.dev
    shipit.edubuntu.dev
    shipit.kubuntu.dev
    shipit.ubuntu.dev
    translations.launchpad.dev
    xmlrpc-private.launchpad.dev
    xmlrpc.launchpad.dev
EOF
    )

for hostname in $hostnames; do
  dev_host;
done

grep -q "^127.0.0.99" /etc/hosts
if [ $? -ne 0 ]; then
  echo "
127.0.0.99      bazaar.launchpad.dev
" | sudo tee -a /etc/hosts > /dev/null
  echo "bazaar.launchpad.dev added to /etc/hosts"
fi

# Enable relevant Ubuntu package repositories
grep -q "^deb http:.* ${DISTRIB_CODENAME} .*universe" /etc/apt/sources.list
if [ $? -ne 0 ]; then
    echo "Please enable the 'universe' component in /etc/apt/source.list'"
    exit 1
fi
grep -q "^deb http:.* ${DISTRIB_CODENAME} .*multiverse" /etc/apt/sources.list
if [ $? -ne 0 ]; then
    echo "Please enable the 'multiverse' component in /etc/apt/source.list'"
    exit 1
fi

if [ ! -e ~/.ssh/config ]; then
    touch ~/.ssh/config
fi

grep -q "^GSSAPIAuthentication" ~/.ssh/config
if [ $? -ne 0 ]; then
  echo "Please add the following directive to your ~/.ssh/config:
------------------------------------------------------------
GSSAPIAuthentication no
------------------------------------------------------------
"
  read
fi

grep -q "^Host .*chinstrap" ~/.ssh/config
if [ $? -ne 0 ]; then
  echo "Please add the following directives to your ~/.ssh/config:
------------------------------------------------------------
Host chinstrap chinstrap.canonical.com chinstrap.ubuntu.com
    ForwardAgent yes
    Hostname chinstrap.canonical.com
    ProxyCommand none
    User ${whoami}
------------------------------------------------------------
"
  read
fi

grep -q "^Host.*\*\.canonical.com" ~/.ssh/config
if [ $? -ne 0 ]; then
  echo "Please add the following directives to your ~/.ssh/config:
------------------------------------------------------------
Host *.canonical.com *.ubuntu.com
    ForwardAgent yes
    ProxyCommand ssh chinstrap.canonical.com nc -q0 %h %p
    User ${whoami}
------------------------------------------------------------
"
  read
fi

grep -q "^Host .*devpad" ~/.ssh/config
if [ $? -ne 0 ]; then
  echo "Please add the following directives to your ~/.ssh/config:
------------------------------------------------------------
Host devpad devpad.canonical.com
    ForwardAgent yes
    Hostname devpad.canonical.com
    ProxyCommand ssh chinstrap.canonical.com nc -q0 %h %p
    User ${whoami}
------------------------------------------------------------
"
  read
fi

grep -q "^Host .*bazaar.launchpad.dev" ~/.ssh/config
if [ $? -ne 0 ]; then
  echo "Please add the following directives to your ~/.ssh/config:
------------------------------------------------------------
Host bazaar.launchpad.dev
    Hostname launchpad.dev
    HostKeyAlias bazaar.launchpad.dev
    User sabdfl
    Port 5022
    IdentityFile ~/.ssh/launchpad_id_dsa
------------------------------------------------------------
"
  read
fi

# This is not strictly needed for bzr versions >= 1.9 but it's included
# here for backwards compatibility.
grep -q "^Host .*bazaar.launchpad.net" ~/.ssh/config
if [ $? -ne 0 ]; then
  echo "Please add the following directives to your ~/.ssh/config:
------------------------------------------------------------
Host bazaar.launchpad.net
    User ${lpusername}
------------------------------------------------------------
"
  read
fi


echo "Testing ssh to devpad..."
ssh devpad.canonical.com pwd > /dev/null
if [ $? -ne 0 ]; then
  echo "
ERROR: Unable to verify capability to ssh to devpad. Please check
~/.ssh/config and check the User configuration item.  ['${whoami}']"
  exit 1
fi

sudo apt-key list | grep -q "2048g/CA6E8A17"
if [ $? -ne 0 ]; then
  echo "Retrieving signing-key for LP package repository."
  scp devpad.canonical.com:/code/lp-maintainers.pub /tmp/
  if [ $? -ne 0 ]; then
    echo "Unable to fetch key for LP package repository"
    exit 1
  fi
  [ `sha1sum /tmp/lp-maintainers.pub | cut -d " " -f 1` = \
     f1714a57bd8c481f45b2a64e2eb9131176c8922e ] \
  && sudo apt-key add /tmp/lp-maintainers.pub
  if [ $? -ne 0 ]; then
    echo "Unable to add key for LP package repository"
    exit 1
  fi
fi

LPDEV_SOURCES="/etc/apt/sources.list.d/launchpad-dev.list"
if [ ! -e $LPDEV_SOURCES ]; then
  sudo touch $LPDEV_SOURCES
fi

grep -q "^deb http://lpdebs.canonical.com/" $LPDEV_SOURCES
if [ $? -ne 0 ]; then
  echo "Adding LP package respository to package source list."
  echo "deb http://lpdebs.canonical.com/${DISTRIB_CODENAME} ./" | sudo tee -a $LPDEV_SOURCES
fi

grep -q "^deb http://ppa.launchpad.net/bzr/ubuntu" $LPDEV_SOURCES
if [ $? -ne 0 ]; then
  echo "Adding Bazaar PPA repository to package source list."
  echo "deb http://ppa.launchpad.net/bzr/ubuntu ${DISTRIB_CODENAME} main" | sudo tee -a $LPDEV_SOURCES
fi

sudo aptitude update
dpkg -s launchpad-developer-dependencies | grep -q "^Status:.*installed"
if [ $? -ne 0 ]; then
  echo "Installing launchpad-developer-dependencies package..."
  sudo aptitude install launchpad-developer-dependencies
  if [ $? -ne 0 ]; then
    echo "Unable to install LP developer dependencies"
    exit 1
  fi
fi

# Create the document root to avoid Apache warnings
mkdir -p /var/tmp/bazaar.launchpad.dev/mirrors

# Create an empty rewritemap file so that Apache will start.
mkdir -p /var/tmp/bazaar.launchpad.dev/config
touch /var/tmp/bazaar.launchpad.dev/config/launchpad-lookup.txt

sudo a2enmod proxy > /dev/null
if [ $? -ne 0 ]; then
  echo "ERROR: Unable to enable proxy module in Apache2"
  exit 1
fi

sudo a2enmod proxy_http > /dev/null
if [ $? -ne 0 ]; then
  echo "ERROR: Unable to enable proxy_http module in Apache2"
  exit 1
fi

sudo a2enmod rewrite > /dev/null
if [ $? -ne 0 ]; then
  echo "ERROR: Unable to enable rewrite module in Apache2"
  exit 1
fi

sudo a2enmod ssl > /dev/null
if [ $? -ne 0 ]; then
  echo "ERROR: Unable to enable ssl module in Apache2"
  exit 1
fi

sudo a2enmod deflate > /dev/null
if [ $? -ne 0 ]; then
  echo "ERROR: Unable to enable deflate module in Apache2"
  exit 1
fi

# Create the local branch structure we will use for managing Launchpad code
mkdir -p $LP_PROJECT_ROOT
cd $LP_PROJECT_ROOT
if [ ! -d $LP_SHARED_REPO ]; then
  # 1.6 format needed for stacking on Launchpad.
  bzr init-repo --1.6 $LP_SHARED_REPO
  if [ $? -ne 0 ]; then
    echo "ERROR: Unable to setup local LP repository"
    exit 1
  fi
fi
if [ ! -d $LP_SHARED_REPO/.bzr -a -d $LP_SHARED_REPO/.bzr/repository ]; then
  echo "ERROR: LP repository not found in $LP_PROJECT_PATH"
  exit 1
fi

echo "Logging bzr into Launchpad ..."
bzr launchpad-login $lpusername

cd $LP_SHARED_REPO
if [ ! -d $LP_TRUNK_NAME ]; then
  echo "Making local branch of Launchpad trunk, this may take a while..."
  # bzr up to 1.6b2 has a bug that causes this to oom, but since 1.10 is
  # released now I hope nobody is using it.
  bzr branch bzr+ssh://bazaar.launchpad.net/~launchpad-pqm/launchpad/devel/ $LP_TRUNK_NAME
  if [ $? -ne 0 ]; then
    echo "ERROR: Unable to create local copy of Rocketfuel trunk"
    exit 1
  fi
fi

cd $LP_TRUNK_NAME
if [ ! `bzr info | grep -i "parent branch" | cut -d: -f3` = \
  "//bazaar.launchpad.net/%7Elaunchpad-pqm/launchpad/devel/" ]; then
  echo "ERROR: Your trunk branch in $LP_TRUNK_PATH has an
       incorrect pull location, correcting now..."
  bzr pull --remember bzr+ssh://bazaar.launchpad.net/~launchpad-pqm/launchpad/devel/
  if [ $? -ne 0 ]; then
    echo "ERROR: Unable to set trunk pull location to lp:~launchpad-pqm/launchpad/devel/"
    exit 1
  fi
fi

sudo make install > /dev/null
if [ $? -ne 0 ]; then
  echo "ERROR: Unable to install apache config appropriately"
  exit 1
fi


# Setup Bazaar locations configuration
if [ ! -d ~/.bazaar ]; then
  mkdir ~/.bazaar
  if [ $? -ne 0 ]; then
    echo "Unable to create ~/.bazaar/ directory"
    exit 1
  fi
fi
if [ ! -e ~/.bazaar/locations.conf ]; then
  touch ~/.bazaar/locations.conf
fi
grep -q "\[${LP_PROJECT_PATH}\]" ~/.bazaar/locations.conf
if [ $? -ne 0 ]; then
  cat >> ~/.bazaar/locations.conf << EOF
[$LP_PROJECT_PATH]
pqm_email = Launchpad PQM <launchpad@pqm.canonical.com>
submit_branch = ${LP_TRUNK_PATH}
public_branch = bzr+ssh://bazaar.launchpad.net/~${lpusername}/launchpad
public_branch:policy = appendpath
smtp_server = smtp.canonical.com:587
smtp_username = canonical
smtp_password = <find me at https://wiki.canonical.com/EmailSetup>
push_location = lp:~${lpusername}/launchpad
push_location:policy = appendpath
review_list = Launchpad Reviews <launchpad-reviews@lists.canonical.com>
merge_target = ${LP_TRUNK_PATH}
EOF
  echo "Bazaar branch configuration updated. You may need to set smtp_server in ~/.bazaar/locations.conf to something else if email to PQM does not work."
fi

grep -q "\[$LP_TRUNK_PATH\]" ~/.bazaar/locations.conf
if [ $? -ne 0 ]; then
  echo "
[$LP_TRUNK_PATH]
public_branch = bzr+ssh://bazaar.launchpad.net/~launchpad-pqm/launchpad/dev\
" | tee -a ~/.bazaar/locations.conf > /dev/null
fi

# Setup access to the local supermirror
if [ ! -e ~/.ssh/launchpad_id_dsa ]; then
  cp $LP_TRUNK_PATH/lib/canonical/codehosting/tests/id_dsa ~/.ssh/launchpad_id_dsa
  chmod 600 ~/.ssh/launchpad_id_dsa
  echo "Setup ssh key for local supermirror ssh access."
fi

# Setup environment variables in a ~ dot file
cd $HOME
if [ ! -e $HOME/.rocketfuel-env.sh ]; then
  ln -s $LP_TRUNK_PATH/utilities/rocketfuel-env.sh .rocketfuel-env.sh
fi

# Setup scripts in /usr/local/bin
cd /usr/local/bin
if [ ! -e rocketfuel-get ]; then
  sudo ln -s $LP_TRUNK_PATH/utilities/rocketfuel-get
fi
ls -l rocketfuel-get | cut -d">" -f2 | grep -q "$LP_TRUNK_NAME\/utilities\/rocketfuel"
if [ $? -ne 0 ]; then
  echo "WARNING: /usr/local/bin/rocketfuel-get should be deleted so I can
         recreate it."
fi
if [ ! -e rocketfuel-flakes ]; then
  sudo ln -s $LP_TRUNK_PATH/utilities/rocketfuel-flakes
fi
ls -l rocketfuel-flakes | cut -d">" -f2 | grep -q "$LP_TRUNK_NAME\/utilities\/rocketfuel"
if [ $? -ne 0 ]; then
  echo "WARNING: /usr/local/bin/rocketfuel-flakes should be deleted so I can
         recreate it."
fi
if [ ! -e rocketfuel-branch ]; then
  sudo ln -s $LP_TRUNK_PATH/utilities/rocketfuel-branch
fi
ls -l rocketfuel-branch | cut -d">" -f2 | grep -q "$LP_TRUNK_NAME\/utilities\/rocketfuel"
if [ $? -ne 0 ]; then
  echo "WARNING: /usr/local/bin/rocketfuel-branch should be deleted so I can
         recreate it."
fi
if [ ! -e rocketfuel-setup ]; then
  sudo ln -s $LP_TRUNK_PATH/utilities/rocketfuel-setup
fi
ls -l rocketfuel-setup | cut -d">" -f2 | grep -q "$LP_TRUNK_NAME\/utilities\/rocketfuel"
if [ $? -ne 0 ]; then
  echo "WARNING: /usr/local/bin/rocketfuel-setup should be deleted so I can
         recreate it."
fi
if [ ! -e rocketfuel-status ]; then
  sudo ln -s $LP_TRUNK_PATH/utilities/rocketfuel-status
fi
ls -l rocketfuel-status | cut -d">" -f2 | grep -q "$LP_TRUNK_NAME\/utilities\/rocketfuel"
if [ $? -ne 0 ]; then
  echo "WARNING: /usr/local/bin/rocketfuel-status should be deleted so I can
         recreate it."
fi
if [ ! -e rocketfuel-push ]; then
  sudo ln -s $LP_TRUNK_PATH/utilities/rocketfuel-push
fi
ls -l rocketfuel-push | cut -d">" -f2 | grep -q "$LP_TRUNK_NAME\/utilities\/rocketfuel"
if [ $? -ne 0 ]; then
  echo "WARNING: /usr/local/bin/rocketfuel-push should be deleted so I can
         recreate it."
fi


# Make sure we have all the right code in place for source dependencies
/usr/local/bin/rocketfuel-get

echo "
Thank you for using this script. You can improve it for everyone by
committing changes to LP in utilities/rocketfuel-setup.

Before you can submit branches to PQM, you need to visit:
https://wiki.canonical.com/EmailSetup
and find the current SMTP server password and enter it in the appropriate
place in $HOME/.bazaar/locations.conf
Alternatively, configure it to use your own SMTP server locally.

You should use the following commands to manage your Rocketfuel:

 rocketfuel-get
    Update your copy of trunk and the necessary source dependencies, and
    make sure all source dependencies are properly linked in to all the
    branches you are working on.

 rocketfuel-branch foo
    Create a new branch of LP called "foo" in $LP_PROJECT_PATH/foo,
    with all the source dependencies properly linked in.

 rocketfuel-status
    Check each of the branches in $LP_PROJECT_PATH and show which of them have
    uncommitted changes, also check which ones have revisions that have not
    yet landed on trunk.

 rocketfuel-push
    Push all of your branches to devpad, so that you have a server-side
    backup of everything.

Happy hacking!
"
