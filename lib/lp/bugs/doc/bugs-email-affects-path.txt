The 'affects' path in the Bugs e-mail interface
===============================================

When choosing which bugtask certain e-mail commands should modify, the
'affects' command is used. It accepts a single argument, the name of the
bug target the bugtask should target. The conversion of a name to an
IBugTarget is done by the AffectsEmailCommand.getBugTarget method.

    >>> from lp.bugs.mail.commands import AffectsEmailCommand


Getting a product
-----------------

Getting a product is done by specifying the name of the product.

    >>> from lp.registry.interfaces.product import IProduct
    >>> evolution = AffectsEmailCommand.getBugTarget('evolution')
    >>> IProduct.providedBy(evolution)
    True
    >>> evolution.name
    u'evolution'


Getting a product series
------------------------

A product series is a part of a product, so both the product and series
name have to be given, separated with a slash.

    >>> from lp.registry.interfaces.productseries import IProductSeries
    >>> evolution_trunk = AffectsEmailCommand.getBugTarget('evolution/trunk')
    >>> IProductSeries.providedBy(evolution_trunk)
    True
    >>> evolution_trunk.product.name
    u'evolution'
    >>> evolution_trunk.name
    u'trunk'


Getting a distribution
----------------------

Getting a distribution is done by specifying the name of the
distribution.

    >>> from lp.registry.interfaces.distribution import IDistribution
    >>> ubuntu = AffectsEmailCommand.getBugTarget('ubuntu')
    >>> IDistribution.providedBy(ubuntu)
    True
    >>> ubuntu.name
    u'ubuntu'


Getting a source package in a distribution
..........................................

A distribution source package is a part of a distribution, so both the
distribution and package name has to be specified when getting such a
package.

    >>> from lp.registry.interfaces.distributionsourcepackage import (
    ...     IDistributionSourcePackage)
    >>> ubuntu_evolution = AffectsEmailCommand.getBugTarget(
    ...     'ubuntu/evolution')
    >>> IDistributionSourcePackage.providedBy(ubuntu_evolution)
    True
    >>> ubuntu_evolution.name
    u'evolution'
    >>> ubuntu_evolution.distribution.name
    u'ubuntu'


Getting a distribution series
-----------------------------

A distribution series is a part of a distribution, so both the
distribution and series has to be specified.

    >>> from lp.registry.interfaces.distroseries import IDistroSeries
    >>> ubuntu_warty = AffectsEmailCommand.getBugTarget('ubuntu/warty')
    >>> IDistroSeries.providedBy(ubuntu_warty)
    True
    >>> ubuntu_warty.name
    u'warty'
    >>> ubuntu_warty.distribution.name
    u'ubuntu'

The path structure for a distribution series is the same as for a
distribution source package, so the same error handling is used for
both.


Getting a source package in a distribution series
-------------------------------------------------

When getting a source package within a distribution series, the source
package is given after the distribution series.

    >>> from lp.registry.interfaces.sourcepackage import ISourcePackage
    >>> warty_evolution = AffectsEmailCommand.getBugTarget(
    ...     'ubuntu/warty/evolution')
    >>> ISourcePackage.providedBy(warty_evolution)
    True
    >>> warty_evolution.name
    u'evolution'
    >>> warty_evolution.distroseries.name
    u'warty'
    >>> warty_evolution.distroseries.distribution.name
    u'ubuntu'
