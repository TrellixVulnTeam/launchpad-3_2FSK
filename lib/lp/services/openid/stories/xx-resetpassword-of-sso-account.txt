= Resetting the password of SSO-only accounts =

Every once in a while people come to register Launchpad accounts using email
addresses that belong to SSO-only accounts.  In these cases we explain to them
that they should use the SSO credentials to log into Launchpad, but it's
possible that they've forgotten their password so they'll try to use the
'Forgotten your password?' link to reset it.

Since their account is SSO-only (i.e. it has no Person record associated
with), we can't use Launchpad's workflow for resetting the password -- it
expects a Person entry to be associated with the given email addres. Because
of that we'll allow the user to initiate the password-reset workflow on
Launchpad but we'll force the use of SSO's password-reset workflow to complete
it.

    # Create a personless account to demostrate what we want.
    >>> login(ANONYMOUS)
    >>> account = factory.makeAccount('Test', email='test@example.com')
    >>> logout()

Trying to register will give an error, telling the user to use the SSO
credentials to login.

    >>> from lp.testing.registration import set_captcha_answer
    >>> browser.open('http://launchpad.dev/+login')
    >>> browser.getControl(name='loginpage_email', index=1).value = (
    ...     'test@example.com')
    >>> set_captcha_answer(browser, prefix='loginpage_')
    >>> browser.getControl('Register').click()
    >>> print_feedback_messages(browser.contents)
    The email address test@example.com is already registered in the Launchpad
    Login Service... Please use the same email and password to log into
    Launchpad.

But the user has forgotten their credentials, so they'll have to reset the
password.

    >>> browser.getLink('Forgotten your password?').click()
    >>> browser.url
    'http://launchpad.dev/+forgottenpassword'
    >>> browser.getControl(name='email').value = 'test@example.com'
    >>> set_captcha_answer(browser)
    >>> browser.getControl('Request Reset').click()
    >>> print extract_text(find_main_content(browser.contents))
    Need a new Launchpad password?
    We have sent you an email with instructions to reset your password.

    # Get the link from the email.
    >>> from lp.services.mail import stub
    >>> from canonical.launchpad.ftests.logintoken import (
    ...     get_token_url_from_email)
    >>> len(stub.test_emails)
    1
    >>> from_addr, to_addrs, raw_msg = stub.test_emails.pop()
    >>> link = get_token_url_from_email(raw_msg)
    >>> to_addrs
    ['test@example.com']

Following the link sent by email will take the user to the SSO site to
complete the password reset.

    >>> browser.open(link)
    >>> browser.url
    'http://openid.launchpad.dev/token/.../+resetpassword'
    >>> browser.getControl(name='field.email').value = 'test@example.com'
    >>> browser.getControl(name='field.password').value = 'test'
    >>> browser.getControl(name='field.password_dupe').value = 'test'
    >>> browser.getControl('Continue').click()
    >>> print_feedback_messages(browser.contents)
    Your password has been reset successfully.

Since the password reset was done on SSO, the user won't be logged into
Launchpad, so we redirect the user back to Launchpad's +login page for them to
login.

    >>> browser.url
    'http://launchpad.dev/+login'
    >>> browser.getControl(
    ...     'E-mail address:', index=0).value = 'test@example.com'
    >>> browser.getControl('Password').value = 'test'
    >>> browser.getControl('Log In').click()
    >>> print extract_text(find_tag_by_id(browser.contents, 'logincontrol'))
    Test...
