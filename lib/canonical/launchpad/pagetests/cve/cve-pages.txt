= CVE tracking =

Launchpad supports the CVE database system.

The Bugs front page records the total number of CVE references linked.

    >>> browser.open('http://bugs.launchpad.dev/')
    >>> browser.url
    'http://bugs.launchpad.dev/'
    >>> print find_tag_by_id(browser.contents, 'application-footer')
    <...2...bugs are related to...CVE entries...

"CVE entries" links to the main CVEs page, which has the same
navigation as the Bugs front page, and lists the latest 5 CVE entries
created or modified.

    >>> browser.getLink('CVE entries').click()
    >>> print browser.url
    http://bugs.launchpad.dev/bugs/cve
    >>> print_location(browser.contents)
    Hierarchy: Launchpad
    Tabs:
    * Launchpad Home - http://launchpad.dev/
    * Code - http://code.launchpad.dev/
    * Bugs (selected) - http://bugs.launchpad.dev/
    * Blueprints - http://blueprints.launchpad.dev/
    * Translations - http://translations.launchpad.dev/
    * Answers - http://answers.launchpad.dev/
    Main heading: Launchpad CVE tracker
    >>> print browser.contents
    <...
    ...CVE-2005-2737 (Candidate)...
    ...CVE-2005-2736 (Candidate)...

The main CVEs page links to a list of all registered CVEs.

    >>> browser.getLink('All registered CVEs').click()
    >>> print browser.url
    http://bugs.launchpad.dev/bugs/cve/+all
    >>> print_location(browser.contents)
    Hierarchy: Launchpad
    Tabs:
    * Launchpad Home - http://launchpad.dev/
    * Code - http://code.launchpad.dev/
    * Bugs (selected) - http://bugs.launchpad.dev/
    * Blueprints - http://blueprints.launchpad.dev/
    * Translations - http://translations.launchpad.dev/
    * Answers - http://answers.launchpad.dev/
    Main heading: All registered CVEs

Now, we will test the search functionality of the CVE tracker. First we
will search for the word "loss" in the database and see how many show
up. We expect to see CVE-1999-2345.

  >>> print http(r"""
  ... POST /bugs/cve/ HTTP/1.1
  ... Content-Length: 9
  ... Content-Type: application/x-www-form-urlencoded
  ... 
  ... text=loss""")
  HTTP/1.1 200 Ok
  ...Matches: 1...
  ...CVE-1999-2345 (Candidate)...


Finally, let's put a CVE number in there. We expect to jump straight to that
CVE.

  >>> print http(r"""
  ... POST /bugs/cve/ HTTP/1.1
  ... Content-Length: 14
  ... Content-Type: application/x-www-form-urlencoded
  ... 
  ... text=2005-2737""")
  HTTP/1.1 303 See Other
  ...
  Location: http://.../bugs/cve/2005-2737
  <BLANKLINE>

A CVE page has the same navigation as the Bugs front page (because CVEs
don't have their own blueprints, translations, etc), and also includes
a link back to the main CVE page.

    >>> anon_browser.open('http://launchpad.dev/bugs/cve/2005-2737')
    >>> print_location(anon_browser.contents)
    Hierarchy: Launchpad
    Tabs:
    * Launchpad Home - http://launchpad.dev/
    * Code - http://code.launchpad.dev/
    * Bugs (selected) - http://bugs.launchpad.dev/
    * Blueprints - http://blueprints.launchpad.dev/
    * Translations - http://translations.launchpad.dev/
    * Answers - http://answers.launchpad.dev/
    Main heading: CVE 2005-2737
    >>> back_link = anon_browser.getLink('Launchpad CVE tracker')
    >>> print back_link.url
    http://launchpad.dev/bugs/cve

The CVE page links to the related bugs.

  >>> "Cross-site scripting (XSS) vulnerability" in anon_browser.contents
  True
  >>> 'No related bugs' in anon_browser.contents
  True
  >>> for tag in find_tags_by_class(
  ...     anon_browser.contents, 'menu-link-linkbug'):
  ...     print tag
  <a href="http://launchpad.dev/bugs/cve/2005-2737/+linkbug"
     class="menu-link-linkbug">Link to bug</a>
  >>> 'Candidate' in anon_browser.contents
  True
  >>> 'http://marc.theaimsgroup.com/?l=bugtraq&amp;m=112511025414488&amp;w=2">20050826 Multiple PHP' in anon_browser.contents
  True
