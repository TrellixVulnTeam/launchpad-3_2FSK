
Check if the buider actions are available.

All of them require authorization, some lp.Edit, some lp.Admin, both
are only granted to members of launchpad-buildd-admins team.

  >>> browser = setupBrowser(
  ...     auth='Basic celso.providelo@canonical.com:cprov')

Edit:

  >>> browser.open("http://localhost/+builds/bob/+edit")
  >>> browser.contents
  '...Bob The Builder...
  ...Name...
  ...Title...
  ...Description...
  ...Processor...
  ...URL...
  ...Manual Mode...
  ...Owner...
  ...Virtual Machine Host...
  ...Change...'


Let's check we get a nice validation error if we submit the form with
a bad url:

  >>> url_field = browser.getControl("URL")
  >>> url_field.value = "http://this.url.is.bad/because/it/has/a/path"
  >>> change_button = browser.getControl("Change")
  >>> change_button.click()
  >>> browser.contents
  '...Invalid builder url...'

Change Mode:

  >>> browser.open("http://localhost/+builds/bob/+mode")
  >>> browser.contents
  '...Change build machine mode...
  ...Manual Mode...
  ...Change...'

Cancel Build:

  >>> browser.open("http://localhost/+builds/bob/+cancel")
  >>> browser.contents
  '...Are you sure ?...
  ...Cancel Current Job...'

Admin:

  >>> browser.open("http://localhost/+builds/bob/+admin")
  >>> browser.contents
  '...Bob The Builder...
  ...Name...
  ...Title...
  ...Description...
  ...Processor...
  ...URL...
  ...Manual Mode...
  ...Owner...
  ...Trusted...
  ...Builder State OK...
  ...Failure Notes...
  ...Virtual Machine Host...
  ...Change...'

All of them, except "Cancel current job", are implmented in top of
Zope, so they don't need more additional tests atm and cancel job
isn't really implemented.

XXX cprov 20060202: those tests needs extension to check if the
actions can be succesfully performed.

Check if the access to builder actions is forbidden to normal users:

  >>> no_priv_browser = setupBrowser(auth="Basic no-priv@canonical.com:test")
  >>> no_priv_browser.open(
  ...     "http://localhost/+builds/bob/+edit")
  Traceback (most recent call last):
  ...
  Unauthorized:...

  >>> no_priv_browser.open(
  ...     "http://localhost/+builds/bob/+mode")
  Traceback (most recent call last):
  ...
  Unauthorized:...

  >>> no_priv_browser.open(
  ...     "http://localhost/+builds/bob/+cancel")
  Traceback (most recent call last):
  ...
  Unauthorized:...

  >>> no_priv_browser.open(
  ...     "http://localhost/+builds/bob/+admin")
  Traceback (most recent call last):
  ...
  Unauthorized:...

and Unauthorized for anonymous access:

  >>> anon_browser.open(
  ...     "http://localhost/+builds/bob/+edit")
  Traceback (most recent call last):
  ...
  Unauthorized: ...

  >>> anon_browser.open(
  ...     "http://localhost/+builds/bob/+mode")
  Traceback (most recent call last):
  ...
  Unauthorized: ...

  >>> anon_browser.open(
  ...     "http://localhost/+builds/bob/+cancel")
  Traceback (most recent call last):
  ...
  Unauthorized: ...

  >>> anon_browser.open(
  ...     "http://localhost/+builds/bob/+admin")
  Traceback (most recent call last):
  ...
  Unauthorized: ...
