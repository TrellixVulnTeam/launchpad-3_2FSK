IStructuralSubscriptionTarget
-----------------------------

Let's subscribe ubuntu-team.

    >>> from lp.registry.interfaces.person import IPersonSet
    >>> personset = getUtility(IPersonSet)
    >>> ubuntu_team = personset.getByName("ubuntu-team")
    >>> no_priv = personset.getByName("no-priv")
    >>> foobar = personset.getByName("name16")
    >>> from canonical.launchpad.ftests import login
    >>> login("foo.bar@canonical.com")
    >>> target.addBugSubscription(ubuntu_team, foobar)
    <...StructuralSubscription ...>

Trying to remove a bug subscription when notification levels for other
applications are set, doesn't remove the subscription. Instead the
notification level for bugs is set to NOTHING.

    >>> def print_subscriptions_list(subscriptions):
    ...     for subscription in subscriptions:
    ...         print '%s %s %s' % (
    ...               subscription.subscriber.name,
    ...               subscription.bug_notification_level.name,
    ...               subscription.blueprint_notification_level.name)

    >>> from lp.registry.interfaces.structuralsubscription import BlueprintNotificationLevel

    >>> subscription = target.addBugSubscription(foobar, foobar)
    >>> subscription.blueprint_notification_level = (
    ...     BlueprintNotificationLevel.LIFECYCLE)
    >>> print_subscriptions_list(target.getSubscriptions())
    name16 COMMENTS LIFECYCLE
    ubuntu-team COMMENTS NOTHING
    >>> target.removeBugSubscription(foobar, foobar)
    >>> print_subscriptions_list(target.getSubscriptions())
    name16 NOTHING LIFECYCLE
    ubuntu-team COMMENTS NOTHING

To get a user's subscription to the target, use
IStructuralSubscriptionTarget.getSubscription.

    >>> target.getSubscription(ubuntu_team)
    <...StructuralSubscription ...>
    >>> print target.getSubscription(no_priv)
    None

To search for subscriptions with certain level settings on a structure
we use getSubscriptions.

    >>> from lp.registry.enum import BugNotificationLevel
    >>> subscription = target.addSubscription(no_priv, no_priv)
    >>> subscription.bug_notification_level = BugNotificationLevel.METADATA
    >>> print_subscriptions_list(target.bug_subscriptions)
    no-priv METADATA NOTHING
    ubuntu-team COMMENTS NOTHING
    >>> subscriptions = target.getSubscriptions(min_bug_notification_level=
    ...                         BugNotificationLevel.COMMENTS)
    >>> print_subscriptions_list(subscriptions)
    ubuntu-team COMMENTS NOTHING


Structural subscriptions and indirect bug subscriptions
=======================================================

    >>> bug = filebug(target, 'test bug one')
    >>> indirect_subscribers = set(
    ...     subscriber.name for subscriber in bug.getIndirectSubscribers())
    >>> structural_subscribers = set(
    ...     sub.subscriber.name for sub in target.bug_subscriptions)
    >>> structural_subscribers.difference(indirect_subscribers)
    set([])
