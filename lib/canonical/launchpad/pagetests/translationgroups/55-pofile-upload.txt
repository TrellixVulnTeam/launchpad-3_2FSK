First, make sure we can see the page.

Try to get the page when unauthenticated.

  >>> browser.open(
  ...     'http://translations.launchpad.dev/ubuntu/hoary/+source/' +
  ...         'evolution/+pots/evolution-2.2/af/+upload')
  Traceback (most recent call last):
  ...
  Unauthorized:...

And now with valid credentials.

  >>> admin_browser.open(
  ...     'http://translations.launchpad.dev/ubuntu/hoary/+source/' +
  ...         'evolution/+pots/evolution-2.2/af/+upload')
  >>> print admin_browser.url
  http://translations.launchpad.dev/ubuntu/hoary/+source/evolution/+pots/evolution-2.2/af/+upload

Now hit the upload button, but without giving a file for upload. We get an
error message back.

  >>> admin_browser.getControl('Upload').click()
  >>> print admin_browser.url
  http://translations.launchpad.dev/ubuntu/hoary/+source/evolution/+pots/evolution-2.2/af/+upload
  >>> for tag in find_tags_by_class(admin_browser.contents, 'error'):
  ...     print tag.renderContents()
  Ignored your upload because you didn't select a file to upload.

Uploading files with an unkown file format notifies the user that it cannot be handled.

  >>> from StringIO import StringIO
  >>> af_file = '''
  ... # Afrikaans translation for Silky 
  ... # Copyright (C) 2004 Free Software Foundation, Inc.
  ... # This file is distributed under the same license as the silky package.
  ... # Hanlie Pretorius <hpretorius@pnp.co.za>, 2004.
  ... #
  ... msgid ""
  ... msgstr ""
  ... "Project-Id-Version: hello-ycp-0.13.1\n"
  ... "Report-Msgid-Bugs-To: bug-gnu-gettext@gnu.org\n"
  ... "PO-Revision-Date: 2003-12-31 10:30+2\n"
  ... "Last-Translator: Ysbeer <ysbeer@af.org.za>\n"
  ... "Language-Team: Afrikaans <i18n@af.org.za>\n"
  ... "MIME-Version: 1.0\n"
  ... "Content-Type: text/plain; charset=UTF-8\n"
  ... "Content-Transfer-Encoding: 8bit\n"
  ... 
  ... #: hello.ycp:16
  ... msgid "Hello, world!"
  ... msgstr "Hallo wÃªreld!"
  ... 
  ... #: hello.ycp:20
  ... #, ycp-format
  ... msgid "This program is running as process number %1."
  ... msgstr "Hierdie program loop as prosesnommer %1."'''

  >>> upload = admin_browser.getControl('File')
  >>> upload.add_file(StringIO(af_file), 'application/msword', 'af.doc')
  >>> admin_browser.getControl('Upload').click()
  >>> print admin_browser.url
  http://translations.launchpad.dev/ubuntu/hoary/+source/evolution/+pots/evolution-2.2/af/+upload
  >>> for tag in find_tags_by_class(admin_browser.contents, 'error'):
  ...     print tag.renderContents()
  Ignored your upload because you didn't select a file to upload.

Now let's upload one that is published.


  >>> upload = admin_browser.getControl('File')
  >>> upload.add_file(StringIO(af_file), 'application/x-po', 'af.po')
  >>> admin_browser.getControl(name='upload_type').value = ['upstream']
  >>> admin_browser.getControl('Upload').click()
  >>> print admin_browser.url
  http://translations.launchpad.dev/ubuntu/hoary/+source/evolution/+pots/evolution-2.2/af/+upload
  >>> for tag in find_tags_by_class(admin_browser.contents, 'message'):
  ...     print tag.renderContents()
  Thank you for your upload. The translation content will be imported...

And one that is not published.

  >>> upload = admin_browser.getControl('File')
  >>> upload.add_file(StringIO(af_file), 'application/x-po', 'af.po')
  >>> admin_browser.getControl(name='upload_type').value = ['user']
  >>> admin_browser.getControl('Upload').click()
  >>> print admin_browser.url
  http://translations.launchpad.dev/ubuntu/hoary/+source/evolution/+pots/evolution-2.2/af/+upload
  >>> for tag in find_tags_by_class(admin_browser.contents, 'message'):
  ...     print tag.renderContents()
  Thank you for your upload. The translation content will be imported...
