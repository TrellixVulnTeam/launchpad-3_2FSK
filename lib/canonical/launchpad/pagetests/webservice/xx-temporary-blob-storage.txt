The set of temporary blobs
==========================

The set of temporary blobs in Launchpad is represented by the collection
found at /temporary-blobs. The collection contains all the temporary
blobs whose file aliases have not expired.

    >>> temporary_blobs = webservice.get('/temporary-blobs').jsonBody()
    >>> len(temporary_blobs['entries'])
    0

If we add a new blob, it will show up in the temporary_blobs entries
set.

    >>> login('foo.bar@canonical.com')
    >>> from zope.component import getUtility
    >>> from canonical.launchpad.interfaces.temporaryblobstorage import (
    ...     ITemporaryStorageManager)

    >>> blob_token = getUtility(ITemporaryStorageManager).new("some data")
    >>> logout()

    >>> temporary_blobs = webservice.get('/temporary-blobs').jsonBody()
    >>> len(temporary_blobs['entries'])
    1

Each of the entries in the temporary_blobs entries set is an
ITemporaryBlobStorage instance. A blob is identified by its UUID, which
is exported via the webservice as 'token', in keeping with how it's
referred to in the UI.

    >>> blob = temporary_blobs['entries'][0]
    >>> blob['token'] == blob_token
    True

It's possible to fetch a blob directly using its token.

    >>> blob_link = '/temporary-blobs/' + blob_token
    >>> blob = webservice.get(blob_link).jsonBody()
    >>> blob['token'] == blob_token
    True

It's also possible to fetch the blob by calling temporary_blobs.fetch()
and passing it a token.

    >>> blob = webservice.named_get(
    ...     '/temporary-blobs', 'fetch', token=blob_token).jsonBody()
    >>> blob['token'] == blob_token
    True


Checking whether a blob has been processed
------------------------------------------

Launchpad processes blobs after they've been uploaded, so that any data
that can be used whilst filing a bug (or in any other operation,
ostensibly) can be extracted from the blob without affecting the
processing time of web requests.

It's possible to see whether a blob has been processed by calling its
hasBeenProcessed() method. In the case of the blob we created above, it
hasn't been processed because no job was created to process it.

    >>> print webservice.named_get(
    ...     blob['self_link'], 'hasBeenProcessed').jsonBody()
    False

Once the blob has been processed, its hasBeenProcessed() method will
return True.

    >>> from lp.bugs.interfaces.apportjob import IProcessApportBlobJobSource
    >>> login('foo.bar@canonical.com')
    >>> job = getUtility(IProcessApportBlobJobSource).create(
    ...     getUtility(ITemporaryStorageManager).fetch(blob_token))
    >>> job.job.start()
    >>> job.job.complete()
    >>> logout()

    >>> print webservice.named_get(
    ...     blob['self_link'], 'hasBeenProcessed').jsonBody()
    True
