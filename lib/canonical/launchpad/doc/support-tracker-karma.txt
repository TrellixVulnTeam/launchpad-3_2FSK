Support Tracker Karma
=====================

To promote community contributions to support requests in Launchpad, it's
very important that we acknowledge their work and give them some karma
points.

These karma points are assigned to a user when he performs one of the
actions we consider to be a reasonable contribution.

    >>> from canonical.launchpad.interfaces import (
    ...     IPersonSet, ITicket, IProductSet)
    >>> from canonical.launchpad.database.karma import KarmaCategory
    >>> support_category = KarmaCategory.byName('support')
    >>> support_karma_actions = support_category.karmaactions
    >>> sorted([action.title for action in support_karma_actions])
    [u'Answered ticket',
     u'Comment made on a ticket.',
     u'Ticket description changed',
     u'Ticket linked to a bug',
     u'Ticket owner accepted answer',
     u'Ticket title changed']

    >>> sample_person = getUtility(IPersonSet).getByEmail('test@canonical.com')
    >>> foo_bar = getUtility(IPersonSet).getByEmail('foo.bar@canonical.com')

Setup an event listener to help ensure karma is assigned when it should.

    >>> from canonical.launchpad.ftests.karma import KarmaAssignedEventListener
    >>> karma_helper = KarmaAssignedEventListener(show_person=True)
    >>> karma_helper.register_listener()


Let's create a ticket to use on this test.

    >>> login('test@canonical.com')
    >>> firefox = getUtility(IProductSet)['firefox']
    >>> firefox_ticket = firefox.newTicket(
    ...     title='New ticket', description='Ticket description.',
    ...     owner=sample_person)


Karma Actions
-------------

- Commenting on a ticket:

Comments are added through the addComment() method and the other
workflow methods. Each time that a comment is added, karma will be
assigned to the message owner.

    >>> msg = firefox_ticket.expireTicket(
    ...     foo_bar, 'Expiring because of inactivity. Reopen if you are '
    ...     'still having the problem and provide additional information.')
    Karma added: action=ticketcommentadded, product=firefox, person=name16

    >>> msg = firefox_ticket.reopen(
    ...     "Firefox doesn't have any 'Quick Searches' in its bookmarks.")
    Karma added: action=ticketcommentadded, product=firefox, person=name12

    >>> msg = firefox_ticket.requestInfo(
    ...     foo_bar, 'What "Quick Searches" do you want?')
    Karma added: action=ticketcommentadded, product=firefox, person=name16

    >>> msg = firefox_ticket.giveInfo(
    ...     'The same one than shipped upstreams.')
    Karma added: action=ticketcommentadded, product=firefox, person=name12

    >>> msg = firefox_ticket.giveAnswer(
    ...     foo_bar, "Ok, I see what you mean. You need to install them "
    ...     "manually for now.")
    Karma added: action=ticketcommentadded, product=firefox, person=name16

    >>> msg = firefox_ticket.addComment(
    ...     foo_bar, 'You could also fill a bug about that, if you like.')
    Karma added: action=ticketcommentadded, product=firefox, person=name16

When the user confirms that his problem is solved, in addition to the
karma granted for the comment, karma will be given for accepting
an answer. The person whose answer was accepted will also receives
karma.

    >>> msg = firefox_ticket.confirmAnswer(
    ...     "Ok, thanks. I'll open a bug about this then.",
    ...     answer=msg)
    Karma added: action=ticketcommentadded, product=firefox, person=name12
    Karma added: action=ticketansweraccepted, product=firefox, person=name12
    Karma added: action=ticketanswered, product=firefox, person=name16

Rejecting and changing the ticket status also grants karma because these
action creates a comment.

    >>> msg = firefox_ticket.reject(
    ...     foo_bar, 'This should really be a bug report.')
    Karma added: action=ticketcommentadded, product=firefox, person=name16

    >>> from canonical.lp.dbschema import TicketStatus
    >>> msg = firefox_ticket.setStatus(
    ...     foo_bar, TicketStatus.ANSWERED_CONFIRMED,
    ...     'That rejection was an error.')
    Karma added: action=ticketcommentadded, product=firefox, person=name16

- Changing the Title of a ticket:

    >>> from zope.event import notify
    >>> from zope.interface import providedBy
    >>> from canonical.launchpad.event import SQLObjectModifiedEvent
    >>> from canonical.launchpad.webapp.snapshot import Snapshot
    >>> old_ticket = Snapshot(
    ...     firefox_ticket, providing=providedBy(firefox_ticket))
    >>> firefox_ticket.title = ('Firefox 1.5.0.5 does not have any '
    ...                         '"Quick Searches" installed by default')
    >>> notify(SQLObjectModifiedEvent(firefox_ticket, old_ticket, ['title']))
    Karma added: action=tickettitlechanged, product=firefox, person=name12

- Changing the Description of a ticket:

    >>> old_ticket = Snapshot(
    ...     firefox_ticket, providing=providedBy(firefox_ticket))
    >>> firefox_ticket.description = (
    ...     'Firefox 1.5.0.5 does not have any "Quick Searches" installed '
    ...     'in the bookmarks by default, like the official ones do.')
    >>> notify(SQLObjectModifiedEvent(
    ...     firefox_ticket, old_ticket, ['description']))
    Karma added: action=ticketdescriptionchanged, product=firefox,
        person=name12

- Linking to a bug:

    >>> from canonical.launchpad.database import Bug
    >>> ticketbug = firefox_ticket.linkBug(Bug.get(5))
    Karma added: action=ticketlinkedtobug, product=firefox, person=name12
    >>> logout()

Now we do a check to make sure all support-tracker-related karma actions have
been tested.

    >>> karma_helper.added_karma_actions == set(support_karma_actions)
    True

Unregister the event listener to make sure we won't interfere in other tests.

    >>> karma_helper.unregister_listener()

- different ways of getting karma through the support tracker

    * accept an answer: ITicket.acceptAnswer().  If the submitter is set as
                        the answerer by acceptAnswer(), should we give karma
                        to him anyway?
