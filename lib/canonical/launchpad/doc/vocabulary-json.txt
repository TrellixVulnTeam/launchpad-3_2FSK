= View to export Vocabularies as  JSON =

This view provides a simple means for AJAX widgets to retrieve vocabulary
entries until vocabularies are integrated into the REST API.

    >>> from canonical.launchpad.interfaces.launchpad import ILaunchpadRoot
    >>> import simplejson
    >>> root = getUtility(ILaunchpadRoot)
    >>> def print_json(json):
    ...     data = simplejson.loads(json)
    ...     print simplejson.dumps(data, sort_keys=True, indent=4)

The view requires the name of the vocabulary.

    >>> view = create_view(root, '+huge-vocabulary')
    >>> print_json(view())
    Traceback (most recent call last):
    ...
    MissingInputError: ('name', '', None)

Since it is exporting huge vocabularies, it requires a search term.

    >>> form = dict(name='ValidPerson')
    >>> view = create_view(root, '+huge-vocabulary', form=form)
    >>> print_json(view())
    Traceback (most recent call last):
    ...
    MissingInputError: ('search_text', '', None)

The name must be a valid vocabulary.

    >>> form = dict(name='invalid-vocabulary', search_text='foo')
    >>> view = create_view(root, '+huge-vocabulary', form=form)
    >>> print_json(view())
    Traceback (most recent call last):
    ...
    ComponentLookupError: (<...IVocabularyFactory>, 'invalid-vocabulary')

A successful search.

    >>> form = dict(name='ValidPersonOrTeam', search_text='guadamen')
    >>> view = create_view(root, '+huge-vocabulary', form=form)
    >>> print_json(view())
    {
        "entries": [
            {
                "image": "\/@@\/team",
                "title": "GuadaMen",
                "value": "guadamen"
            }
        ],
        "total_size": 1
    }

Multiple entries.

    >>> form = dict(name='ValidPersonOrTeam', search_text='admin')
    >>> view = create_view(root, '+huge-vocabulary', form=form)
    >>> result = simplejson.loads(view())
    >>> result['total_size']
    8
    >>> len(result['entries'])
    7

Size and offset parameters can be passed in to switch between batches.

    >>> form = dict(name='ValidPersonOrTeam', search_text='admin',
    ...             offset='0', size='1')
    >>> view = create_view(root, '+huge-vocabulary', form=form)
    >>> print_json(view())
    {
        "entries": [
            {
                "image": "\/@@\/team",
                "title": "Commercial Subscription Admins",
                "value": "commercial-admins"
            }
        ],
        "total_size": 8
    }

    >>> form = dict(name='ValidPersonOrTeam', search_text='admin',
    ...             offset='1', size='1')
    >>> view = create_view(root, '+huge-vocabulary', form=form)
    >>> print_json(view())
    {
        "entries": [
            {
                "description": "foo.bar@canonical.com",
                "image": "\/@@\/person",
                "title": "Foo Bar",
                "value": "name16"
            }
        ],
        "total_size": 8
    }
