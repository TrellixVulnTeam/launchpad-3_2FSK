= Answer Contacts for Distribution Source Package =

Support on source packages is handled both by the source package answer
contacts as well as the distribution answer contacts.

    # Register a Sample Person as an answer contact for the distribution.
    >>> from zope.component import getUtility
    >>> from canonical.launchpad.ftests import login, logout
    >>> from canonical.launchpad.interfaces import (
    ...     IDistributionSet, ILaunchBag)
    >>> from canonical.database.sqlbase import flush_database_updates
    >>> login('test@canonical.com')
    >>> ubuntu = getUtility(IDistributionSet).getByName('ubuntu')
    >>> ubuntu.addAnswerContact(getUtility(ILaunchBag).user)
    True
    >>> flush_database_updates()
    >>> logout()

To reflect this, a user visiting a source package 'Answers' facet will
see both a porlet listing the answer contacts for the source package
and another one listing those of the distribution.

    >>> anon_browser.open(
    ...     'http://launchpad.dev/ubuntu/+source/evolution')
    >>> anon_browser.getLink('Answers').click()
    >>> portlet = find_portlet(
    ...     anon_browser.contents,
    ...     'Answer contacts for evolution in ubuntu')
    >>> print portlet.first('div').renderContents()
    <p>
      <i>There are no answer contacts.</i>
    </p>
    >>> for answer_contact in find_portlet(
    ...     anon_browser.contents, 'Answer contacts for Ubuntu').fetch('a'):
    ...     print answer_contact.renderContents()
    Sample Person

To register himself as anwer contact, the user clicks on the
'Set answer contact' link. He needs to login to access that function.

    >>> anon_browser.getLink('Set answer contact').click()
    Traceback (most recent call last):
      ...
    Unauthorized: ...

    >>> browser.addHeader('Authorization', 'Basic test@canonical.com:test')
    >>> browser.open(
    ...     'http://launchpad.dev/ubuntu/+source/evolution/+questions')
    >>> browser.getLink('Answers').click()
    >>> browser.getLink('Set answer contact').click()
    >>> print browser.title
    Answer contact for Source Package "evolution" in Ubuntu Linux

On this page, the user can choose to become an answer contact by
clicking a checkbox. All the teams, he's a member of are also displayed
and he can register these teams as well.

    >>> browser.getControl(
    ...     "I want to be an answer contact for evolution").selected
    False
    >>> browser.getControl(
    ...     "I want to be an answer contact for "
    ...     "evolution").selected = True
    >>> browser.getControl("Landscape Developers").selected
    False
    >>> browser.getControl("Landscape Developers").selected = True

To save his choices, the user clicks on the 'Continue' button and
a message is displayed to confirm the changes:

    >>> browser.getControl('Continue').click()
    >>> for message in find_tags_by_class(browser.contents, 'message'):
    ...     print message.renderContents()
    You have been added as an answer contact for evolution in ubuntu.
    Landscape Developers has been added as an answer contact for
    evolution in ubuntu.

The answer contacts porlet for the source package was updated:

    >>> for answer_contact in find_portlet(
    ...     browser.contents,
    ...     'Answer contacts for evolution in ubuntu').fetch('a'):
    ...     print answer_contact.renderContents()
    Landscape Developers
    Sample Person

To unregister as answer contact, the same page is used. Instead this
time, we unselect the checkboxes:

    >>> browser.getLink('Set answer contact').click()
    >>> browser.getControl(
    ...     "I want to be an answer contact for evolution").selected
    True
    >>> browser.getControl(
    ...     "I want to be an answer contact for "
    ...     "evolution").selected = False

Again a confirmation message is displayed and the answer contacts
portlet for the source package is updated.

    >>> browser.getControl('Continue').click()
    >>> for message in find_tags_by_class(browser.contents, 'message'):
    ...     print message.renderContents()
    You have been removed as an answer contact for evolution in ubuntu.

    >>> for answer_contact in find_portlet(
    ...     browser.contents,
    ...     'Answer contacts for evolution in ubuntu').fetch('a'):
    ...     print answer_contact.renderContents()
    Landscape Developers
