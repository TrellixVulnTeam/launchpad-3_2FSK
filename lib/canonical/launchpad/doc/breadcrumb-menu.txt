= Breadcrumbs and site menu =

We are using Dynarch menus to display the heirarchy breadcrumbs and the
pop-up site map.

There is a Breadcrumbs view class that takes care of rendering the appropriate
<ul> elements that Dynarch will convert into menus.

    >>> from canonical.launchpad.browser import Breadcrumbs

We need a request object that has a request.breadcrumbs attribute, which is
a list of Breadcrumb objects.  Each crumb object has a crumb.url and crumb.text
attribute.

    >>> from canonical.launchpad.webapp.publisher import Breadcrumb

    >>> class Request(object):
    ...
    ...     def __init__(self):
    ...         self.breadcrumbs = []
    ...
    ...     def addCrumb(self, url, text):
    ...         self.breadcrumbs.append(Breadcrumb(url, text))
    ...
    ...     def clearCrumbs(self):
    ...         self.breadcrumbs[:] = []

    >>> request = Request()
    >>> context = whatever = object()
    >>> def render_breadcrumbs():
    ...     print Breadcrumbs(context, request).render()


With no breadcrumbs, we get a single <li> element for Launchpad, containing
the sitemap.  As there is just a single <li> element, it gets the CSS class
"last".  The URL of "/" is hardcoded for the first breadcrumb.

    >>> render_breadcrumbs()
    <li lpm:mid="root" class="item"><a href="/"><em>Home</em></a></li>


With a single breadcrumb, we get the "Launchpad" breadcrumb and the
popup site map.  As it is the only breadcrumb, it gets the CSS class "last".

    >>> request.addCrumb('http://localhost', 'Launchpad')
    >>> render_breadcrumbs()
    <li lpm:mid="root" class="item"><a href="/"><em>Home</em></a></li>


When we add another breadcrumb, it appears as a top level <li> after the
initial "Launchpad" <li>.  Note that the last crumb's <li> has a CSS class
of "last".

    >>> request.addCrumb('http://localhost/people', 'People')
    >>> render_breadcrumbs()
    <li lpm:mid="root" class="item"><a href="/"><em>Home</em></a></li>
    <li class="item" lpm:mid="http://localhost/people/+menudata"><a href="http://localhost/people"><em>People</em></a></li>


When we add another breadcrumb, it appears as a top level <li> after the
other two <li> elements.  Note that only the last crumb's <li> has a CSS
class of "last".

    >>> request.addCrumb('http://localhost/people/someone', 'Someone')
    >>> render_breadcrumbs()
    <li lpm:mid="root" class="item"><a href="/"><em>Home</em></a></li>
    <li class="item" lpm:mid="http://localhost/people/+menudata"><a href="http://localhost/people"><em>People</em></a></li>
    <li class="item" lpm:mid="http://localhost/people/someone/+menudata"><a href="http://localhost/people/someone"><em>Someone</em></a></li>

