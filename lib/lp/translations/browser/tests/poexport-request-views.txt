PO Export Request Browser Views
-------------------------------

There are no requests in the database.

    >>> from lp.translations.model.poexportrequest import POExportRequest
    >>> from canonical.launchpad.interfaces.lpstorm import IStore
    >>> store =  IStore(POExportRequest)
    >>> print store.find(POExportRequest).count()
    0

A translator is going to request some translation exports for a PO template
with a PO file.

    >>> potemplate = factory.makePOTemplate(name="foo-template")
    >>> language = factory.makeLanguage('demo')
    >>> pofile = factory.makePOFile(language=language, potemplate=potemplate)

    >>> translator = factory.makePerson()
    >>> login_person(translator)

The translator fills out the request form and submits it.

    >>> form = {
    ...     'what': 'all',
    ...     'format': 'PO'}

    >>> from lp.translations.publisher import TranslationsLayer
    >>> potemplate_view = create_view(
    ...     potemplate, '+export', form=form, layer=TranslationsLayer)
    >>> potemplate_view.request.method = 'POST'
    >>> potemplate_view.initialize()

The request has been added to the database.

    >>> max_request_id = 0
    >>> def print_requests():
    ...     global max_request_id, store
    ...     requests = store.find(
    ...         POExportRequest,
    ...         POExportRequest.id > max_request_id).order_by(
    ...             'potemplate', 'pofile')
    ...     max_request_id = requests.max(POExportRequest.id)
    ...     for num, request in enumerate(requests):
    ...         if request.pofile:
    ...             language = request.pofile.language.englishname
    ...         else:
    ...             language = 'template'
    ...         print u"%s (%s)" % (request.potemplate.name, language)
    >>> print_requests()
    foo-template (Language demo)
    foo-template (template)

Clear the queue.

    >>> POExportRequest.delete(requests[1].id)
    >>> POExportRequest.delete(requests[0].id)
    >>> POExportRequest.select().count()
    0

Request an empty potemplate (i.e. without any POTMsgSets).
https://launchpad.net/products/rosetta/+bug/68261

    >>> form = {
    ...     'what': 'some',
    ...     'potemplate': True,
    ...     'format': 'PO'}
    >>> empty_potemplate = POTemplate.get(6)
    >>> broken_potemplate_view = create_view(
    ...     empty_potemplate, '+export', form=form, layer=TranslationsLayer)
    >>> broken_potemplate_view.request.method = 'POST'
    >>> broken_potemplate_view.initialize()

Check that the request has been added to the DB.

    >>> requests = POExportRequest.select(
    ...         orderBy=['person', 'potemplate', 'pofile'])
    >>> print [requests[0].person.displayname, requests[0].potemplate.name]
    [u'Carlos Perell\xf3 Mar\xedn', u'evolution-2.2-test']

Clear the queue.

    >>> POExportRequest.delete(requests[0].id)
    >>> POExportRequest.select().count()
    0

Let's request a PO file instead this time.

    >>> from lp.translations.model.pofile import POFile
    >>> pofile = POFile.get(1)

Here's the request getting processed.

    >>> form = {'format': 'PO'}
    >>> pofile_view = create_view(
    ...     pofile, '+export', form=form, layer=TranslationsLayer)
    >>> pofile_view.request.method = 'POST'
    >>> pofile_view.initialize()

And there it is, format is PO.

    >>> from lp.translations.interfaces.translationfileformat import (
    ...     TranslationFileFormat)
    >>> requests = POExportRequest.select()
    >>> requests.count()
    1
    >>> requests[0].format == TranslationFileFormat.PO
    True

Clear the queue.

    >>> POExportRequest.delete(requests[0].id)
    >>> POExportRequest.select().count()
    0

Let's request a partial PO file instead this time. In the form this is done
by ticking the checkbox 'pochanged'.

    >>> pofile = POFile.get(1)
    >>> form = {'format': 'PO', 'pochanged': 'POCHANGED'}
    >>> pofile_view = create_view(
    ...     pofile, '+export', form=form, layer=TranslationsLayer)
    >>> pofile_view.request.method = 'POST'
    >>> pofile_view.initialize()

And there it is, and its format is POCHANGED.

    >>> from lp.translations.interfaces.translationfileformat import (
    ...     TranslationFileFormat)
    >>> requests = POExportRequest.select()
    >>> requests.count()
    1
    >>> requests[0].format == TranslationFileFormat.POCHANGED
    True
