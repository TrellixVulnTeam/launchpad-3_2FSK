= Person as a Bug Contact =

A person can be a bug contact for a distribution, source package, and/or
product. Being a bug contact basically means that the person will
receive all bugmail related to the bug target.

== Bug Subscriber Packages ==

IPerson.getBugSubscriberPackages returns this list of packages, sorted
alphabetically (A to Z) by package name.

    >>> from canonical.launchpad.interfaces import IPersonSet
    >>> foo_bar = getUtility(IPersonSet).getByEmail('foo.bar@canonical.com')
    >>> [package.name for package in foo_bar.getBugSubscriberPackages()]
    [u'mozilla-firefox', u'pmount']

== Bug Counts For Open Bugs on Packages ==

It's possible to get some basic statistics of the open bugs on each
package using IPerson.getBugSubscriberOpenBugsCounts, which returns a list
of dicts, containing the package, and the number of open bugs in various
states.

    >>> from canonical.launchpad.interfaces import IDistributionSourcePackage
    >>> def print_package_counts(package_count):
    ...     for key, value in sorted(package_count.items()):
    ...         if IDistributionSourcePackage.providedBy(value):
    ...             value = value.bugtargetdisplayname
    ...         print "%s: %s" % (key, value)
    ...     print # Blank line, to make output more readable.
    >>> for package_count in foo_bar.getBugSubscriberOpenBugCounts(None):
    ...     print_package_counts(package_count)
    open: 1
    open_critical: 0
    open_inprogress: 0
    open_unassigned: 1
    package: mozilla-firefox (Ubuntu)
    <BLANKLINE>
    open: 0
    open_critical: 0
    open_inprogress: 0
    open_unassigned: 0
    package: pmount (Ubuntu)

If we file a new unassigned bug on mozilla-firefox both the open and
open_unassigned count will increase by one.

    >>> from canonical.launchpad.interfaces import IDistributionSet
    >>> ubuntu = getUtility(IDistributionSet).getByName('ubuntu')
    >>> ubuntu_firefox = ubuntu.getSourcePackage('mozilla-firefox')
    >>> ubuntu_firefox.bugtargetdisplayname
    u'mozilla-firefox (Ubuntu)'

    >>> login('foo.bar@canonical.com')
    >>> from canonical.launchpad.interfaces import CreateBugParams
    >>> bug = ubuntu_firefox.createBug(CreateBugParams(
    ...     foo_bar, 'Critical Bug', comment='Critical bug.'))

    >>> for package_count in foo_bar.getBugSubscriberOpenBugCounts(None):
    ...     print_package_counts(package_count)
    open: 2
    open_critical: 0
    open_inprogress: 0
    open_unassigned: 2
    package: mozilla-firefox (Ubuntu)
    ...

If we mark the bug as critical, the open_critical count will increase.

    >>> login('foo.bar@canonical.com')
    >>> from canonical.launchpad.ftests import syncUpdate
    >>> from canonical.launchpad.interfaces import BugTaskImportance
    >>> [ubuntu_firefox_bugtask] = bug.bugtasks
    >>> ubuntu_firefox_bugtask.importance = BugTaskImportance.CRITICAL
    >>> syncUpdate(ubuntu_firefox_bugtask)

    >>> for package_count in foo_bar.getBugSubscriberOpenBugCounts(None):
    ...     print_package_counts(package_count)
    open: 2
    open_critical: 1
    open_inprogress: 0
    open_unassigned: 2
    package: mozilla-firefox (Ubuntu)
    ...

If we assign the bug to someone, the open_unassigned count will
decrease.

    >>> ubuntu_firefox_bugtask.transitionToAssignee(foo_bar)
    >>> syncUpdate(ubuntu_firefox_bugtask)

    >>> for package_count in foo_bar.getBugSubscriberOpenBugCounts(None):
    ...     print_package_counts(package_count)
    open: 2
    open_critical: 1
    open_inprogress: 0
    open_unassigned: 1
    package: mozilla-firefox (Ubuntu)
    ...

If we mark the bug as In Progress, the open_inprogress will increase.

    >>> from canonical.launchpad.interfaces import BugTaskStatus
    >>> ubuntu_firefox_bugtask.transitionToStatus(
    ...     BugTaskStatus.INPROGRESS, getUtility(ILaunchBag).user)
    >>> syncUpdate(ubuntu_firefox_bugtask)

    >>> for package_count in foo_bar.getBugSubscriberOpenBugCounts(None):
    ...     print_package_counts(package_count)
    open: 2
    open_critical: 1
    open_inprogress: 1
    open_unassigned: 1
    package: mozilla-firefox (Ubuntu)
    ...

=== Privacy ===

Only those bugs that the user has access to are shown, so if we mark the
bug as private, No Privileges Person will only see that there is one
open bug, even though there are two.

    >>> bug.setPrivate(True, getUtility(ILaunchBag).user)
    True
    >>> syncUpdate(bug)

    >>> no_priv = getUtility(IPersonSet).getByEmail('no-priv@canonical.com')
    >>> for package_count in foo_bar.getBugSubscriberOpenBugCounts(no_priv):
    ...     print_package_counts(package_count)
    open: 1
    open_critical: 0
    open_inprogress: 0
    open_unassigned: 1
    package: mozilla-firefox (Ubuntu)
    ...

Foo Bar still can see all the bugs, though.

    >>> for package_count in foo_bar.getBugSubscriberOpenBugCounts(foo_bar):
    ...     print_package_counts(package_count)
    open: 2
    open_critical: 1
    open_inprogress: 1
    open_unassigned: 1
    package: mozilla-firefox (Ubuntu)
    ...

=== Duplicate Bugs ===

Duplicates bugs are omitted from the counts.

    >>> from canonical.launchpad.interfaces import IBugSet
    >>> bug.duplicateof = getUtility(IBugSet).get(1)
    >>> syncUpdate(bug)
    >>> for package_count in foo_bar.getBugSubscriberOpenBugCounts(foo_bar):
    ...     print_package_counts(package_count)
    open: 1
    open_critical: 0
    open_inprogress: 0
    open_unassigned: 1
    package: mozilla-firefox (Ubuntu)
    ...
