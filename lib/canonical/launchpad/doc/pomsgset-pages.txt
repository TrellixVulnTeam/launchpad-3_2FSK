POMsgSet View
=============

On this section, we are going to test the view class for an IPOMsgSet object.

    >>> from zope.component import getView
    >>> from canonical.launchpad.database import POMsgSet
    >>> from canonical.launchpad.webapp.servers import LaunchpadTestRequest
    >>> from canonical.launchpad.webapp import canonical_url

All the tests will be submitted as comming from Kurem, an editor for the POFile
that we are going to edit.

    >>> login('kurem@debian.cz')

We are going to see what happens if we get an entry for a language
without the plural form information.

    >>> pomsgset = POMsgSet.get(1)
    >>> pofile_tlh = pomsgset.pofile.potemplate.getDummyPOFile('tlh')
    >>> pomsgset_tlh = pofile_tlh.getPOMsgSet(u'evolution addressbook')
    >>> SERVER_URL = '/'.join([canonical_url(pomsgset), '+translate'])
    >>> request = LaunchpadTestRequest(SERVER_URL=SERVER_URL)
    >>> pomsgset_view = getView(pomsgset_tlh, "+translate", request)
    >>> pomsgset_view.initialize()

Here we can see that it's lacking that information.

    >>> pomsgset_view.context.pofile.language.pluralforms is None
    True

And the view class detects it correctly.

    >>> pomsgset_view.has_plural_form_information
    False

Now, we will use a objects that we have in our database, instead of dummy ones.

    >>> pomsgset_view = getView(pomsgset, "+translate", request)
    >>> pomsgset_view.initialize()

We have the plural form information for this language.

    >>> pomsgset_view.context.pofile.language.pluralforms is not None
    True

And thus, the view class should know that it doesn't lacks the plural forms
information.

    >>> pomsgset_view.has_plural_form_information
    True

The request didn't get any argument, and because that, we should get the
default values for the alternative language.

    >>> pomsgset_view.second_lang_code is None
    True

We are at the beginning because this pomsgset is for the first item.

    >>> pomsgset_view.context.potmsgset.sequence == 1
    True

How many lines does the message have.

    >>> pomsgset_view.max_lines_count
    1

And as it has only one line, it's not a multi line message set.

    >>> pomsgset_view.is_multi_line
    False

It does not have a plural msgid.

    >>> pomsgset_view.msgid_plural is None
    True

And thus, it only has one translation.

    >>> pomsgset_view.translation_range
    [0]

Which is the one we wanted.

    >>> pomsgset_view.getTranslation(0)
    u'libreta de direcciones de Evolution'

Now, we are going to test the tab index generator to be sure the TAB key
will work as expected when navigating over the translation form.

First time we call it, first position.

    >>> pomsgset_view.generateNextTabIndex()
    1

Next time we call it, it's increased.

    >>> pomsgset_view.generateNextTabIndex()
    2

It's time to check the submission of translations and the IPOFile statistics
update.

But first, let's see current values.

    >>> pomsgset_view.context.pofile.updateStatistics()
    (7, 0, 0)
    >>> pomsgset_view.context.pofile.currentCount()
    7
    >>> pomsgset_view.context.pofile.updatesCount()
    0
    >>> pomsgset_view.context.pofile.rosettaCount()
    0

Now we do the submit.

    >>> SERVER_URL = '/'.join([canonical_url(pomsgset), '+translate'])
    >>> request = LaunchpadTestRequest(
    ...     SERVER_URL=SERVER_URL,
    ...     form={
    ...         'alt': None,
    ...         'msgset_1': None,
    ...         'msgset_1_es_translation_0': 'Foo',
    ...         'submit_translations': 'Save &amp; Continue'})
    >>> request.method = 'POST'
    >>> pomsgset_view = getView(pomsgset, "+translate", request)
    >>> pomsgset_view.initialize()
    >>> import transaction
    >>> transaction.commit()

And check again.

    >>> pomsgset_view.context.pofile.currentCount()
    7
    >>> pomsgset_view.context.pofile.updatesCount()
    1
    >>> pomsgset_view.context.pofile.rosettaCount()
    0

What would happen if we get a submit for another msgset that aren't we?

    >>> request = LaunchpadTestRequest(
    ...     SERVER_URL=SERVER_URL,
    ...     form={
    ...         'alt': None,
    ...         'msgset_2': None,
    ...         'msgset_2_es_translation_0': 'Foo',
    ...         'submit_translations': 'Save &amp; Continue'})
    >>> request.method = 'POST'
    >>> pomsgset_view = getView(pomsgset, "+translate", request)
    >>> pomsgset_view.initialize()

The list of translations will be empty because the submission is ignored.

    >>> pomsgset_view.translations is None
    True


Some characters are presented specially in the Web interface, and there are
functions to determine whether to advise translators about their presence.

First, msg_id_has_tab() determines whether a message set contains any tabs.

    >>> pomsgset_view.msgid_has_tab
    False

When we change the set to include a tab character, the function detects it.

    >>> pomsgset_view.context.potmsgset.primemsgid_.msgid = u'Foo\tBar'
    >>> pomsgset_view.msgid_has_tab
    True

Similarly, msgid_has_newline() determines whether a message contains newlines.

    >>> pomsgset_view.context.potmsgset.primemsgid_.msgid = u'Foo Bar'
    >>> pomsgset_view.msgid_has_newline
    False
    
    >>> pomsgset_view.context.potmsgset.primemsgid_.msgid = u'Foo\nBar'
    >>> pomsgset_view.msgid_has_newline
    True

And msgid_has_leading_or_trailing_space() determines ... well, you can guess.

    >>> pomsgset_view.context.potmsgset.primemsgid_.msgid = u'Foo Bar'
    >>> pomsgset_view.msgid_has_leading_or_trailing_space
    False

    >>> pomsgset_view.context.potmsgset.primemsgid_.msgid = u' Leading space'
    >>> pomsgset_view.msgid_has_leading_or_trailing_space
    True

    >>> pomsgset_view.context.potmsgset.primemsgid_.msgid = u'  Leading spaces'
    >>> pomsgset_view.msgid_has_leading_or_trailing_space
    True

    >>> pomsgset_view.context.potmsgset.primemsgid_.msgid = u'Trailing space  '
    >>> pomsgset_view.msgid_has_leading_or_trailing_space
    True

    >>> pomsgset_view.context.potmsgset.primemsgid_.msgid = u'Trailing spaces  '
    >>> pomsgset_view.msgid_has_leading_or_trailing_space
    True

    >>> pomsgset_view.context.potmsgset.primemsgid_.msgid = u'Leading\n Space'
    >>> pomsgset_view.msgid_has_leading_or_trailing_space
    True

    >>> pomsgset_view.context.potmsgset.primemsgid_.msgid = u'Trailing \nSpace'
    >>> pomsgset_view.msgid_has_leading_or_trailing_space
    True

    >>> pomsgset_view.context.potmsgset.primemsgid_.msgid = u'Trailing \r\nSpace'
    >>> pomsgset_view.msgid_has_leading_or_trailing_space
    True

The test system should reset this msgid to its original value for other tests.


