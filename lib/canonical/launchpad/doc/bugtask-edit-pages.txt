Editing Bug Tasks
=================

A bugtask's status, assignee, package name, milestone, etc., can be
modified on its +editstatus page.

Edit the Status
---------------

Let's start simple and edit the status of a bug task logged in as Sample
Person:

    >>> from zope.component import getView
    >>> from canonical.launchpad.interfaces import IBugSet
    >>> from canonical.launchpad.webapp.servers import LaunchpadTestRequest
    >>> login('test@canonical.com')
    >>> bug_nine = getUtility(IBugSet).get(9)
    >>> ubuntu_thunderbird_task = bug_nine.bugtasks[1]
    >>> ubuntu_thunderbird_task.status.title
    'Confirmed'

    >>> request = LaunchpadTestRequest(
    ...     form={
    ...         'FORM_SUBMIT': '',
    ...         'field.status': 'In Progress',
    ...         'field.severity': ubuntu_thunderbird_task.severity.title,
    ...         'field.field.assignee.option': 'assign_to_nobody',
    ...         'field.sourcepackagename':
    ...             ubuntu_thunderbird_task.sourcepackagename.name})
    >>> edit_view = getView(
    ...     ubuntu_thunderbird_task, '+editstatus-page', request)
    >>> edit_view.process_form()
    >>> ubuntu_thunderbird_task.status.title
    'In Progress'


Product Reassignment and Milestones
-----------------------------------

Because milestones are associated with products, reassigning a bugtask
to a different product will clear the milestone value, if there is
one. This ensures that a bugtask for product Foo cannot be assigned to a
milestone for product Bar.

To demonstrate, let's assign a Firefox task to a Firefox milestone from
the sample data, then reassign the task to the Ubuntu product and verify
that the milestone was correctly unset.

    >>> from canonical.launchpad.interfaces import IBugTaskSet, IMilestoneSet

    >>> login("foo.bar@canonical.com")

    >>> bug_one_in_firefox = getUtility(IBugTaskSet).get(2)
    >>> firefox_1_0_milestone = getUtility(IMilestoneSet).get(1)

    >>> bug_one_in_firefox.milestone is None
    True

    >>> bug_one_in_firefox.milestone = firefox_1_0_milestone

    >>> print bug_one_in_firefox.milestone.name
    1.0

Now let's change the product, through the bugtask editing browser view,
to show that the milestone value is cleared.

    >>> form_values = {
    ...     'FORM_SUBMIT': 'Save Changes',
    ...     'field.product': 'ubuntu',
    ...     'field.status': bug_one_in_firefox.status.title,
    ...     'field.severity': bug_one_in_firefox.severity.title,
    ...     'field.priority': bug_one_in_firefox.priority.title}


    >>> request = LaunchpadTestRequest(form=form_values)

    >>> bugtask_edit_view = getView(
    ...     bug_one_in_firefox, "+editstatus-page", request)
    >>> bugtask_edit_view.initialize()

    >>> bugtask_edit_view.update()

    >>> print bug_one_in_firefox.product.name
    ubuntu
    >>> bug_one_in_firefox.milestone is None
    True

Bug Watch Linkage
-----------------

Let's edit a bugtask which is linked to a remote bug. The most
important thing to edit is the bug watch, since it controls the status
information about the bug task. To show it how it works we remote the
link temporarily:

    >>> thunderbird_task = bug_nine.bugtasks[0]
    >>> bugzilla_watch = thunderbird_task.bugwatch
    >>> thunderbird_task.bugwatch = None

Now we simulate that the bug watch got updated:

    >>> bugzilla_watch.remotestatus = 'RESOLVED FIXED'

If we now link the bugtask to the bug watch, the bugtask's status will
be set to Unknown:

XXX: We really should update the status from the bug watch, but that's
     not trivial to do at the moment. I will fix this later.
     -- Bjorn Tillenius, 2006-03-01

    >>> from canonical.lp.dbschema import BugTaskStatus
    >>> thunderbird_task.transitionToStatus(BugTaskStatus.UNCONFIRMED)
    >>> request = LaunchpadTestRequest(
    ...     form={
    ...         'FORM_SUBMIT': '',
    ...         'field.bugwatch': '6'})
    >>> edit_view = getView(
    ...     thunderbird_task, '+editstatus-page', request)
    >>> edit_view.process_form()
    >>> thunderbird_task.bugwatch == bugzilla_watch
    True
    >>> thunderbird_task.status.title
    'Unknown'

Milestone Editing Permissions
-----------------------------

A milestone can be edited only by a user with launchpad.Edit permissions
on the distribution or product context. When the user has this
permission, the edit page renders an input widget, otherwise it renders
a display widget.

    >>> from zope.app.form.interfaces import IInputWidget

The distribution owner gets an edit widget for the distribution task.

    >>> login("mark@hbd.com")

    >>> request = LaunchpadTestRequest()
    >>> ubuntu_task = getUtility(IBugTaskSet).get(17)
    >>> bugtask_edit_view = getView(ubuntu_task, "+editstatus-page", request)
    >>> bugtask_edit_view.initialize()

    >>> IInputWidget.providedBy(bugtask_edit_view.milestone_widget)
    True

But an unprivileged user does not.

    >>> from zope.app.form.browser import ItemDisplayWidget

    >>> login("no-priv@canonical.com")

    >>> request = LaunchpadTestRequest()
    >>> bugtask_edit_view = getView(ubuntu_task, "+editstatus-page", request)
    >>> bugtask_edit_view.initialize()

    >>> isinstance(bugtask_edit_view.milestone_widget, ItemDisplayWidget)
    True
