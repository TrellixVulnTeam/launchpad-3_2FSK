== LoginServer UnauthorizedView ==

The login server has an UnauthorizedView that redirects the user
to the +standalone-view. 

    >>> from zope.security.interfaces import Unauthorized
    >>> from canonical.launchpad.layers import OpenIDLayer
    >>> from canonical.launchpad.testing.systemdocs import create_view

    >>> error = Unauthorized('a_permission')
    >>> view = create_view(
    ...     error, name='index.html',
    ...     server_url="http://openid.launchpad.dev/",
    ...     path_info='/+whatever',
    ...     query_string='param=1',
    ...     layer=OpenIDLayer, current_request=True)
    >>> view.request.setTraversalStack(['+whatever'])
    >>> view()
    ''

    >>> response = view.request.response
    >>> response.getStatus()
    302
    >>> print response.getHeader('Location')
    http://openid.launchpad.dev/+standalone-login?redirect_url=http%3A%2F%2Fopenid.launchpad.dev%2F%2Bwhatever%3Fparam%3D1

Clear the current request for the next test.

    >>> from zope.security.management import endInteraction
    >>> endInteraction()

The "Edit Account" page requires that the user is logged in, so they will be
redirected first to +standalone-login to authenticate:

    >>> from canonical.launchpad.testing.pages import setupBrowser
    >>> browser = setupBrowser()
    >>> browser.handleErrors = True

    >>> browser.open('http://openid.launchpad.dev/+edit')
    ERROR:...
    >>> browser.url
    'http://openid.launchpad.dev/+standalone-login?...'
    >>> browser.getControl(name='field.email', index=0).value = (
    ...     'test@canonical.com')
    >>> browser.getControl(name='field.password').value = 'test'
    >>> browser.handleErrors = False

    >>> browser.getControl('Continue').click()
    >>> browser.url
    'http://openid.launchpad.dev/+edit'


== +login ==

The normal +login isn't available on the SSO server.

    >>> browser.open('http://openid.launchpad.dev/+login')
    Traceback (most recent call last):
      ...
    NotFound: ...
