= Legacy KDE PO file format =

KDE versions before 4.0 used regular PO files with translatable
strings and their translations specially formatted to accommodate
features that were introduced in GNU gettext PO files later.

Such features include plural forms support and context support.

== Helper imports ==

    >>> from zope.app import datetimeutils
    >>> from canonical.launchpad.ftests import syncUpdate
    >>> from canonical.launchpad.interfaces import (
    ...     ILaunchpadCelebrities, IPOTemplateNameSet, IPersonSet,
    ...     IProductSet, ITranslationImportQueue, TranslationFileFormat)
    >>> from canonical.launchpad.database import (
    ...     POTemplateSubset, SourcePackageName)
    >>> from canonical.launchpad.scripts.po_import import (
    ...     AutoApproveProcess, ImportProcess)
    >>> import datetime
    >>> import pytz
    >>> UTC = pytz.timezone('UTC')
    >>> def ISO_FORMATTED_DATE(): return datetime.datetime.now(UTC).isoformat()

We need this for the Librarian to work properly.

    >>> import transaction

And also, the DBSchema to change the imports status

    >>> from canonical.launchpad.interfaces import RosettaImportStatus

Then, let's get a handle to our mailer. This is the thing we'll examine to show
what email has been sent, to whom, and what the body of the message contains:

    >>> import email
    >>> from canonical.launchpad.mail import stub

Here's a fake logger to capture any errors that happen.

    >>> from canonical.launchpad.scripts import FakeLogger

To ease the pain of importing many files during testing, lets introduce
a helper function to import either a PO file or a PO template from the string
with the contents of the file.

    >>> def import_pofile_or_potemplate(file_contents, person, series,
    ...                                 pofile=None, potemplate=None,
    ...                                 published=True):
    ...     """Import a `POFile` or `POTemplate` from the string.
    ...
    ...	    If pofile is None, it imports a potemplate.
    ...	    Returns `TranslationImportQueueEntry` as added to the import queue.
    ...	    """
    ...     translation_import_queue = getUtility(ITranslationImportQueue)
    ...     if pofile is not None:
    ...         entry = translation_import_queue.addOrUpdateEntry(
    ...             pofile.path, file_contents, published, person,
    ...             productseries=series, pofile=pofile)
    ...     else:
    ...         entry = translation_import_queue.addOrUpdateEntry(
    ...             potemplate.path, file_contents, True, person,
    ...             productseries=series, potemplate=potemplate)
    ...     transaction.commit()
    ...     entry.status = RosettaImportStatus.APPROVED
    ...     syncUpdate(entry)
    ...     if pofile is not None:
    ...         pofile.importFromQueue(FakeLogger())
    ...     else:
    ...         potemplate.importFromQueue(FakeLogger())
    ...     return entry

And lets define a nice printout function for PO files.

    >>> def print_pofile(pofile):
    ...     def strip_to_length(string, length=18):
    ...         if string is None: return None
    ...         if len(string)>length:
    ...             return string[:length-3]+'...'
    ...         else:
    ...             return string
    ...
    ...     print "%2s. %-18s %-18s %-4s %-18s %-4s" % (
    ...         "no", "msgid", "translation", "fuz", "published", "pfuz")
    ...     for potmsgset in pofile.potemplate.getPOTMsgSets():
    ...         msgid = potmsgset.singular_text
    ...         pomsgset = pofile.getPOMsgSetFromPOTMsgSet(potmsgset)
    ...         publishedfuzzy = fuzzy = ''
    ...         published = translation = None
    ...         if pomsgset is not None:
    ...             active_texts = pomsgset.active_texts
    ...             published_texts = pomsgset.published_texts
    ...             if len(active_texts)>0:
    ...                 translation = active_texts[0]
    ...             if len(published_texts)>0:
    ...                 published = published_texts[0]
    ...             if pomsgset.publishedfuzzy:
    ...                 publishedfuzzy = 'yes'
    ...             if pomsgset.isfuzzy:
    ...                 fuzzy = 'yes'
    ...         print "% 2d. %-18s %-18s %-4s %-18s %-4s *" % (
    ...             potmsgset.sequence,
    ...             strip_to_length(msgid),
    ...             strip_to_length(translation),
    ...             strip_to_length(fuzzy, 4),
    ...             strip_to_length(published),
    ...             strip_to_length(publishedfuzzy, 4))


We'll be doing all our imports into Firefox trunk as
carlos@canonical.com.

    >>> carlos = getUtility(IPersonSet).getByEmail('carlos@canonical.com')
    >>> login('carlos@canonical.com')

    >>> firefox = getUtility(IProductSet).getByName('firefox')
    >>> firefox_trunk = firefox.getSeries('trunk')
    >>> firefox_potemplatename = getUtility(IPOTemplateNameSet)['firefox']
    >>> firefox_potsubset = POTemplateSubset(productseries=firefox_trunk)

    >>> firefox_potemplate = firefox_potsubset.new(
    ...     potemplatename=firefox_potemplatename,
    ...     path='po/firefox.pot',
    ...     owner=carlos)

== Non-KDE PO file detection ==


    >>> test_template = r'''
    ... msgid ""
    ... msgstr ""
    ... "POT-Creation-Date: 2004-07-11 16:16+0900\n"
    ... "Content-Type: text/plain; charset=CHARSET\n"
    ... "Plural-Forms: nplurals=INTEGER; plural=EXPRESSION;\n"
    ...
    ... msgid "first"
    ... msgstr ""
    ...
    ... msgid "second"
    ... msgstr ""
    ...
    ... msgid "third"
    ... msgstr ""
    ...
    ... msgid "fourth"
    ... msgstr ""
    ...
    ... msgid "fifth"
    ... msgstr ""
    ...
    ... msgid "sixth"
    ... msgstr ""
    ... '''


Importing this file works, but the format is set to Gettext PO.

    >>> entry = import_pofile_or_potemplate(test_template, carlos,
    ...                                     firefox_trunk,
    ...                                     potemplate=firefox_potemplate)
    >>> print entry.status.name
    IMPORTED

Now we get a published import.

    # fifth and sixth are untranslated
    >>> test_translation_published = r'''
    ... msgid ""
    ... msgstr ""
    ... "PO-Revision-Date: %s\n"
    ... "Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
    ... "Content-Type: text/plain; charset=UTF-8\n"
    ... "X-Launchpad-Export-Date: 2005-05-03 20:40+0100\n"
    ...
    ... msgid "first"
    ... msgstr "a"
    ...
    ... msgid "second"
    ... msgstr "b"
    ...
    ... #, fuzzy
    ... msgid "third"
    ... msgstr "c"
    ...
    ... #, fuzzy
    ... msgid "fourth"
    ... msgstr "d"
    ... ''' % ISO_FORMATTED_DATE()

    >>> firefox_serbian = firefox_potemplate.newPOFile('sr')
    >>> firefox_serbian.path='sr.po'
    >>> entry = import_pofile_or_potemplate(test_translation_published,
    ...                                     carlos, firefox_trunk,
    ...                                     pofile=firefox_serbian)
    >>> print entry.status.name
    IMPORTED
    >>> print_pofile(firefox_serbian)
    no. msgid              translation        fuz  published          pfuz
     1. first              a                       a                       *
     2. second             b                       b                       *
     3. third              c                  yes  c                  yes  *
     4. fourth             d                  yes  d                  yes  *
     5. fifth              None                    None                    *
     6. sixth              None                    None                    *

And now we get a non-published (overriding) import.

    >>> test_translation_update1 = r'''
    ... msgid ""
    ... msgstr ""
    ... "PO-Revision-Date: %s\n"
    ... "Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
    ... "Content-Type: text/plain; charset=UTF-8\n"
    ... "X-Launchpad-Export-Date: %s\n"
    ...
    ... # stays as published
    ... msgid "first"
    ... msgstr "a"
    ...
    ... # changes published translation
    ... msgid "second"
    ... msgstr "b-from-LP"
    ...
    ... # same as already published one
    ... #, fuzzy
    ... msgid "third"
    ... msgstr "c"
    ...
    ... # takes the fuzzy flag off and updates the translation
    ... msgid "fourth"
    ... msgstr "d-from-LP"
    ...
    ... # translates untranslated message
    ... msgid "fifth"
    ... msgstr "e-from-LP"
    ... ''' % (ISO_FORMATTED_DATE(), ISO_FORMATTED_DATE())

    >>> entry = import_pofile_or_potemplate(test_translation_update1,
    ...                                     carlos, firefox_trunk,
    ...                                     pofile=firefox_serbian,
    ...                                     published=False)
    >>> print entry.status.name
    IMPORTED
    >>> print_pofile(firefox_serbian)
    no. msgid              translation        fuz  published          pfuz
     1. first              a                       a                       *
     2. second             b-from-LP               b                       *
     3. third              c                  yes  c                  yes  *
     4. fourth             d-from-LP               d                  yes  *
     5. fifth              e-from-LP               None                    *
     6. sixth              None                    None                    *


Now we again import a published translation.

    >>> test_translation_published_update = r'''
    ... msgid ""
    ... msgstr ""
    ... "PO-Revision-Date: %s\n"
    ... "Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
    ... "Content-Type: text/plain; charset=UTF-8\n"
    ... "X-Launchpad-Export-Date: %s\n"
    ...
    ... msgid "first"
    ... msgstr "a"
    ...
    ... msgid "second"
    ... msgstr "b"
    ...
    ... #, fuzzy
    ... msgid "third"
    ... msgstr "c"
    ...
    ... # removes the fuzzy flag on the published translation
    ... msgid "fourth"
    ... msgstr "d"
    ...
    ... # translate remaining messages
    ... msgid "fifth"
    ... msgstr "e"
    ...
    ... msgid "sixth"
    ... msgstr "f"
    ... ''' % (ISO_FORMATTED_DATE(), ISO_FORMATTED_DATE())

    >>> entry = import_pofile_or_potemplate(test_translation_published_update,
    ...                                     carlos, firefox_trunk,
    ...                                     pofile=firefox_serbian,
    ...                                     published=True)
    >>> print entry.status.name
    IMPORTED
    >>> print_pofile(firefox_serbian)
    no. msgid              translation        fuz  published          pfuz
     1. first              a                       a                       *
     2. second             b-from-LP               b                       *
     3. third              c                  yes  c                  yes  *
     4. fourth             d-from-LP               d                       *
     5. fifth              e-from-LP               e                       *
     6. sixth              f                       f                       *

And another non-published update.


    >>> test_translation_update2 = r'''
    ... msgid ""
    ... msgstr ""
    ... "PO-Revision-Date: %s\n"
    ... "Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
    ... "Content-Type: text/plain; charset=UTF-8\n"
    ... "X-Launchpad-Export-Date: %s\n"
    ...
    ... # stays as published
    ... msgid "first"
    ... msgstr "a"
    ...
    ... # stays the same as it was (but not published)
    ... msgid "second"
    ... msgstr "b-from-LP"
    ...
    ... # same as already published one, removes the fuzzy flag
    ... msgid "third"
    ... msgstr "c"
    ...
    ... # revert to published translation
    ... msgid "fourth"
    ... msgstr "d"
    ...
    ... # updates active translation
    ... msgid "fifth"
    ... msgstr "e-from-LP-two"
    ...
    ... # sixth message is not being updated at all
    ... msgid "sixth"
    ... msgstr "f"
    ... ''' % (ISO_FORMATTED_DATE(), ISO_FORMATTED_DATE())


    >>> entry = import_pofile_or_potemplate(test_translation_update2,
    ...                                     carlos, firefox_trunk,
    ...                                     pofile=firefox_serbian,
    ...                                     published=False)
    >>> print entry.status.name
    IMPORTED
    >>> print_pofile(firefox_serbian)
    no. msgid              translation        fuz  published          pfuz
     1. first              a                       a                       *
     2. second             b-from-LP               b                       *
     3. third              c                       c                  yes  *
     4. fourth             d                       d                       *
     5. fifth              e-from-LP-two           e                       *
     6. sixth              f                       f                       *
