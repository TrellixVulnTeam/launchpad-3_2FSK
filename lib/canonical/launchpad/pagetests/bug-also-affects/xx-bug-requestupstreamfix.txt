If we try to add an upstream task without specifying a product:

    >>> browser.addHeader('Authorization', 'Basic test@canonical.com:test')
    >>> browser.open(
    ...     'http://localhost/distros/debian/+source/mozilla-firefox/+bug/3')
    >>> browser.getLink(url='+upstreamtask').click()
    >>> browser.url
    'http://localhost/distros/debian/+source/mozilla-firefox/+bug/3/+upstreamtask'

    >>> browser.getControl('Product').value
    ''
    >>> browser.getControl('Continue').click()
    >>> browser.url
    'http://localhost/distros/debian/+source/mozilla-firefox/+bug/3/+upstreamtask'

We get a nice error message.

  >>> 'Required input is missing' in browser.contents
  True

Now we add an upstream task, while adding this new bugtask we can also
specify a bug watch. If we inadvertently left some leading or trailing white
space in the bug URL it will be stripped.

  >>> browser.getControl('Product').value = 'alsa-utils'
  >>> browser.getControl('URL').value = (
  ...     '   https://bugzilla.mozilla.org/show_bug.cgi?id=1234   ')
  >>> browser.getControl('Continue').click()

Redirected to the newly created bugtask page

  >>> browser.url
  'http://localhost/products/alsa-utils/+bug/3'

  >>> print browser.contents
  <...
  ...alsa-utils (upstream)...

And we can check that the remote bug number was stripped.

  >>> browser.getLink('mozilla.org #1234')
  <Link text='Linked to [IMG] mozilla.org #1234'
    url='https://bugzilla.mozilla.org/show_bug.cgi?id=1234'>

And now we try to add the same upstream again.

    >>> browser.getLink(url='+upstreamtask').click()
    >>> browser.url
    'http://localhost/products/alsa-utils/+bug/3/+upstreamtask'

    >>> browser.getControl('Product').value = 'alsa-utils'
    >>> browser.getControl('Continue').click()
    >>> browser.url
    'http://localhost/products/alsa-utils/+bug/3/+upstreamtask'

We get a nice error message.

    >>> print browser.contents
    <...A fix for this bug has already been requested for alsa-utils...

We can add another upstream to the bug.

    >>> browser.getControl('Product').value = 'evolution'
    >>> browser.getControl('Continue').click()
    >>> browser.url
    'http://localhost/products/evolution/+bug/3'

But if we try to change it to the target of an existing upstream bugtask,
our validator springs into action.

    >>> browser.getLink("evolution (upstream)").click()
    >>> browser.url
    'http://localhost/products/evolution/+bug/3/+editstatus'
    >>> browser.getControl('Product').value = 'alsa-utils'
    >>> browser.getControl('Save Changes').click()
    >>> browser.url
    'http://localhost/products/evolution/+bug/3/+editstatus'
    >>> print browser.contents
    <...
    ...Please fix them and try again...
    ...
    ...A fix for this bug has already been requested for alsa-utils...
    ...
