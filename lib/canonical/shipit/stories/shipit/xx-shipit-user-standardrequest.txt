Let's test the /myrequest page, where users place new requests and/or change
existing ones.

  >>> browser.addHeader('Authorization', 'Basic foo.bar@canonical.com:test')
  >>> browser.open('http://shipit.ubuntu.dev/myrequest')
  >>> browser.url
  'http://shipit.ubuntu.dev/myrequest'

  >>> print extract_text(find_tag_by_id(browser.contents, 'maincontent'))
  Logged in as...
  We can send you a CD free of charge...

First of all, we'll make sure a request is accepted only if all required 
fields are filled.

  >>> browser.getControl(name='ordertype').value = ['1']
  >>> browser.getControl('Submit Request').click()
  >>> browser.url
  'http://shipit.ubuntu.dev/myrequest'

  >>> print_errors(browser.contents)
  (Required)
  Required input is missing...

For some countries like the US, our shipping company requires a postcode, so
we can't accept a request from the US without a postcode.

  >>> browser.getControl(name='field.recipientdisplayname').value = 'Foo'
  >>> browser.getControl(name='field.organization').value = 'Baz'
  >>> browser.getControl(name='field.addressline1').value = 'Street'
  >>> browser.getControl(name='field.city').value = 'City'
  >>> browser.getControl(name='field.province').value = 'Province'
  >>> browser.getControl(name='field.postcode').value = ''
  >>> browser.getControl(name='field.country').value = ['226']
  >>> browser.getControl(name='field.phone').value = '43242442'
  >>> browser.getControl('Submit Request').click()
  >>> browser.url
  'http://shipit.ubuntu.dev/myrequest'

  >>> for message in get_feedback_messages(browser.contents):
  ...     print message
  Shipping to your country requires a postcode, but you didn't provide one...

Now we fill in the last remaining required field and the request is
accepted. The request is automatically approved because the user can
only choose the number of CDs from a list of predefined options.

  >>> browser.getControl(name='field.postcode').value = '42423'
  >>> browser.getControl('Submit Request').click()
  >>> browser.url
  'http://shipit.ubuntu.dev/myrequest'

  >>> for message in get_feedback_messages(browser.contents):
  ...     print message
  Request accepted. Please note that requests usually take from 4 to 6 weeks
  to deliver, depending on the country of shipping...

  >>> from canonical.shipit.interfaces.shipit import IShipitAccount
  >>> from canonical.launchpad.database import Person
  >>> from canonical.launchpad.ftests import login, logout, ANONYMOUS
  >>> login(ANONYMOUS)
  >>> shipit_account = IShipitAccount(Person.byName('name16').account)
  >>> shipit_account.currentShipItRequest().isApproved()
  True
  >>> shipit_account.currentShipItRequest().getTotalApprovedCDs()
  10
  >>> logout()


If now we go to shipit.kubuntu, we'll be able to add more CDs to our
existing request...

  >>> browser.open('http://shipit.kubuntu.dev/myrequest')
  >>> browser.url
  'http://shipit.kubuntu.dev/myrequest'

  >>> browser.getControl(name='ordertype').value = ['10']
  >>> browser.getControl('Request More CDs').click()
  >>> browser.url
  'http://shipit.kubuntu.dev/myrequest'


...and it will still be approved, because it's a standard request.

  >>> login(ANONYMOUS)
  >>> shipit_account.currentShipItRequest().isApproved()
  True
  >>> shipit_account.currentShipItRequest().getTotalApprovedCDs()
  11
  >>> logout()


Now we'll create a ShippingRun to simulate that this request was shipped, so
that we can see how shipit behaves for people making further requests for a
given distroseries.

  >>> from canonical.launchpad.database import ShippingRequestSet
  >>> login(ANONYMOUS)
  >>> shippingrun = ShippingRequestSet()._create_shipping_run(
  ...     [shipit_account.currentShipItRequest().id])
  >>> [request.recipient.displayname for request in shippingrun.requests]
  [u'Foo Bar']
  >>> logout()

name16's shipped request contained Ubuntu and Kubuntu CDs. This means that if
he makes another request containing /only/ Server CDs it'll be auto
approved, otherwise it'll have to be manually approved.

  >>> sorted(flavour.title 
  ...        for flavour in shippingrun.requests[0].getContainedFlavours())
  ['Kubuntu', 'Ubuntu']

  >>> browser.open('http://shipit.ubuntu.dev/myrequest-server')
  >>> browser.url
  'http://shipit.ubuntu.dev/myrequest-server'

As name16 already has a request, the address fields will be pre-filled for
him.

  >>> browser.getControl(name='field.recipientdisplayname').value
  'Foo'
  >>> browser.getControl(name='field.organization').value
  'Baz'

  >>> browser.getControl(name='ordertype').value = ['16']
  >>> browser.getControl('Submit Request').click()
  >>> browser.url
  'http://shipit.ubuntu.dev/myrequest-server'

  >>> login(ANONYMOUS)
  >>> shipit_account.currentShipItRequest().isApproved()
  True
  >>> shipit_account.currentShipItRequest().getTotalApprovedCDs()
  2
  >>> logout()

If he adds any Ubuntu or Kubuntu CDs to his request, it'll then be marked as
pending approval.

  >>> browser.open('http://shipit.ubuntu.dev/myrequest')
  >>> browser.url
  'http://shipit.ubuntu.dev/myrequest'

  >>> browser.getControl(name='ordertype').value = ['1']
  >>> browser.getControl('Request More CDs').click()
  >>> browser.url
  'http://shipit.ubuntu.dev/myrequest'

  >>> login(ANONYMOUS)
  >>> shipit_account.currentShipItRequest().isAwaitingApproval()
  True
  >>> shipit_account.currentShipItRequest().getTotalApprovedCDs()
  0
  >>> logout()

Let's pretend Marilize approved his request and it was shipped, so that we
can make a third one and see what happens.

  >>> login('marilize@hbd.com')
  >>> request = shipit_account.currentShipItRequest()
  >>> request.approve()
  >>> shippingrun = ShippingRequestSet()._create_shipping_run(
  ...     [shipit_account.currentShipItRequest().id])
  >>> [request.recipient.displayname for request in shippingrun.requests]
  [u'Foo Bar']
  >>> shipit_account.currentShipItRequest() is None
  True
  >>> logout()

  >>> browser.open('http://shipit.ubuntu.dev/myrequest')
  >>> browser.url
  'http://shipit.ubuntu.dev/myrequest'

  >>> browser.getControl(name='ordertype').value = ['1']
  >>> browser.getControl('Submit Request').click()
  >>> browser.url
  'http://shipit.ubuntu.dev/myrequest'

  >>> login(ANONYMOUS)
  >>> shipit_account.currentShipItRequest().isPendingSpecial()
  True
  >>> logout()

It's also possible to cancel an existing request.

  >>> browser.getControl('Cancel Request').click()
  >>> browser.url
  'http://shipit.ubuntu.dev/myrequest'

  >>> login(ANONYMOUS)
  >>> shipit_account.currentShipItRequest() is None
  True
  >>> logout()


== When users have only one option ==

As of 8.10, we started shipping only 32-bit CDs of Ubuntu/Kubuntu, and most
users will have only the option of requesting a single CD, whereas others
(with significant karma or members of the ubuntumembers team) will get a few
other options.

Since these options are presented as radio buttons, it doesn't make any sense
to present a single option as a radio button, so if the user has only one
option we will just state how many CDs he will get and ask him to enter his
address.

    # First we make sure there's only one standard option for Kubuntu
    # requests.
    >>> from canonical.shipit.interfaces.shipit import ShipItFlavour
    >>> from canonical.shipit.model.shipit import StandardShipItRequest
    >>> for option in StandardShipItRequest.select():
    ...     option.destroySelf()
    >>> sole_option = StandardShipItRequest(
    ...     flavour=ShipItFlavour.KUBUNTU, quantityx86=1, quantityamd64=0,
    ...     quantityppc=0, user_description="1 Kubuntu CD")

    >>> browser.open('http://shipit.kubuntu.dev/myrequest')
    >>> print extract_text(find_tag_by_id(browser.contents, 'options'))
    Just enter your address below and we will send you 1 Kubuntu CD
    of the...release...

    >>> browser.getControl(name='field.recipientdisplayname').value = 'Foo'
    >>> browser.getControl(name='field.organization').value = 'Baz'
    >>> browser.getControl(name='field.addressline1').value = 'Street'
    >>> browser.getControl(name='field.city').value = 'City'
    >>> browser.getControl(name='field.province').value = 'Province'
    >>> browser.getControl(name='field.postcode').value = '123456'
    >>> browser.getControl(name='field.country').value = ['226']
    >>> browser.getControl(name='field.phone').value = '43242442'
    >>> browser.getControl('Submit Request').click()
    >>> print "\n".join(get_feedback_messages(browser.contents))
    Request accepted...
