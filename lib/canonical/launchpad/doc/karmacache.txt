= Karma Cache =

To be able to get the total karma of a given person, the karma of a given
type or the karma in a given context, we use our KarmaCache table (as well as
our KarmaPersonCategoryCacheView view). We need them because there are too
many entries in the Karma table, making it extremely expensive to do these
calculations on the fly.

The KarmaCache table is maintained by our foaf-update-karma-cache.py script,
which runs daily. The script does that by using the IKarmaCacheSet API.

    >>> from zope.component import getUtility
    >>> from zope.interface.verify import verifyObject
    >>> from canonical.launchpad.database import KarmaCategory
    >>> from canonical.launchpad.interfaces import (
    ...     IKarmaCache, IKarmaCacheSet, IPersonSet)
    >>> from canonical.launchpad.ftests.harness import (
    ...     LaunchpadFunctionalTestSetup)
    >>> LaunchpadFunctionalTestSetup(dbuser='karma').setUp()
    >>> karmacacheset = getUtility(IKarmaCacheSet)

== Creating new KarmaCache entries ==

This is done using the new() method:

    >>> value = 199
    >>> person = getUtility(IPersonSet).getByName('salgado')
    >>> bugs = KarmaCategory.byName('bugs')

    # The 'karma' dbuser doesn't have access to the Product table, so we'll
    # use firefox's id directly instead of trying to fetch the product from
    # the database.
    >>> firefox_id = 4
    >>> cache_entry = karmacacheset.new(
    ...     value, person.id, bugs.id, product_id=firefox_id)


== Updating/deleting existing entries ==

Since our script has only the person ID, category ID and context ID of
the KarmaCache entry it wants to delete/update, we provide a couple methods
that will find the KarmaCache with the given person/category/context IDs
and either update or delete it.

    >>> new_value = 19
    >>> karmacacheset.updateKarmaValue(
    ...     new_value, person.id, bugs.id, product_id=firefox_id) 
    >>> cache_entry.karmavalue
    19

    >>> karmacacheset.deleteEntry(
    ...     person.id, bugs.id, product_id=firefox_id)


If we try to update/delete an unexistent KarmaCache entry, we'll get a
NotFoundError.

    >>> karmacacheset.updateKarmaValue(
    ...     new_value, person.id, bugs.id, product_id=firefox_id) 
    Traceback (most recent call last):
    ...
    NotFoundError: ...

    >>> karmacacheset.deleteEntry(
    ...     person.id, bugs.id, product_id=firefox_id)
    Traceback (most recent call last):
    ...
    NotFoundError: ...


    >>> LaunchpadFunctionalTestSetup().tearDown()
