We want to simulate an expired subscription. This can't be done through
the web UI, because we explicitly check that the expiration date is in
the future.

XXX: We can't use the new-style Browser() to test this because the form value
for the year 2000 is not available in HTML. -- kiko, 2006-10-18

  >>> print http(r"""
  ... POST /people/myemail/+member/name16 HTTP/1.1
  ... Authorization: Basic Zm9vQGJhei5jb206Zg==
  ... Content-Length: ...
  ... Content-Type: application/x-www-form-urlencoded
  ... 
  ... admin=no&day=1&month=1&year=2000&comment=&editactive=Change""")
  HTTP/1.1 200 Ok
  Content-Length: ...
  Content-Type: text/html;charset=utf-8
  ...
  ...Invalid expiration: date provided is in the past...
  ...

Let's do it under the wraps:

  >>> from canonical.launchpad.database import Person, TeamMembership
  >>> from canonical.lp.dbschema import TeamMembershipStatus
  >>> foobar = Person.byName('name16')
  >>> team = Person.byName('myemail')
  >>> tm = TeamMembership.selectOneBy(personID=foobar.id, teamID=team.id)
  >>> tm.setStatus(TeamMembershipStatus.EXPIRED)

Persist the change:

  >>> import transaction
  >>> transaction.commit()

And make sure that 'name16' is now an EXPIRED member of this team.

  >>> foobar.inTeam(team)
  False

