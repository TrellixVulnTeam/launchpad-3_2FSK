= DistroSeries Commercial Source Package Pages =

Commercial packages in Launchpad differ from regular packages by two things:
1. Their component is 'commercial'
2. Their archive is the commercial archive, rather than the primary archive.

Their page functionality is identical to regular packages, which is described
in 15-distrorelease-sources.txt.

    >>> browser.open(
    ...   "http://launchpad.dev/ubuntu/breezy-autotest/"
    ...   "+source/commercialpackage")

This page provides its versions publications organised by pocket.
We can see 'commercialpackage' is published once in pocket RELEASE:

  >>> print find_tag_by_id(browser.contents, 'publishings')
  <dl id="publishings">
  ...
  <a href="/ubuntu/breezy-autotest/+source/commercialpackage/1.0-1">commercialpackage 1.0-1</a>
  ...

The user can also download the files for the "currentrelease" (last
published version) if they are available:

  >>> print find_tag_by_id(browser.contents, 'files')
  <div id="files">
  ...
        <a href="http://localhost:58000/66/commercialpackage_1.0.orig.tar.gz">commercialpackage_1.0.orig.tar.gz</a>
  ...
      <a href="http://localhost:58000/67/commercialpackage_1.0-1.diff.gz">commercialpackage_1.0-1.diff.gz</a>
  ...
      <a href="http://localhost:58000/68/commercialpackage_1.0-1.dsc">commercialpackage_1.0-1.dsc</a>
  ...

This page also provides links to the binary packages generated by this
source in a specfic architecture:

  >>> print find_tag_by_id(browser.contents, 'binaries')
  <div id="binaries">
    <ul>
      <li>
        commercialpackage
        <span>
        (<a href="../../i386/commercialpackage">i386</a>)</span>
      </li>
    </ul>
  </div>

Let's check the link to the binary package built on i386 architecture,
a DistroArchSeriesBinaryPackage:

  >>> browser.getLink("i386").click()
  >>> browser.url
  'http://launchpad.dev/ubuntu/breezy-autotest/i386/commercialpackage'

More information about this page can be found at
17-distroarchseries-binpackages.txt.

Move back to the SourcePackage page to continue the tests:

  >>> browser.open(
  ...     "http://launchpad.dev/ubuntu/breezy-autotest/+source/"
  ...     "commercialpackage")


The '+changelog' page provides an aggregation of the changelogs for
SourcePackageReleases published in this DistroSeries.

The text is generated automatically by appending:

{{{
  SOURCENAME (VERSION) UPLOADDISTRORELEASE; urgency=URGENCY

  CHANGELOG

  -- UPLOADER-RFC-822 TIMESTAMP
}}}

for each published version.

  >>> browser.getLink("View changelog").click()
  >>> browser.url
  'http://launchpad.dev/ubuntu/breezy-autotest/+source/commercialpackage/+changelog'

  >>> print find_tag_by_id(browser.contents, 'commercialpackage_1.0-1')
  <pre id="commercialpackage_1.0-1">
    commercialpackage...
  </pre>


Back to the SourcePackage page:

  >>> browser.open(
  ...     "http://launchpad.dev/ubuntu/breezy-autotest/+source/"
  ...     "commercialpackage")

We can visit a specific published release of "mozilla-firefox", this
page is provided by an DistroSeriesSourcePackageRelease instance:

  >>> browser.getLink("commercialpackage 1.0-1").click()
  >>> browser.url
  'http://launchpad.dev/ubuntu/breezy-autotest/+source/commercialpackage/1.0-1'

There we can see the respective 'changelog' content for this version:

  >>> print find_tag_by_id(browser.contents, 'changelog')
  <pre id="changelog">commercialpackage (1.0-1) breezy; urgency=low
  ...

With the possibility to download the entire changesfile (if available):

  >>> print find_tag_by_id(browser.contents, 'changesfile')
  <div id="changesfile">
  ...
      <a href="http://localhost:58000/65/commercialpackage_1.0-1_source.changes">
  ...

And also download the files contained in this source, like '.orig',
'.diff' and the DSC:

  >>> print find_tag_by_id(browser.contents, 'files')
  <div id="files">
  ...
  <a href="http://localhost:58000/66/commercialpackage_1.0.orig.tar.gz">commercialpackage_1.0.orig.tar.gz</a>
  ...
  <a href="http://localhost:58000/67/commercialpackage_1.0-1.diff.gz">commercialpackage_1.0-1.diff.gz</a>
  ...
  <a href="http://localhost:58000/68/commercialpackage_1.0-1.dsc">commercialpackage_1.0-1.dsc</a>
  ...
