= Person Views of Branch Lists =

There are several views of the branches related to a person.


== Owned Branches ==

First, check that the condensed branch listing page works:

    >>> browser = setupBrowser(auth='Basic test@canonical.com:test')
    >>> browser.open('http://code.launchpad.dev/~name12')
    >>> print browser.title
    Bazaar branches owned by Sample Person

The heading in the main content is the same as the page title text.

    >>> main = find_main_content(browser.contents)
    >>> print extract_text(main.h1)
    Bazaar branches owned by Sample Person


== Default view for a person on code root site ==

The default view for a person on the code root site is the normal branch
listing view for that person.

If a person does not have any related branches, we print an informative
message.

    >>> browser.open('http://code.launchpad.dev/~kinnison')
    >>> print extract_text(
    ...     find_tag_by_id(browser.contents, 'no-branch-message'))
    There are no branches related to Daniel Silverstone in Launchpad today.


== Owned Branches ==

There is a link in the branch context menu for person which points to
the owned branches page.

    >>> browser.open('http://code.launchpad.dev/~name12')
    >>> browser.getLink('owned').click()
    >>> print browser.title
    Bazaar branches owned by Sample Person
    >>> table = find_tag_by_id(browser.contents, 'branchtable')
    >>> for row in table.tbody.fetch('tr'):
    ...     print extract_text(row)
    lp://dev/~name12/landscape/feature-x      Development
    ...

There is a javascript variable used to find the branch sparks for each branch
in the list, in the format of [id, url].

    >>> def print_branch_sparks(browser):
    ...     print extract_text(
    ...         find_tag_by_id(browser.contents, 'branch-sparks'))
    >>> print_branch_sparks(browser)
    var branch_sparks = [["b-1", "http://.../+spark"], ...]];


== Registered Branches ==

There is also a link which points to the registered branches page.

    >>> browser.open('http://code.launchpad.dev/~name12')
    >>> browser.getLink('registered').click()
    >>> print browser.title
    Bazaar branches registered by Sample Person
    >>> table = find_tag_by_id(browser.contents, 'branchtable')
    >>> for row in table.tbody.fetch('tr'):
    ...     print extract_text(row)
    lp://dev/~name12/landscape/feature-x      Development
    ...

    >>> def print_branch_sparks(browser):
    ...     print extract_text(
    ...         find_tag_by_id(browser.contents, 'branch-sparks'))
    >>> print_branch_sparks(browser)
    var branch_sparks = [["b-1", "http://.../+spark"], ...]];


== Subscribed branches ==

From the persons main listing page, there is also a link to subscribed
branches.

    >>> browser.open('http://code.launchpad.dev/~name12')
    >>> browser.getLink('subscribed').click()
    >>> print browser.title
    Bazaar branches subscribed to by Sample Person
    >>> table = find_tag_by_id(browser.contents, 'branchtable')
    >>> for row in table.tbody.fetch('tr'):
    ...     print extract_text(row)
    lp://dev/~launchpad/gnome-terminal/launchpad  Development           ...
    lp://dev/~name12/+junk/junk.dev               Experimental  ...

    >>> def print_branch_sparks(browser):
    ...     print extract_text(
    ...         find_tag_by_id(browser.contents, 'branch-sparks'))
    >>> print_branch_sparks(browser)
    var branch_sparks = [["b-1", "http://.../+spark"], ...]];


== Person branch summary ==

Each of the person branch listing pages has a brief summary at the
top of the page with some branch counts.  These also contain the links
to the registered, owned and subscribed listing pages for a person.

Firstly lets set up a new person with no branches.

    >>> login(ANONYMOUS)
    >>> eric = factory.makePerson(
    ...     name="eric", password="test", email="eric@example.com",
    ...     displayname="Eric the Viking")
    >>> b1 = factory.makeAnyBranch(owner=eric)
    >>> logout()

The summary is shown.

    >>> eric_browser = setupBrowser(auth="Basic eric@example.com:test")
    >>> eric_browser.open('http://code.launchpad.dev/~eric')
    >>> print_tag_with_id(eric_browser.contents, 'page-summary')
    1 owned branch, 1 registered branch, 1 subscribed branch
    0 active proposals, 0 approved merges, 0 requested reviews

Now we'll create another branch, and unsubscribe the owner from it.

    >>> login(ANONYMOUS)
    >>> b2 = factory.makeAnyBranch(owner=eric)
    >>> ignored = b2.unsubscribe(eric)
    >>> logout()

    >>> eric_browser.open('http://code.launchpad.dev/~eric')
    >>> print_tag_with_id(eric_browser.contents, 'page-summary')
    2 owned branches, 2 registered branches, 1 subscribed branch
    0 active proposals, 0 approved merges, 0 requested reviews

