Memcache with TALES
===================

We have extended TALES with a cache: expression to allow chunks of
rendered page templates to be cached in Memcached.


    >>> template = TestPageTemplate(dedent("""\
    ...     <div tal:content="cache:public,1 hour">
    ...         <span tal:content="param">placeholder</span>
    ...     </div>"""))


The first time we render the page template, there is no information
in the cache. The cachable section is interpreted and stored in the cache
for next time.

    >>> print template(param='first')
    <div>
        <span>first</span>
    </div>


The second time we render the page template, the cached information
is used. We prove this here by changing our parameters, which would
cause this template to render differently.

    >>> print template(param='second')
    <div>
        <span>first</span>
    </div>


If we clear the cache, it will be rendered as expected.

    >>> clear_memcache()
    >>> print template(param='third')
    <div>
        <span>third</span>
    </div>


