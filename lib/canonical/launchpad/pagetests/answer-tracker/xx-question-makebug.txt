= Turning a Question into a Bug =

The question page shows a link to make the question into a bug.

  >>> browser.open('http://launchpad.dev/firefox/+ticket/2')
  >>> createLink = browser.getLink('Create Bug Report')
  >>> createLink is not None
  True

This link brings the user to page proposing to create a new bug based
on the content of the question. The bug description is set to the
the question's description and the title is empty.

  >>> browser.addHeader('Authorization', 'Basic foo.bar@canonical.com:test')
  >>> createLink.click()
  >>> print browser.title
  Create bug report based on...
  >>> browser.getControl('Summary').value
  ''
  >>> browser.getControl('Description').value
  "...I'm trying to learn about SVG..."

Cancelling the request brings you back to the question page.

  >>> browser.getControl('Cancel').click()
  >>> browser.url
  '.../firefox/+ticket/2'
  >>> browser.title
  '...question #2...'
  >>> createLink = browser.getLink('Create Bug Report')
  >>> createLink is not None
  True

The user must enter a valid title and description before creating the
bug.

  >>> createLink.click()
  >>> browser.getControl('Description').value= ''
  >>> browser.getControl('Create').click()
  >>> from BeautifulSoup import BeautifulSoup
  >>> soup = BeautifulSoup(browser.contents)
  >>> for tag in soup('div', 'message'):
  ...   print tag.string
  Required input is missing.
  Required input is missing.

Clicking the 'Create' button creates the bug with the user-specified title
and description and redirects the user to the bug page.

  >>> browser.getControl('Summary').value = (
  ...     "W3C SVG demo doesn't work in Firefox")
  >>> browser.getControl('Description').value = (
  ...     "Browsing to the W3C SVG demo results in a blank page.")
  >>> browser.getControl('Create').click()
  >>> browser.url
  '.../firefox/+bug/...'
  >>> from BeautifulSoup import BeautifulSoup
  >>> soup = BeautifulSoup(browser.contents)
  >>> for tag in soup('h1'):
  ...     print tag.string
  W3C SVG demo doesn't work in Firefox
  >>> for tag in soup('p'):
  ...     print tag.string
  Browsing to the W3C SVG demo results in a blank page...

The bug page will display a link to the originating question in the 'Related
questions' portlet:

  >>> portlet = find_portlet(browser.contents, 'Related questions')
  >>> for question in portlet.fetch('li', 'ticket'):
  ...     print question.renderContents()
   Mozilla Firefox: ...<a href=".../firefox/+ticket/2">Problem...

A user can't create a bug report when a question has already a bug linked
to it.

  >>> browser.open('http://launchpad.dev/firefox/+ticket/2')
  >>> browser.contents
  '...<h2>Related bugs</h2>...'
  >>> browser.getLink('Create Bug Report')
  Traceback (most recent call last):
    ..
  LinkNotFoundError...

It works with distribution questions as well.

  >>> browser.open('http://launchpad.dev/ubuntu/+ticket/5/+makebug')
  >>> browser.getControl('Summary').value = (
  ...     "Ubuntu Installer can't find CDROM")
  >>> browser.getControl('Create Bug Report').click()
  >>> browser.url
  '.../ubuntu/+bug/...'
  >>> soup = BeautifulSoup(browser.contents)
  >>> for tag in soup('div', 'informational message'):
  ...   print tag.string
  Thank you! Bug...created.
