= Searching for a bug subscriber's bugs =

On the advanced search page there's a field for specifying a bug subscriber:

    >>> search_url = 'http://bugs.launchpad.dev/firefox/+bugs?advanced=1'
    >>> anon_browser.open(search_url)
    >>> anon_browser.getControl('Bug subscriber') is not None
    True

If an non-existent person is entered there, an error message is displayed:

    >>> anon_browser.getControl('Bug subscriber').value = 'non-existent'
    >>> anon_browser.getControl('Search', index=0).click()
    >>> for message in find_tags_by_class(anon_browser.contents, 'message'):
    ...     print message.renderContents()
    There's no person with the name or email address 'non-existent'.

Entering an existing person shows all bugs for packages or products that the
person is subscribed to. To demonstrate, we'll begin with a user who isn't
subscribed to any bugs. In this case, no bugs are found:

    >>> subscriber = 'no-priv@canonical.com'
    >>> anon_browser.getControl('Bug subscriber').value = subscriber
    >>> anon_browser.getControl('Search', index=0).click()
    >>> print extract_text(find_main_content(anon_browser.contents))
    Bugs ...
    No results for search

We'll continue by subscribing the same user to a couple of bugs. However,
first we'll register a couple of bugs for the Mozilla Firefox product:

    >>> browser = setupBrowser(auth='Basic test@canonical.com:test')
    >>> browser.open('http://bugs.launchpad.dev/firefox/')
    >>> browser.getLink('Report a bug').click()
    >>> browser.getLink('complicated bug filing form').click()
    >>> print extract_text(find_main_content(browser.contents))
    Report a new bug...
    >>> report_bug_url = browser.url

    >>> browser.getControl('Summary').value = 'Test Bug 1'
    >>> browser.getControl('Further information').value = 'Test Bug 1'
    >>> browser.getControl('Submit').click()
    >>> print extract_text(find_main_content(browser.contents))
    Thank you for your bug report...
    >>> bug_1_url = browser.url

    >>> browser.open(report_bug_url)
    >>> browser.getControl('Summary').value = 'Test Bug 2'
    >>> browser.getControl('Further information').value = 'Test Bug 2'
    >>> browser.getControl('Submit').click()
    >>> print extract_text(find_main_content(browser.contents))
    Thank you for your bug report...
    >>> bug_2_url = browser.url

Next we'll subscribe our user to the first bug we've just registered:

    >>> browser.open(bug_1_url)
    >>> browser.getLink('Subscribe someone else').click()
    >>> print extract_text(find_main_content(browser.contents))
    Bug...Subscribe someone else to the bug report...

    >>> browser.getControl('Person').value = subscriber
    >>> browser.getControl('Add').click()
    >>> print extract_text(find_main_content(browser.contents))
    No Privileges Person has been subscribed to this bug...

Now if we repeat our earlier search for bugs our user is subscribed to, we'll
find our first bug within the results:

    >>> anon_browser.open(search_url)
    >>> anon_browser.getControl('Bug subscriber').value = subscriber
    >>> anon_browser.getControl('Search', index=0).click()
    >>> from canonical.launchpad.ftests.bug import extract_bugtasks
    >>> for bugtask in extract_bugtasks(anon_browser.contents):
    ...     print 'Task:' + bugtask
    Task:...Test Bug 1...Undecided...New

Next we'll subscribe our user to the second bug we've just registered:

    >>> browser.open(bug_2_url)
    >>> browser.getLink('Subscribe someone else').click()
    >>> print extract_text(find_main_content(browser.contents))
    Bug...Subscribe someone else to the bug report...

    >>> browser.getControl('Person').value = subscriber
    >>> browser.getControl('Add').click()
    >>> print extract_text(find_main_content(browser.contents))
    No Privileges Person has been subscribed to this bug...

Finally, if we repeat our earlier search for bugs our user is subscribed to,
we'll find both of our bugs within the results:

    >>> anon_browser.open(search_url)
    >>> anon_browser.getControl('Bug subscriber').value = subscriber
    >>> anon_browser.getControl('Search', index=0).click()
    >>> for bugtask in extract_bugtasks(anon_browser.contents):
    ...     print 'Task:' + bugtask
    Task:...Test Bug 1...Undecided...New
    Task:...Test Bug 2...Undecided...New
