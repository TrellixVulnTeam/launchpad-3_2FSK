
Ticket Tracking System
======================

ITicketTarget
-------------

Launchpad includes a tech support ticket tracker. Currently tickets can
be created on products, distributions and source packages. To indicate
that tickets can be created on something, ITicketTarget is used.

    >>> from canonical.launchpad.interfaces import ITicketTarget

Let's check that the current ticket targets provide the necessary
interface, methods and attributes.

Product
^^^^^^^

    >>> from zope.interface.verify import verifyObject
    >>> from canonical.launchpad.interfaces import IProductSet
    >>> firefox = getUtility(IProductSet)['firefox']
    >>> verifyObject(ITicketTarget, firefox)
    True

Create a ticket:

    >>> login('test@canonical.com')
    >>> sample_person = getUtility(ILaunchBag).user
    >>> firefox_ticket = firefox.newTicket(
    ...     sample_person, "Firefox ticket", "Unable to use Firefox")
    >>> firefox_ticket.target == firefox
    True

See all the tickets:

    >>> [(ticket.id, ticket.title) for ticket in firefox.tickets]
    [(6L, u'Firefox ticket'),
     (4, u'Firefox loses focus and gets stuck'),
     (2, u'Problem showing the SVG demo on W3C site'),
     (1, u'Firefox cannot render Bank Site')]

Get an existing ticket:

    >>> ticket_four = firefox.getTicket(4)
    >>> ticket_four.title
    u'Firefox loses focus and gets stuck'

Get a non-existing ticket, or a ticket for another target:

    >>> firefox.getTicket(12345) is None
    True

    >>> firefox.getTicket(3) is None
    True


Distribution
^^^^^^^^^^^^

    >>> from canonical.launchpad.interfaces import IDistributionSet
    >>> ubuntu = getUtility(IDistributionSet).getByName('ubuntu')
    >>> verifyObject(ITicketTarget, ubuntu)
    True

Create a ticket:

    >>> ubuntu_ticket = ubuntu.newTicket(
    ...     sample_person, "Ubuntu ticket", "Unable to use Ubuntu")
    >>> ubuntu_ticket.target == ubuntu
    True

See all the tickets:

    >>> [(ticket.id, ticket.title) for ticket in ubuntu.tickets]
    [(7L, u'Ubuntu ticket'),
     (5, u'Installation failed'),
     (3, u'Firefox is slow and consumes too much RAM')]

Get an existing ticket:

    >>> ticket_three = ubuntu.getTicket(3)
    >>> ticket_three.title
    u'Firefox is slow and consumes too much RAM'

Get a non-existing ticket, or a ticket for another target:

    >>> ubuntu.getTicket(12345) is None
    True

    >>> ubuntu.getTicket(4) is None
    True

Source Package
^^^^^^^^^^^^^^

A source package is a special ITicketTarget. It supports all the method
and attributes, but the tickets associated with a source package wont'
have the source package as their target. Instead the source package's
distribution will be the target.

    >>> firefox_package = ubuntu.currentrelease.getSourcePackageByName(
    ...     'mozilla-firefox')
    >>> verifyObject(ITicketTarget, firefox_package)
    True

Create a ticket:

    >>> firefox_package_ticket = firefox_package.newTicket(
    ...     sample_person, "Ubuntu Firefox ticket",
    ...     "Unable to use Firefox in Ubuntu.")
    >>> firefox_package_ticket.target == ubuntu
    True

See all the tickets:

    >>> [(ticket.id, ticket.title) for ticket in firefox_package.tickets]
    [(8L, u'Ubuntu Firefox ticket'),
     (3, u'Firefox is slow and consumes too much RAM')]

Get an existing ticket:

    >>> ticket_three = firefox_package.getTicket(3)
    >>> ticket_three.title
    u'Firefox is slow and consumes too much RAM'

Get a non-existing ticket, or a ticket for another target:

    >>> firefox_package.getTicket(12345) is None
    True

    >>> firefox_package.getTicket(5) is None
    True
