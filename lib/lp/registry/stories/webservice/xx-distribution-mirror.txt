= Distribution Mirrors =

For every mirror of distribution we publish most of its attributes. For archive
mirrors:

    >>> from lazr.restful.testing.webservice import pprint_entry
    >>> distros = webservice.get("/distros").jsonBody()
    >>> distro = distros['entries'][0]
    >>> ubuntu = webservice.get(distro['self_link']).jsonBody()
    >>> ubuntu_archive_mirrors = webservice.get(ubuntu['archive_mirrors_collection_link']).jsonBody()
    >>> canonical_archive = ubuntu_archive_mirrors['entries'][0]
    >>> canonical_archive_json = webservice.get(canonical_archive['self_link']).jsonBody()
    >>> pprint_entry(canonical_archive_json)
    content: u'Archive'
    date_created: u'2006-10-16T18:31:43.434567+00:00'
    description: None
    displayname: None
    distribution_link: u'http://.../ubuntu'
    enabled: True
    ftp_base_url: None
    http_base_url: u'http://archive.ubuntu.com/ubuntu/'
    name: u'canonical-archive'
    official_candidate: True
    owner_link: u'http://.../~mark'
    resource_type_link: u'http://.../#distribution_mirror'
    rsync_base_url: None
    self_link: u'http://.../ubuntu/+mirror/canonical-archive'
    speed: u'100 Mbps'
    status: u'Official'

And CD image mirrors:

    >>> ubuntu_cd_mirrors = webservice.get(ubuntu['cdimage_mirrors_collection_link']).jsonBody()
    >>> canonical_releases =  ubuntu_cd_mirrors['entries'][0]
    >>> canonical_releases_json = webservice.get(canonical_releases['self_link']).jsonBody()
    >>> pprint_entry(canonical_releases_json)
    content: u'CD Image'
    date_created: u'2006-10-16T18:31:43.434567+00:00'
    description: None
    displayname: None
    distribution_link: u'http://.../ubuntu'
    enabled: True
    ftp_base_url: None
    http_base_url: u'http://releases.ubuntu.com/'
    name: u'canonical-releases'
    official_candidate: True
    owner_link: u'http://.../~mark'
    resource_type_link: u'http://.../#distribution_mirror'
    rsync_base_url: None
    self_link: u'http://.../ubuntu/+mirror/canonical-releases'
    speed: u'100 Mbps'
    status: u'Official'

= Distribution Mirror Custom Operations =

DistributionMirror has some custom operations.

"isOfficial" returns a boolean result on whether a mirror is an official mirror
or not.

    >>> is_official_mirror = webservice.named_get(canonical_releases['self_link'],
    ...     'isOfficial').jsonBody()
    >>> print is_official_mirror
    True

"getOverallFreshness" returns the freshness of the mirror determined by the
mirror prober from the mirror's last probe.

    >>> releases_mirror2 = ubuntu_cd_mirrors['entries'][2]
    >>> freshness = webservice.named_get(releases_mirror2['self_link'],
    ...     'getOverallFreshness').jsonBody()
    >>> print freshness
    Up to date
