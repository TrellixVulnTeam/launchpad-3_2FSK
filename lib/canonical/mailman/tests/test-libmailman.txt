Launchpad doesn't need to talk directly to Mailman, but we can still test that
Mailman exists and seems properly configured, and that Launchpad can import
the libmailman common package.  Anything more than that is left to other
tests.

    >>> import subprocess, os
    >>> from canonical.config import config
    >>> def call(command_template, *args):
    ...     command = command_template % args
    ...     mailman_bin = os.path.join(config.mailman.build.prefix, 'bin')
    ...     return subprocess.call(command.split(), cwd=mailman_bin)

    >>> import libmailman

Mailman's site list must exist.

    >>> callable = 'canonical.mailman.tests.withlist_1.test_site_list'
    >>> call('./withlist -q -r %s mailman', callable)
    99

Mailman must also be able to import the libmailman shared package:

    >>> callable = 'canonical.mailman.tests.withlist_2.can_import_libmailman'
    >>> call('./withlist -q -r %s mailman', callable)
    99
