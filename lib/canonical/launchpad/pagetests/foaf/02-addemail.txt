= Registering email addresses =

Users can have any number of email addresses registered in their Launchpad
accounts, although we'll always communicate with them using their preferred
one. In order to register a new email address users must follow a link sent
by us to the address they want to add and confirm the registration.

Our new user 'Foo' will now add a couple email addresses to his account.

    # Workaround while https://launchpad.net/launchpad/+bug/39016 is not
    # fixed.
    >>> from canonical.launchpad.mail import stub
    >>> stub.test_emails[:] = []

    >>> browser = setupBrowser(auth='Basic foo@baz.com:f')
    >>> browser.open('http://launchpad.dev/~foo')
    >>> browser.getLink('Update e-mail addresses').click()
    >>> browser.url
    'http://launchpad.dev/~foo/+editemails'

    >>> browser.getControl('Add a new address').value = 'bar.foo@canonical.com'
    >>> browser.getControl('Add', index=1).click()

    >>> browser.url
    'http://launchpad.dev/~foo/+editemails'
    >>> for msg in get_feedback_messages(browser.contents):
    ...     print msg
    A confirmation message has been sent to...

    >>> from_addr, to_addrs, raw_msg = stub.test_emails.pop()
    >>> assert not stub.test_emails

Trying to add the same email again (while it's unconfirmed) will only cause
a new email to be sent with a new link. The links in the old and new email are
still accessible and will confirm the new address if/when the user follows
them.

    >>> browser.getControl('Add a new address').value = 'bar.foo@canonical.com'
    >>> browser.getControl('Add', index=1).click()

    >>> browser.url
    'http://launchpad.dev/~foo/+editemails'
    >>> for msg in get_feedback_messages(browser.contents):
    ...     print msg
    A confirmation message has been sent to...

    # Extract the link (from the email we just sent) the user will have to
    # use to finish the registration process.
    >>> from canonical.launchpad.ftests.logintoken import (
    ...     get_token_url_from_email)
    >>> from_addr, to_addrs, raw_msg = stub.test_emails.pop()
    >>> token_url = get_token_url_from_email(raw_msg)
    >>> token_url
    'http://launchpad.dev/token/...'
    >>> to_addrs
    ['bar.foo@canonical.com']
    >>> assert not stub.test_emails

Follow the token link, to confirm the new email address.

    >>> browser.open(token_url)
    >>> browser.url
    'http://launchpad.dev/token/.../+validateemail'
    >>> browser.getControl('Continue').click()

    >>> browser.url
    'http://launchpad.dev/%7Efoo'
    >>> for msg in get_feedback_messages(browser.contents):
    ...     print msg
    Email address successfully confirmed.

Now that the address is confirmed he sees it in the list of his confirmed
addresses.

    >>> browser.getLink('Update e-mail addresses').click()
    >>> confirmed = browser.getControl(name="field.VALIDATED_SELECTED")
    >>> confirmed.displayOptions
    ['\xa0foo@baz.com', '\xa0bar.foo@canonical.com']

If he tries to add it again, he'll get an error message explaining
that it's already registered.

    >>> browser.getControl('Add a new address').value = 'bar.foo@canonical.com'
    >>> browser.getControl('Add', index=1).click()
    >>> browser.url
    'http://launchpad.dev/%7Efoo/+editemails'
    >>> for msg in get_feedback_messages(browser.contents):
    ...     print msg
    There is 1 error.
    The email address 'bar.foo@canonical.com' is already registered as your
    email address...

== Adding a second email address ==

    >>> browser.getControl('Add a new address').value = 'baz.foo@canonical.com'
    >>> browser.getControl('Add', index=1).click()

    >>> browser.url
    'http://launchpad.dev/~foo/+editemails'
    >>> for tag in find_tags_by_class(browser.contents, 'message'):
    ...     print tag.renderContents()
    A confirmation message has been sent to...

    # Extract the link (from the email we just sent) the user will have to
    # use to finish the registration process.
    >>> from_addr, to_addrs, raw_msg = stub.test_emails.pop()
    >>> token_url = get_token_url_from_email(raw_msg)
    >>> token_url
    'http://launchpad.dev/token/...'
    >>> to_addrs
    ['baz.foo@canonical.com']
    >>> assert not stub.test_emails

Follow the token link, to confirm the new email address.

    >>> browser.open(token_url)
    >>> browser.url
    'http://launchpad.dev/token/.../+validateemail'
    >>> browser.getControl('Continue').click()

    >>> browser.url
    'http://launchpad.dev/~foo'

    >>> for tag in find_tags_by_class(browser.contents, 'informational'):
    ...     print tag.renderContents()
    Email address successfully confirmed.

