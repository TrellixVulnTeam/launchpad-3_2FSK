The feeds vhost should not set the cookie. Since it is running
on http instead of https, it cannot read the secure cookie on https,
so it cannot tell that it will end up overwriting the existing cookie.

    >>> browser.open('http://feeds.launchpad.dev/announcements.atom')
    >>> browser.url
    'http://feeds.launchpad.dev/announcements.atom'
    >>> print browser.headers.get('Set-Cookie')
    None

Our cookies need to have their domain attribute set to ensure that they
are sent to other vhosts in the same domain.

    >>> browser.open('http://blueprints.launchpad.dev/+login')
    >>> browser.getControl('E-mail', index=0).value = 'foo.bar@canonical.com'
    >>> browser.getControl('Password').value = 'test'
    >>> browser.getControl('Log In').click()
    >>> print extract_text(find_tag_by_id(browser.contents, 'logincontrol'))
    Foo Bar...
    >>> raw_cookie = browser.headers['Set-Cookie']
    >>> print raw_cookie
    launchpad...; Domain=.launchpad.dev;...

If we visit another vhost in the domain, we remain logged in.

    >>> browser.open('http://launchpad.dev/')
    >>> browser.url
    'http://launchpad.dev/'
    >>> print extract_text(find_tag_by_id(browser.contents, 'logincontrol'))
    Foo Bar...
    >>> raw_cookie = browser.headers['Set-Cookie']
    >>> print raw_cookie
    launchpad...; Domain=.launchpad.dev;...

Even if the browser passes in a cookie, the feeds vhost should not return one.

    >>> browser.open('http://feeds.launchpad.dev/announcements.atom')
    >>> browser.url
    'http://feeds.launchpad.dev/announcements.atom'
    >>> print browser.headers.get('Set-Cookie')
    None

# XXX stub 20060816 bug=56601: We need to test that for https: URLs, the
# secure attribute is set on the cookie.
