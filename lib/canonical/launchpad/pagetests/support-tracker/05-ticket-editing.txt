Editing Tickets
===============

To edit the title and description of ticket, one uses the 'Edit Request'
menu item. You need to be logged in to perform that action:

  >>> anon_browser.open('http://launchpad.dev/products/firefox/+ticket/2')
  >>> anon_browser.getLink('Edit Request').click()
  Traceback (most recent call last):
    ...
  Unauthorized...

  >>> user_browser.open('http://launchpad.dev/products/firefox/+ticket/2')
  >>> user_browser.getLink('Edit Request').click()
  >>> user_browser.url
  '.../products/firefox/+ticket/2/+edit'

When we post the form, we should be redirected back to the ticket page.

  >>> description = (
  ...   "Hi! I'm trying to learn about SVG but I can't get it to work at "
  ...   "all in firefox. Maybe there is a plugin? Help! Thanks. Mark")
  >>> user_browser.getControl('Description').value = description
  >>> summary = "Problem showing the SVG demo on W3C web site"
  >>> user_browser.getControl('Summary').value = summary
  >>> user_browser.getControl('Continue').click()

  >>> user_browser.url
  '.../products/firefox/+ticket/2'

And viewing that page should show the updated information.

  >>> from BeautifulSoup import BeautifulSoup
  >>> soup = BeautifulSoup(user_browser.contents)
  >>> print soup.first('div', 'highlighted').renderContents().strip()
  <p>Hi! I'm trying to learn about SVG but I can't get it to work at
  all in firefox. Maybe there is a plugin? Help! Thanks. Mark</p>
  >>> print soup.first('h1').renderContents()
  Problem showing the SVG demo on W3C web site

You can even modify the title and description of 'Answered' and
'Invalid' tickets:

  >>> user_browser.open('http://launchpad.dev/distros/ubuntu/+ticket/3')
  >>> from BeautifulSoup import BeautifulSoup
  >>> soup = BeautifulSoup(user_browser.contents)
  >>> soup.first('b', text='Status:').next.strip()
  u'Invalid'
  >>> user_browser.getLink('Edit Request')
  <Link...>


Source Package
--------------

Distribution tickets can have a source package associated with them. Any
logged in user can change the ticket source package on the 'Edit Request'
page.

  >>> user_browser.open('http://launchpad.dev/distros/ubuntu/+ticket/5')
  >>> user_browser.getLink('Edit Request').click()
  >>> user_browser.getControl('Source Package').value = 'linux-source-2.6.15'
  >>> user_browser.getControl('Continue').click()

  >>> soup = BeautifulSoup(user_browser.contents)
  >>> print soup.first('b', text='For:').next.strip()
  ubuntu linux-source-2.6.15

Of course, that item doesn't appear on the product tickets:

  >>> user_browser.open('http://launchpad.dev/products/firefox/+ticket/2')
  >>> user_browser.getLink('Edit Request').click()
  >>> user_browser.getControl('Source Package')
  Traceback (most recent call last):
    ...
  LookupError...

Changing Other Metadata
-----------------------

A user with 'launchpad.Admin' privilege (usually the product or
distribution owner) can also change the ticket Assignee, Priority and
edit the Status Whiteboard using the 'Edit Request' page.

  >>> browser.addHeader(
  ...   'Authorization', 'Basic jeff.waugh@ubuntulinux.com:jdub')
  >>> browser.open('http://localhost/distros/ubuntu/+ticket/5')
  >>> browser.getLink('Edit Request').click()

  >>> browser.getControl('Priority').value = ['Wishlist']
  >>> browser.getControl('Assignee').value = 'name16'
  >>> browser.getControl('Status Whiteboard').value = 'Some note'
  >>> browser.getControl('Continue').click()

  >>> soup = BeautifulSoup(browser.contents)
  >>> print soup.first('b', text='Whiteboard:').findNext('td').renderContents()
  Some note
  >>> print soup.first('b', text='Assignee:').findNext('a').renderContents()
  Foo Bar
  >>> print soup.first('b', text='Priority:').next.strip()
  Wishlist

These fields cannot be modified by a non-privileged user:

  >>> user_browser.open('http://localhost/distros/ubuntu/+ticket/5')
  >>> user_browser.getLink('Edit Request').click()
  >>> user_browser.getControl('Priority')
  Traceback (most recent call last):
    ...
  LookupError...
  >>> user_browser.getControl('Assignee')
  Traceback (most recent call last):
    ...
  LookupError...
  >>> user_browser.getControl('Status Whiteboard')
  Traceback (most recent call last):
    ...
  LookupError...
