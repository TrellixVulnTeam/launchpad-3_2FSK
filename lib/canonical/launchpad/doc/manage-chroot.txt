== Manage-Chroot Tool ==

This tool is used for add or update chroots for suites (distroseries
+ pocket) and DistroArchSeriess.

Chroots are compressed files which contains a pristine ubuntu
work-tree, they are used to build packages. When LP is requested to
build "foo in dapper/i386", it needs to use the respective chroot.

This script is based on the IDistroArchrelease.addOrUpdateChroot
method, which is better tested in doc/pocketchroot.txt.


Let's setup the script runner:

  >>> import subprocess
  >>> import os
  >>> import sys
  >>> from canonical.config import config

  >>> script = os.path.join(config.root, "scripts", "ftpmaster-tools",
  ...                       "manage-chroot.py")


Create and populate a temporary file and pretend it is a chroot:

  >>> import tempfile
  >>> filepath = tempfile.mktemp()
  >>> temp_fd = open(filepath, 'w')
  >>> temp_fd.write('fooooooooooo baaaaaaaaaar')
  >>> temp_fd.close()

Adding a new chroot for ubuntu/hoary-security/i386:

  >>> process = subprocess.Popen([sys.executable, script, "-v", "add",
  ...                             "-d", "ubuntu",
  ...                             "-s", "hoary-security",
  ...                             "-a", "i386",
  ...                             "-f", filepath],
  ...                            stdout=subprocess.PIPE,
  ...                            stderr=subprocess.PIPE,)
  >>> stdout, stderr = process.communicate()
  >>> process.returncode
  0
  >>> print stderr
  DEBUG   Intitialising connetion.
  DEBUG   Initialising ChrootManager for 'The Hoary Hedgehog Release for i386 (x86)/SECURITY'
  DEBUG   LibraryFileAlias: ..., 25 bytes, 04a60337a417012f7c51fb56d59d2d0d
  DEBUG   PocketChroot for 'The Hoary Hedgehog Release for i386 (x86)'/SECURITY (1) added.
  INFO    Success.
  <BLANKLINE>


Update the previous chroot (with the same file, just a test):

  >>> process = subprocess.Popen([sys.executable, script, "-v", "update",
  ...                             "-d", "ubuntu",
  ...                             "-s", "hoary-security",
  ...                             "-a", "i386",
  ...                             "-f", filepath],
  ...                            stdout=subprocess.PIPE,
  ...                            stderr=subprocess.PIPE,)
  >>> stdout, stderr = process.communicate()
  >>> process.returncode
  0
  >>> print stderr
  DEBUG   Intitialising connetion.
  DEBUG   Initialising ChrootManager for 'The Hoary Hedgehog Release for i386 (x86)/SECURITY'
  DEBUG   LibraryFileAlias: ..., 25 bytes, 04a60337a417012f7c51fb56d59d2d0d
  DEBUG   PocketChroot for 'The Hoary Hedgehog Release for i386 (x86)'/SECURITY (1) updated.
  INFO    Success.
  <BLANKLINE>


Check the error when requesting to add a chroot for an unknown suite
(<distroseries>-<pocket> term, extensively used in soyuz context):

  >>> process = subprocess.Popen([sys.executable, script, "-v", "add",
  ...                             "-d", "ubuntu",
  ...                             "-s", "hoary-foo",
  ...                             "-a", "i386",
  ...                             "-f", filepath],
  ...                            stdout=subprocess.PIPE,
  ...                            stderr=subprocess.PIPE,)
  >>> stdout, stderr = process.communicate()
  >>> process.returncode
  1
  >>> print stderr
  DEBUG   Intitialising connetion.
  ERROR   Suite not found: 'hoary-foo'
  <BLANKLINE>

Remove the temporary file created by this script

  >>> os.remove(filepath)

Try to add a chroot from a not found path, the script should complain
before changing anything in the DB:

  >>> filepath = os.path.join(config.root, "no-such-file")

  >>> process = subprocess.Popen([sys.executable, script, "-v", "add",
  ...                             "-d", "ubuntu",
  ...                             "-s", "hoary",
  ...                             "-a", "i386",
  ...                             "-f", filepath],
  ...                            stdout=subprocess.PIPE,
  ...                            stderr=subprocess.PIPE,)
  >>> stdout, stderr = process.communicate()
  >>> process.returncode
  1
  >>> print stderr
  DEBUG   Intitialising connetion.
  DEBUG   Initialising ChrootManager for 'The Hoary Hedgehog Release for i386 (x86)/RELEASE'
  ERROR   Could not open: ...no-such-file
  <BLANKLINE>


Retrieve an specified chroot to a given filename, download the file
from librarian and store in the specified file:

  >>> filepath = os.path.join(config.root, "foo")

  >>> process = subprocess.Popen([sys.executable, script, "-v", "get",
  ...                             "-d", "ubuntu",
  ...                             "-s", "hoary-security",
  ...                             "-a", "i386",
  ...                             "-f", filepath],
  ...                            stdout=subprocess.PIPE,
  ...                            stderr=subprocess.PIPE,)
  >>> stdout, stderr = process.communicate()
  >>> process.returncode
  0
  >>> print stderr
  DEBUG   Intitialising connetion.
  DEBUG   Initialising ChrootManager for 'The Hoary Hedgehog Release for i386 (x86)/SECURITY'
  DEBUG   PocketChroot for 'The Hoary Hedgehog Release for i386 (x86)'/SECURITY (1) retrieved.
  DEBUG   Writing to '...foo'.
  INFO    Success.
  <BLANKLINE>


Check if the file is where it was supposed to be:

  >>> os.path.exists(filepath)
  True

Remove it to avoid noise in test tree:

  >>> os.remove(filepath)


Remove an uploaded chroot, invalidate the respective PocketChroot entry:

  >>> process = subprocess.Popen([sys.executable, script, "-v", "remove",
  ...                             "-d", "ubuntu",
  ...                             "-s", "hoary-security",
  ...                             "-a", "i386"],
  ...                            stdout=subprocess.PIPE,
  ...                            stderr=subprocess.PIPE,)
  >>> stdout, stderr = process.communicate()
  >>> process.returncode
  0
  >>> print stderr
  DEBUG   Intitialising connetion.
  DEBUG   Initialising ChrootManager for 'The Hoary Hedgehog Release for i386 (x86)/SECURITY'
  DEBUG   PocketChroot for 'The Hoary Hedgehog Release for i386 (x86)'/SECURITY (1) retrieved.
  DEBUG   PocketChroot for 'The Hoary Hedgehog Release for i386 (x86)'/SECURITY (1) removed.
  INFO    Success.
  <BLANKLINE>


Trying to retrieve a removed/invalidated chroot will fail with proper
message:

  >>> filepath = os.path.join(config.root, "duuh")

  >>> process = subprocess.Popen([sys.executable, script, "-v", "get",
  ...                             "-d", "ubuntu",
  ...                             "-s", "hoary-security",
  ...                             "-a", "i386",
  ...                             "-f", filepath],
  ...                            stdout=subprocess.PIPE,
  ...                            stderr=subprocess.PIPE,)
  >>> stdout, stderr = process.communicate()
  >>> process.returncode
  1
  >>> print stderr
  DEBUG   Intitialising connetion.
  DEBUG   Initialising ChrootManager for 'The Hoary Hedgehog Release for i386 (x86)/SECURITY'
  ERROR   Chroot was deleted.
  <BLANKLINE>

  >>> os.remove(filepath)


We now need to shutdown the Librarian for this next bit. Unfortunately,
we can't use LibrarianLayer.hide() because that will not propagate to
the subprocess.

  >>> from canonical.librarian.ftests.harness import LibrarianTestSetup
  >>> LibrarianTestSetup().tearDown()

Check the behavior with no Librarian instance running:

  >>> filepath = os.path.join(config.root, "COPYING")

  >>> process = subprocess.Popen([sys.executable, script, "-v", "add",
  ...                             "-d", "ubuntu",
  ...                             "-s", "hoary",
  ...                             "-a", "i386",
  ...                             "-f", filepath],
  ...                            stdout=subprocess.PIPE,
  ...                            stderr=subprocess.PIPE,)
  >>> stdout, stderr = process.communicate()
  >>> process.returncode
  1
  >>> print stderr
  DEBUG   Intitialising connetion.
  DEBUG   Initialising ChrootManager for 'The Hoary Hedgehog Release for i386 (x86)/RELEASE'
  ERROR   Librarian upload failed: (111, 'Connection refused')
  <BLANKLINE>

  >>> LibrarianTestSetup().setUp()

