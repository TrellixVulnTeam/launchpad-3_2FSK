= User-to-user direct email contact =

A Launchpad user can contact another Launchpad user directly, even if the
recipient is hiding their email addresses.

    >>> def create_view(sender, recipient, form=None):
    ...     if form is None:
    ...         method = 'GET'
    ...     else:
    ...         method = 'POST'
    ...     return create_initialized_view(
    ...         recipient, '+contactuser',
    ...         form=form, method=method, principal=sender)

For example, let's say No Privileges Person wants to contact Salgado...

    >>> from zope.component import getUtility
    >>> from canonical.launchpad.interfaces.person import IPersonSet
    >>> person_set = getUtility(IPersonSet)
    >>> no_priv = person_set.getByName('no-priv')
    >>> salgado = person_set.getByName('salgado')

...No Priv would start by going to Salgado's +contactuser page.

    >>> from canonical.launchpad.ftests import login
    >>> login(no_priv.preferredemail.email)
    >>> view = create_view(no_priv, salgado)

This contact is allowed.

    >>> print view.label
    Contact Guilherme Salgado
    >>> view.contact_is_allowed
    True

No Priv changes her mind though.

    >>> print view.cancel_url
    http://launchpad.dev/~salgado

No Priv decides, what the heck, let's contact Salgado after all.

    >>> view = create_view(
    ...     no_priv, salgado, {
    ...     'field.field.from_': 'no-priv@canonical.com',
    ...     'field.subject': 'Hello Salgado',
    ...     'field.message': 'Can you tell me about your project?',
    ...     'field.actions.send': 'Send',
    ...     })
    >>> for notification in view.request.notifications:
    ...     print notification.message
    Message sent to Guilherme Salgado

No Priv sends two more messages to Salgado.  Each of these are allowed too.

    >>> view = create_view(
    ...     no_priv, salgado, {
    ...     'field.field.from_': 'no-priv@canonical.com',
    ...     'field.subject': 'Hello Salgado',
    ...     'field.message': 'Can you tell me about your project?',
    ...     'field.actions.send': 'Send',
    ...     })
    >>> for notification in view.request.notifications:
    ...     print notification.message
    Message sent to Guilherme Salgado

    >>> view = create_view(
    ...     no_priv, salgado, {
    ...     'field.field.from_': 'no-priv@canonical.com',
    ...     'field.subject': 'Hello Salgado',
    ...     'field.message': 'Can you tell me about your project?',
    ...     'field.actions.send': 'Send',
    ...     })
    >>> for notification in view.request.notifications:
    ...     print notification.message
    Message sent to Guilherme Salgado

Now however, No Priv had reached her quota for direct user-to-user contact and
is not allowed to send a fourth message today.

    >>> view = create_view(no_priv, salgado)
    >>> view.contact_is_allowed
    False

No Priv can try again later.

    >>> view.next_try
    datetime.datetime(...)
