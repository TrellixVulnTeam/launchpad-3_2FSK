= A person's +editlanguages page =

Carlos is a translator who translates things into Spanish with Rosetta.
He is on Rosetta About page and wants to change his preferred languages.

    >>> browser.addHeader('Authorization', 'Basic carlos@canonical.com:test')
    >>> browser.open('http://launchpad.dev/translations/+about')
    >>> browser.url
    'http://launchpad.dev/translations/+about'

So, he looks for the 'Your preferred languages' portlet for the
'Select Languages...' link, and clicks on that which will take him to
his +editlanguages page.

    >>> portlet = find_portlet(browser.contents, 'Your preferred languages')
    >>> print extract_text(portlet.find('ul'))
    Catalan
    Spanish
    >>> browser.getLink('Select Languages...').click()
    >>> browser.url
    'http://launchpad.dev/~carlos/+editlanguages'
    >>> print extract_text(find_main_content(browser.contents).find('h1'))
    Your language preferences

So far, he has Spanish selected as one of his preferred languages, but
not Welsh. English is checked but it is not a translatable language.

    >>> browser.getControl('Catalan').selected
    True
    >>> browser.getControl('Spanish').selected
    True
    >>> browser.getControl('Welsh').selected
    False
    >>> browser.getControl('English', index=0).selected
    True

Now let's suppose that Carlos decides that he doesn't like Spanish
after all, and that Welsh is a much nicer language. When he adjusts
his preferences, Spanish will no longer be selected, and Welsh will.

    >>> browser.getControl('Spanish').selected = False
    >>> browser.getControl('Welsh').selected = True
    >>> browser.getControl('Save').click()

After he submits the form, he should again be redirected back to
Rosetta's About page. The 'Your preferred languages' portlet displays
his two translatable languages. The page displays two messages
confirming his changes. The 'Your preferred languages' portlet
displays his translatable languages.

    >>> for message in find_tags_by_class(browser.contents, 'message'):
    ...     print message.renderContents()
    Added Welsh to your preferred languages.
    Removed Spanish from your preferred languages.

    # XXX: salgado 2006-11-21 bug 98437:
    # This test is commented out because redirects will not work
    # because the HTTP_REFFERER is localhost.
    #>>> browser.url
    #'http://launchpad.dev/translations/+about'
    >>> browser.open('http://launchpad.dev/translations/+about')
    >>> portlet = find_portlet(browser.contents, 'Your preferred languages')
    >>> print extract_text(portlet.find('ul'))
    Catalan
    Welsh

When a user doesn't have a preferred language set, we determine it
from the user's browser headers. If his browser send us any non-utf8
encoded string in the Accept-Language header, we won't consider that
as a valid language code.

We are also pretending that this request is coming from someone in
Serbia (194.247.192.33), to test country detection.  Proxies add
'X-Forwarded-For' header, which is what the code is handling.

    >>> from zope.testbrowser.testing import Browser
    >>> browser = Browser()
    >>> browser.addHeader('X-Forwarded-For', '194.247.192.33')
    >>> browser.addHeader('Authorization', 'Basic test@canonical.com:test')
    >>> browser.addHeader('Accept-Language', 'pt_br, Espa\xf1ol')
    >>> browser.open('http://launchpad.dev/~name12/+editlanguages')
    >>> portlet = find_tag_by_id(browser.contents, 'portlet-browser-languages')
    >>> print extract_text(portlet)
    Your browser languages
    Portuguese (Brazil)

Now we are checking that the country is properly detected.  Since we
don't have data for languages spoken in Serbia, we get information
about how to contact Rosetta Admins to update it.

    >>> country_portlet = find_portlet(browser.contents,
    ...     'Languages in Serbia and Montenegro')
    >>> print country_portlet.find('li', 'languages')
    None
    >>> print country_portlet.first('a')['href']
    https://answers.launchpad.net/rosetta/

We also have a page under the launchpad root, called +editmylanguages,
with launchpad.AnyPerson as permission. This is the page to which we
direct non-logged in users to edit their preferred languages.

    >>> anon_browser.handleErrors = True
    >>> anon_browser.open('http://launchpad.dev/+editmylanguages')
    >>> anon_browser.url
    'http://launchpad.dev/+editmylanguages/+login'

    >>> anon_browser.open('http://launchpad.dev/+editmylanguages/+login')
    >>> anon_browser.getControl('E-mail address:', index=0).value = (
    ...     'no-priv@canonical.com')
    >>> anon_browser.getControl('Password:').value = 'test'
    >>> anon_browser.getControl(name='loginpage_submit_login').click()
    >>> anon_browser.url
    'http://launchpad.dev/~no-priv/+editlanguages'

For backwards compatibility we keep do a redirect from the old
/rosetta/prefs page to the new one. Note that this is a permanent
redirect, since the old page has been deprecated.

    # XXX Guilherme Salgado 2006-11-22 bugs=72849: 
    # Should use an absolute URL on the Location header here.
    >>> print http(r"""
    ... GET /translations/prefs HTTP/1.1
    ... Host: launchpad.dev
    ... """)
    HTTP/1.1 301 Moved Permanently
    ...
    Location: /+editmylanguages


== Adding languages to teams ==

Team admins may set their team's preferred languages to select the
which languages they support in the Answer Tracker. Sample Person
is the admin for Landscape Developers. He decides he wants the team
to support Spanish questions for Ubuntu, so he sets the team's
preferred languages.

    >>> browser.addHeader('Authorization', 'Basic test@canonical.com:test')
    >>> browser.open('http://launchpad.dev/~landscape-developers')
    >>> browser.title
    'Landscape Developers in Launchpad'

    >>> browser.getLink('Set preferred languages').click()
    >>> print extract_text(find_main_content(browser.contents).find('h1'))
    Landscape Developers's language preferences

    >>> browser.getControl('Spanish').selected = True
    >>> browser.getControl('Save').click()
    >>> for message in find_tags_by_class(browser.contents, 'message'):
    ...     print extract_text(message)
    Added Spanish to Landscape Developers's preferred languages.


== Admins may set a Person's languages ==

Admins can change a user's language settings if needed. Foo Bar, a
Launchpad Admin has a question from No Privileges Person claiming that
he cannot add Esperanto to his languages. Foo Bar visits No Privileges
Person's page to do it himself.

    >>> admin_browser.open('http://launchpad.dev/~no-priv')
    >>> admin_browser.title
    'No Privileges Person in Launchpad'

    >>> admin_browser.getLink('Set preferred languages').click()
    >>> print extract_text(
    ...     find_main_content(admin_browser.contents).find('h1'))
    No Privileges Person's language preferences

    >>> admin_browser.getControl('Esperanto').selected = True
    >>> admin_browser.getControl('Save').click()
    >>> for message in find_tags_by_class(admin_browser.contents, 'message'):
    ...     print extract_text(message)
    Added Esperanto to No Privileges Person's preferred languages.    
