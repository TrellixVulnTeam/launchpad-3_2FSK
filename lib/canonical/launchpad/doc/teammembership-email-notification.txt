= Mail notifications for membership changes =

Whenever a membership status is changed, we should notify the team admins and
the member whose membership changed. There's a few cases where we might want
to notify only the team admins, but in most of the cases we'll be sending two
similar (but not identical) notifications: one for all team admins and another
for the member.

    >>> def by_to_addrs(a, b):
    ...     return cmp(a[1], b[1])

    >>> def setStatus(membership, status, reviewer=None, comment=None):
    ...     """Set the status of the given membership.
    ...
    ...     Also sets the reviewer and comment, calling flush_database_updates
    ...     and transaction.commit after, to ensure the changes are flushed to
    ...     the database.
    ...     """
    ...     membership.setStatus(
    ...         status, reviewer=reviewer, reviewercomment=comment)
    ...     flush_database_updates()
    ...     transaction.commit()

    >>> import email
    >>> from canonical.launchpad.mail import stub
    >>> def pop_notifications():
    ...     stub.test_emails.sort(by_to_addrs)
    ...     notifications = [
    ...         email.message_from_string(raw_message)
    ...         for fromaddr, toaddrs, raw_message in stub.test_emails]
    ...     stub.test_emails = []
    ...     return notifications

    >>> from zope.component import getUtility
    >>> from canonical.launchpad.interfaces import (
    ...     IPersonSet, ITeamMembershipSet)
    >>> from canonical.lp.dbschema import TeamMembershipStatus
    >>> personset = getUtility(IPersonSet)
    >>> membershipset = getUtility(ITeamMembershipSet)
    >>> sabdfl = personset.getByName('sabdfl')
    >>> sampleperson = personset.getByName('name12')
    >>> ubuntu_team = personset.getByName('ubuntu-team')

Now Sample Person proposes himself as a member of the Ubuntu Team. This
generates a notification email only to Ubuntu Team administrators.

    >>> sampleperson.join(ubuntu_team)
    True
    >>> membership = membershipset.getByPersonAndTeam(sampleperson, ubuntu_team)
    >>> membership.status.title
    'Proposed'

    >>> transaction.commit()
    >>> len(stub.test_emails)
    1
    >>> [admins_notification] = pop_notifications()
    >>> print admins_notification['To']
    colin.watson@ubuntulinux.com, foo.bar@canonical.com,
    jeff.waugh@ubuntulinux.com, mark@hbd.com
    >>> admins_notification['Subject']
    'Launchpad: name12 wants to join team ubuntu-team'
    >>> admins_notification['Reply-To']
    'test@canonical.com'
    >>> print admins_notification.get_payload() #doctest: -NORMALIZE_WHITESPACE
    Hello
    <BLANKLINE>
    Sample Person (name12) wants to be a member of Ubuntu Team (ubuntu-
    team), but this is a moderated team, so that membership has to be
    approved.  You can approve, decline or leave it as proposed by following
    the link below.
    <BLANKLINE>
        http://launchpad.dev/~ubuntu-team/+member/name12
    <BLANKLINE>
    Regards,
    The Launchpad team

Declining a proposed member should generate notifications for both the member
and team admins.

    >>> stub.test_emails = []

    # Need to be logged in as a team admin to be able to change memberships of
    # that team.
    >>> login('mark@hbd.com')
    >>> setStatus(membership, TeamMembershipStatus.DECLINED, reviewer=sabdfl)
    >>> len(stub.test_emails)
    2

    >>> admins_notification, member_notification = pop_notifications()
    >>> print admins_notification['To']
    colin.watson@ubuntulinux.com, foo.bar@canonical.com,
    jeff.waugh@ubuntulinux.com, mark@hbd.com
    >>> admins_notification['Subject']
    'Launchpad: Membership change: name12 in ubuntu-team'
    >>> print admins_notification.get_payload() #doctest: -NORMALIZE_WHITESPACE
    Hello,
    <BLANKLINE>
    The membership status of Sample Person (name12) in the team Ubuntu Team
    (ubuntu-team) was changed by Mark Shuttleworth (sabdfl) from Proposed to
    Declined.
    <BLANKLINE>
    <BLANKLINE>
    Regards,
    The Launchpad team

    >>> member_notification['To']
    'test@canonical.com' 
    >>> member_notification['Subject']
    'Launchpad: Membership change: name12 in ubuntu-team'
    >>> print member_notification.get_payload() #doctest: -NORMALIZE_WHITESPACE
    Hello,
    <BLANKLINE>
    The status of your membership in the team Ubuntu Team (ubuntu-team) was
    changed by Mark Shuttleworth (sabdfl) from Proposed to Declined.
    <BLANKLINE>
    <BLANKLINE>
    Regards,
    The Launchpad team


The same goes for approving a proposed member.
    
    >>> daf = getUtility(IPersonSet).getByName('daf')
    >>> daf.join(ubuntu_team)
    True
    >>> daf_membership = membershipset.getByPersonAndTeam(daf, ubuntu_team)
    >>> daf_membership.status.title
    'Proposed'

    # Remove notification of daf's membership pending approval from
    # stub.test_emails
    >>> transaction.commit()
    >>> [notification] = pop_notifications()
    >>> notification['Subject']
    'Launchpad: daf wants to join team ubuntu-team'

    >>> setStatus(daf_membership, TeamMembershipStatus.APPROVED, 
    ...           reviewer=sabdfl, comment='This is a nice guy; I like him')
    >>> stub.test_emails.sort(by_to_addrs)
    >>> len(stub.test_emails)
    2
    >>> member_notification, admins_notification = pop_notifications()
    >>> admins_notification['To']
    'daf@canonical.com'
    >>> admins_notification['Subject']
    'Launchpad: Membership change: daf in ubuntu-team'
    >>> print admins_notification.get_payload() #doctest: -NORMALIZE_WHITESPACE
    Hello,
    <BLANKLINE>
    The status of your membership in the team Ubuntu Team (ubuntu-team) was
    changed by Mark Shuttleworth (sabdfl) from Proposed to Approved.
    <BLANKLINE>
    Comment:
    This is a nice guy; I like him
    <BLANKLINE>
    <BLANKLINE>
    Regards,
    The Launchpad team

    >>> print member_notification['To']
    colin.watson@ubuntulinux.com, foo.bar@canonical.com,
    jeff.waugh@ubuntulinux.com, mark@hbd.com
    >>> member_notification['Subject']
    'Launchpad: Membership change: daf in ubuntu-team'
    >>> print member_notification.get_payload() #doctest: -NORMALIZE_WHITESPACE
    Hello,
    <BLANKLINE>
    The membership status of Dafydd Harries (daf) in the team Ubuntu Team
    (ubuntu-team) was changed by Mark Shuttleworth (sabdfl) from Proposed to
    Approved.
    <BLANKLINE>
    Comment:
    This is a nice guy; I like him
    <BLANKLINE>
    <BLANKLINE>
    Regards,
    The Launchpad team


The same for deactivating a membership.

    >>> stub.test_emails = []
    >>> setStatus(daf_membership, TeamMembershipStatus.DEACTIVATED,
    ...           reviewer=sabdfl)
    >>> stub.test_emails.sort(by_to_addrs)
    >>> len(stub.test_emails)
    2
    >>> admins_notification, member_notification = pop_notifications()
    >>> print admins_notification['To']
    colin.watson@ubuntulinux.com, foo.bar@canonical.com,
    jeff.waugh@ubuntulinux.com, mark@hbd.com
    >>> admins_notification['Subject']
    'Launchpad: Membership change: daf in ubuntu-team'
    >>> print admins_notification.get_payload() #doctest: -NORMALIZE_WHITESPACE
    Hello,
    <BLANKLINE>
    The membership status of Dafydd Harries (daf) in the team Ubuntu Team
    (ubuntu-team) was changed by Mark Shuttleworth (sabdfl) from Approved to
    Deactivated.
    <BLANKLINE>
    <BLANKLINE>
    Regards,
    The Launchpad team

    >>> member_notification['To']
    'daf@canonical.com'
    >>> member_notification['Subject']
    'Launchpad: Membership change: daf in ubuntu-team'
    >>> print member_notification.get_payload() #doctest: -NORMALIZE_WHITESPACE
    Hello,
    <BLANKLINE>
    The status of your membership in the team Ubuntu Team (ubuntu-team) was
    changed by Mark Shuttleworth (sabdfl) from Approved to Deactivated.
    <BLANKLINE>
    <BLANKLINE>
    Regards,
    The Launchpad team


== Some special cases ==

When creating a new team, the owner has his membership's status changed from
approved to admin, but he won't get a notification of that.

    >>> team = personset.newTeam(sabdfl, 'testteam', 'Test')
    >>> transaction.commit()
    >>> len(stub.test_emails)
    0

    # Other tests expect an empty stub.test_emails, but if this one above
    # fails, I don't want a non-empty stub.test_emails to cause the tests
    # below to fail too.
    >>> stub.test_emails = []

If cprov is made an administrator of ubuntu_team, he'll only get one email
notification.

    >>> cprov = personset.getByName('cprov')
    >>> cprov_membership = membershipset.getByPersonAndTeam(cprov, ubuntu_team)
    >>> setStatus(
    ...     cprov_membership, TeamMembershipStatus.ADMIN, reviewer=sabdfl)
    >>> len(stub.test_emails)
    2
    >>> member_notification, admins_notification = pop_notifications()
    >>> print admins_notification['To']
    colin.watson@ubuntulinux.com, foo.bar@canonical.com,
    jeff.waugh@ubuntulinux.com, mark@hbd.com
    >>> member_notification['To']
    'celso.providelo@canonical.com'

If a team admin changes his own membership, the notification sent will clearly
say that the change was performed by the user himself, and it will only be
sent to the team administrators.

    >>> jdub = getUtility(IPersonSet).getByName('jdub')
    >>> jdub_membership = membershipset.getByPersonAndTeam(jdub, ubuntu_team)
    >>> setStatus(jdub_membership, TeamMembershipStatus.APPROVED,
    ...           reviewer=jdub)
    >>> len(stub.test_emails)
    1
    >>> [admins_notification] = pop_notifications()
    >>> print admins_notification['To']
    celso.providelo@canonical.com, colin.watson@ubuntulinux.com,
    foo.bar@canonical.com, mark@hbd.com
    >>> admins_notification['Subject']
    'Launchpad: Membership change: jdub in ubuntu-team'
    >>> print admins_notification.get_payload() #doctest: -NORMALIZE_WHITESPACE
    Hello,
    <BLANKLINE>
    The membership status of Jeff Waugh (jdub) in the team Ubuntu Team
    (ubuntu-team) was changed by the user himself from Administrator to
    Approved.
    <BLANKLINE>
    <BLANKLINE>
    Regards,
    The Launchpad team


When a person is added as a member of a team by one of that team's
administrators, an email is sent to all team administrators and to the new
member.

    >>> marilize = personset.getByName('marilize')
    >>> ubuntu_team.addMember(marilize, reviewer=cprov)
    >>> transaction.commit()
    >>> len(stub.test_emails)
    2
    >>> admins_notification, member_notification = pop_notifications()

    >>> member_notification['To']
    'marilize@hbd.com'
    >>> print member_notification.get_payload()
    Hello,
    <BLANKLINE>
    Celso Providelo (cprov) added you as a member of Ubuntu Team (ubuntu-
    team).
    <BLANKLINE>
    Regards,
    The Launchpad team

    >>> print admins_notification['To']
    colin.watson@ubuntulinux.com, mark@hbd.com, celso.providelo@canonical.com,
    foo.bar@canonical.com
    >>> print admins_notification.get_payload()
    Hello,
    <BLANKLINE>
    Marilize Coetzee (marilize) has been added as a member of Ubuntu Team
    (ubuntu-team) by Celso Providelo (cprov). Follow the link below for more
    details.
    <BLANKLINE>
        http://launchpad.dev/~ubuntu-team/+member/marilize
    <BLANKLINE>
    Regards,
    The Launchpad team
    <BLANKLINE>


If member is actually a team, we use a different email template because in
that case it wouldn't make sense to talk about "your membership" or things
like that.

    >>> mirror_admins = personset.getByName('ubuntu-mirror-admins')
    >>> from canonical.launchpad.helpers import contactEmailAddresses
    >>> contactEmailAddresses(mirror_admins)
    set(['mark@hbd.com', 'karl@canonical.com'])
    >>> cprov = getUtility(IPersonSet).getByName('cprov')
    >>> ubuntu_team.addMember(mirror_admins, reviewer=cprov)
    >>> transaction.commit()
    >>> len(stub.test_emails)
    2
    >>> admins_notification, member_notification = pop_notifications()
    >>> print admins_notification['To']
    colin.watson@ubuntulinux.com, celso.providelo@canonical.com,
    foo.bar@canonical.com
    >>> print admins_notification.get_payload()
    Hello,
    <BLANKLINE>
    Mirror Administrators (ubuntu-mirror-admins) has been added as
    a member of Ubuntu Team (ubuntu-team) by Celso Providelo (cprov).
    Follow the link below for more details.
    <BLANKLINE>
        http://launchpad.dev/~ubuntu-team/+member/ubuntu-mirror-admins
    <BLANKLINE>
    Regards,
    The Launchpad team
    <BLANKLINE>

    >>> member_notification['To']
    'mark@hbd.com,karl@canonical.com'
    >>> print member_notification.get_payload()
    Hello,
    <BLANKLINE>
    Celso Providelo (cprov) added Mirror Administrators (ubuntu-mirror-
    admins) (which you are a member of) as a member of Ubuntu Team (ubuntu-
    team).
    <BLANKLINE>
    Regards,
    The Launchpad team

    >>> mirror_admins_membership = membershipset.getByPersonAndTeam(
    ...     mirror_admins, ubuntu_team)
    >>> setStatus(mirror_admins_membership, TeamMembershipStatus.DEACTIVATED,
    ...           reviewer=sabdfl)
    >>> len(stub.test_emails)
    2
    >>> member_notification, admins_notification = pop_notifications()
    >>> admins_notification['To']
    'mark@hbd.com,karl@canonical.com'

    >>> print member_notification['To']
    celso.providelo@canonical.com, colin.watson@ubuntulinux.com,
    foo.bar@canonical.com
    >>> print member_notification.get_payload() #doctest: -NORMALIZE_WHITESPACE
    Hello,
    <BLANKLINE>
    The membership status of Mirror Administrators (ubuntu-mirror-admins) in
    the team Ubuntu Team (ubuntu-team) was changed by Mark Shuttleworth
    (sabdfl) from Approved to Deactivated.
    <BLANKLINE>
    <BLANKLINE>
    Regards,
    The Launchpad team
