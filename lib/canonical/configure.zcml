<!-- Copyright 2009 Canonical Ltd.  This software is licensed under the
     GNU Affero General Public License version 3 (see the file LICENSE).
-->

<configure
    xmlns="http://namespaces.zope.org/zope"
    xmlns:browser="http://namespaces.zope.org/browser"
    xmlns:zcml="http://namespaces.zope.org/zcml"
    xmlns:i18n="http://namespaces.zope.org/i18n"
    i18n_domain="canonical">

    <includeOverrides
        package="canonical.launchpad.webapp"
        file="meta-overrides.zcml" />
    <include package="canonical.launchpad" file="permissions.zcml" />
    <include package="canonical.launchpad.webapp" file="meta.zcml" />
    <include package="lazr.restful" file="meta.zcml" />
    <include package="lp.services.database" />
    <include package="lp.services.inlinehelp" file="meta.zcml" />
    <include package="lp.services.openid" />
    <include package="lp.services.job" />
    <include package="lp.services.memcache" />
    <include package="lp.services.scripts" />
    <include package="lp.services.worlddata" />
    <include package="lazr.uri" />
    <include package="canonical.librarian" />

    <interface
        name="launchpad"
        interface="canonical.launchpad.layers.LaunchpadLayer"
        type="zope.publisher.interfaces.browser.IBrowserSkinType"
        />

    <!-- Set via overrides -->

    <browser:defaultSkin
        name="launchpad" />

    <!-- The default Zope 3 configuration of the SimpleComponentTraverser is
        that it applies to any object that provides Interface.
        This excludes objects that we're using just as instances of classes
        without providing any interfaces.
        -->
    <view
        for="*"
        type="zope.publisher.interfaces.browser.IBrowserRequest"
        provides="zope.publisher.interfaces.browser.IBrowserPublisher"
        factory="zope.app.publication.traversers.SimpleComponentTraverser"
        permission="zope.Public"
        />

    <!-- Protocol errors (eg. HTTP 405 or 415 errors) should be published
         with a minimalist template. -->
    <browser:page
        for="canonical.launchpad.webapp.interfaces.ILaunchpadProtocolError"
        class="canonical.launchpad.webapp.error.ProtocolErrorView"
        template="launchpad/templates/protocol-error.pt"
        name="index.html"
        permission="zope.Public"
        />


    <!-- This is an index.html view on the root object.
        The root object is not ever published itself.  Only its views are.
        -->

    <browser:page
        for="canonical.launchpad.interfaces.ILaunchpadRoot"
        class="lp.registry.browser.root.LaunchpadRootIndexView"
        name="index.html"
        template="launchpad/templates/root-index.pt"
        permission="zope.Public"
        />

    <browser:page
        for="canonical.launchpad.interfaces.ILaunchpadRoot"
        class="lp.registry.browser.featuredproject.FeaturedProjectsView"
        name="+featuredprojects"
        template="launchpad/templates/root-featuredprojects.pt"
        permission="launchpad.Admin"
        />

    <!-- The following directives set up root front pages for the different
         virtual host layers.  The directives come in pairs.
         The separate registration for the resources namespace (@@) is needed
         because otherwise the lookup for /@@/ will fail because the
         layer-specific defaultView directive also registers the 
         default view name as an unnamed adapter.
         -->
      -->
    <!-- virtual host: blueprints -->
    <browser:defaultView
        for="canonical.launchpad.interfaces.ILaunchpadRoot"
        name="specs"
        layer="canonical.launchpad.layers.BlueprintsLayer"
        />
    <browser:page
        name=""
        for="canonical.launchpad.interfaces.ILaunchpadRoot"
        class="canonical.launchpad.browser.launchpad.LaunchpadImageFolder"
        permission="zope.Public"
        layer="canonical.launchpad.layers.BlueprintsLayer"
        />

    <!-- virtual host: code -->
    <browser:defaultView
        for="canonical.launchpad.interfaces.ILaunchpadRoot"
        name="+code"
        layer="canonical.launchpad.layers.CodeLayer"
        />
    <browser:page
        name=""
        for="canonical.launchpad.interfaces.ILaunchpadRoot"
        class="canonical.launchpad.browser.launchpad.LaunchpadImageFolder"
        permission="zope.Public"
        layer="canonical.launchpad.layers.CodeLayer"
        />

    <!-- virtual host: translations -->
    <browser:defaultView
        for="canonical.launchpad.interfaces.ILaunchpadRoot"
        name="translations"
        layer="canonical.launchpad.layers.TranslationsLayer"
        />
    <browser:page
        name=""
        for="canonical.launchpad.interfaces.ILaunchpadRoot"
        class="canonical.launchpad.browser.launchpad.LaunchpadImageFolder"
        permission="zope.Public"
        layer="canonical.launchpad.layers.TranslationsLayer"
        />

    <!-- virtual host: bugs -->
    <browser:defaultView
        for="canonical.launchpad.interfaces.ILaunchpadRoot"
        name="bugs"
        layer="canonical.launchpad.layers.BugsLayer"
        />
    <browser:page
        name=""
        for="canonical.launchpad.interfaces.ILaunchpadRoot"
        class="canonical.launchpad.browser.launchpad.LaunchpadImageFolder"
        permission="zope.Public"
        layer="canonical.launchpad.layers.BugsLayer"
        />

    <!-- virtual host: answers -->
    <browser:defaultView
        for="canonical.launchpad.interfaces.ILaunchpadRoot"
        name="questions"
        layer="canonical.launchpad.layers.AnswersLayer"
        />
    <browser:page
        name=""
        for="canonical.launchpad.interfaces.ILaunchpadRoot"
        class="canonical.launchpad.browser.launchpad.LaunchpadImageFolder"
        permission="zope.Public"
        layer="canonical.launchpad.layers.AnswersLayer"
        />

    <include package="canonical.widgets" />
    <include package="canonical.launchpad" />
    <include package="canonical.lazr" />
    <include zcml:condition="installed canonical.shipit"
             package="canonical.shipit" />
    <include zcml:condition="installed canonical.signon"
             package="canonical.signon" />

</configure>
