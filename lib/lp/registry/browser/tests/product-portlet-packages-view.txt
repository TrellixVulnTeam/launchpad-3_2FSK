+portlet-packages
-----------------

When the product is not linked to a source package in Ubuntu the
+portlet-packages will show suggestions on potential matches and ask
the user to make the connection.

Create a helper to update the distribution source package cache, which
does not happen automatically.

    >>> from canonical.launchpad.testing.pages import find_tag_by_id
    >>> from canonical.launchpad.testing.pages import extract_text
    >>> from canonical.launchpad.interfaces.launchpad import (
    ...     ILaunchpadCelebrities)
    >>> from lp.registry.interfaces.product import IProductSet
    >>> from lp.registry.interfaces.sourcepackagename import (
    ...     ISourcePackageNameSet)

    >>> import transaction
    >>> from canonical.launchpad.scripts import QuietFakeLogger
    >>> logger = QuietFakeLogger()
    >>> from canonical.testing.layers import reconnect_stores
    >>> from canonical.config import config
    >>> def updateCache():
    ...     # Switch to the statistician user who is the only user with
    ...     # write permission to the source package cache tables.
    ...     transaction.commit()
    ...     reconnect_stores(config.statistician.dbuser)
    ...     ubuntu = getUtility(ILaunchpadCelebrities).ubuntu
    ...     updated = ubuntu.updateCompleteSourcePackageCache(
    ...         archive=ubuntu.main_archive, log=logger, ztm=transaction)
    ...     transaction.commit()
    ...     reconnect_stores('launchpad')
    ...     # Get ubuntu, our product, and the sourcepackage name again
    ...     # since the transaction changed.
    ...     ubuntu = getUtility(ILaunchpadCelebrities).ubuntu
    ...     product = getUtility(IProductSet)['bingo']
    ...     spn = getUtility(ISourcePackageNameSet)['bingo']
    ...     login(ANONYMOUS)
    ...     return (ubuntu, product, spn)


Let's create a test project.

    >>> product = factory.makeProduct(name="bingo")
    >>> login_person(product.owner)
    >>> view = create_initialized_view(
    ...     product, name="+portlet-packages",
    ...     principal=product.owner)
    >>> print view.suggestions
    []

No distribution source packages match so the user is shown an
appropriate message asking to suggest a match.

    >>> content = find_tag_by_id(view.render(), 'portlet-packages')
    >>> print extract_text(content)
    All packages
    Packages in Ubuntu
    Launchpad doesn't know which Ubuntu packages this project
    provides. Links from distribution packages to upstream projects
    let distribution and upstream maintainers share bugs, patches, and
    translations efficiently.
    There are no unlinked source packages that are a good match. Can you suggest one?
    Link to Ubuntu package


A distribution source package in a distribution other than ubuntu will
not be suggested.

    >>> spn = factory.makeSourcePackageName(name="bingo")
    >>> distro_package = factory.makeDistributionSourcePackage(
    ...     sourcepackagename=spn)
    >>> spph = factory.makeSourcePackagePublishingHistory(
    ...     sourcepackagename=spn)
    >>> (ubuntu, product, spn) = updateCache()
    >>> view = create_initialized_view(
    ...     product, name="+portlet-packages",
    ...     principal=product.owner)
    >>> print view.suggestions
    []

A source package that does NOT have a publishing history
for the current Ubuntu series will NOT be suggested.

    >>> warty = ubuntu.getSeries('warty')
    >>> warty == ubuntu.currentseries
    False
    >>> spph = factory.makeSourcePackagePublishingHistory(
    ...     sourcepackagename=spn, distroseries=warty)
    >>> (ubuntu, product, spn) = updateCache()
    >>> view = create_initialized_view(
    ...     product, name="+portlet-packages",
    ...     principal=product.owner)
    >>> for dsp in view.suggestions:
    ...     print dsp.name

A source package that does have a publishing history for the current
Ubuntu series will be suggested.

    >>> spph = factory.makeSourcePackagePublishingHistory(
    ...     sourcepackagename=spn, distroseries=ubuntu.currentseries)
    >>> (ubuntu, product, spn) = updateCache()
    >>> view = create_initialized_view(
    ...     product, name="+portlet-packages",
    ...     principal=product.owner)
    >>> for dsp in view.suggestions:
    ...     print dsp.name
    bingo

And the user is presented with a form to select the distribution
source package.

    >>> content = find_tag_by_id(view.render(), 'portlet-packages')

    >>> print extract_text(content)
    All packages
    Packages in Ubuntu
    Launchpad doesn't know which Ubuntu packages this project
    provides. Links from distribution packages to upstream projects
    let distribution and upstream maintainers share bugs, patches, and
    translations efficiently.
    Ubuntu packages:
    bingo...

A distribution series with a matching name in the Ubuntu current
series will be suggested.

    >>> distro_package = factory.makeDistributionSourcePackage(
    ...     sourcepackagename=spn, distribution=ubuntu)
    >>> spph = factory.makeSourcePackagePublishingHistory(
    ...     sourcepackagename=spn, distroseries=ubuntu.currentseries)
    >>> (ubuntu, product, spn) = updateCache()
    >>> view = create_initialized_view(
    ...     product, name="+portlet-packages",
    ...     principal=product.owner)
    >>> for dsp in view.suggestions:
    ...     print dsp.name
    bingo

If multiple source packages match they will all be displayed.

    >>> spn = factory.makeSourcePackageName(name="ba-bingo")
    >>> distro_package = factory.makeDistributionSourcePackage(
    ...     sourcepackagename=spn, distribution=ubuntu)
    >>> spph = factory.makeSourcePackagePublishingHistory(
    ...     sourcepackagename=spn, distroseries=ubuntu.currentseries)
    >>> (ubuntu, product, spn) = updateCache()
    >>> view = create_initialized_view(
    ...     product, name="+portlet-packages",
    ...     principal=product.owner)
    >>> for dsp in view.suggestions:
    ...     print dsp.name
    bingo
    ba-bingo

    >>> content = find_tag_by_id(view.render(), 'portlet-packages')
    >>> print extract_text(content)
    All packages
    Packages in Ubuntu
    Launchpad doesn't know which Ubuntu packages this project
    provides. Links from distribution packages to upstream projects
    let distribution and upstream maintainers share bugs, patches, and
    translations efficiently.
    Ubuntu packages:
    bingo
    ba-bingo...

If a package matches by name but is already linked to an Ubuntu
package then it will not be shown as one of the suggestions.

    >>> new_product = factory.makeProduct(name="not-bingo")
    >>> product_series = new_product.development_focus
    >>> babingo_spn = getUtility(ISourcePackageNameSet)['ba-bingo']
    >>> pkg = product_series.setPackaging(
    ...     ubuntu.currentseries,
    ...     babingo_spn, product.owner)
    >>> (ubuntu, product, spn) = updateCache()
    >>> view = create_initialized_view(
    ...     product, name="+portlet-packages",
    ...     principal=product.owner)
    >>> for dsp in view.suggestions:
    ...     print dsp.name
    bingo
