= "Remove Translations By" script =

Use scripts/remove-translations-by.py to delete selected
TranslationMessages from the database.  This is useful for mislicensed
translations, but also for ones submitted in the wrong language, or in
bad faith, or all messages in a specific POFile, and so on.

    >>> script = "scripts/rosetta/remove-translations-by.py"
    >>> login('foo.bar@canonical.com')
    >>> factory = LaunchpadObjectFactory()

In this example, we have a template with Dutch and German translations.

    >>> nl_pofile = factory.makePOFile('nl')
    >>> potemplate = nl_pofile.potemplate
    >>> de_pofile = factory.makePOFile('de', potemplate=potemplate)
    >>> owner = potemplate.owner

    >>> from datetime import datetime
    >>> from pytz import timezone
    >>> def set_translation(message, pofile, text):
    ...     """Set text to be a translation for message in pofile."""
    ...     return message.updateTranslation(
    ...         pofile, pofile.potemplate.owner, {0: text},
    ...         is_imported=False,
    ...         lock_timestamp=datetime.now(timezone('UTC')))

    >>> def print_pofile_contents(pofile):
    ...     """Return sorted list of (singular) translations in pofile."""
    ...     contents = sorted(
    ...         message.msgstr0.translation
    ...         for message in pofile.translation_messages
    ...         if message.msgstr0 is not None)
    ...     for item in contents:
    ...         print item


== Running the script==

Most options that specify which messages to delete conjunctively
constrain the deletion.  In other words, add options to make the
deletion more specific.  In principle, passing no options at all would
mean "delete absolutely all TranslationMessages."

The "id" option may be repeated to specify the ids of multiple messages
to be deleted.  (But again, they are deleted only if they match all
criteria).

    >>> from canonical.launchpad.ftests.script import run_script
    >>> from canonical.launchpad.interfaces import RosettaTranslationOrigin
    >>> from storm.store import Store

    >>> message = factory.makePOTMsgSet(
    ...     potemplate, "My goose is undercooked.")

    >>> nl_message = set_translation(
    ...     message, nl_pofile, "Maar dan in het Nederlands.")
    >>> nl_message.is_current
    True
    >>> nl_message.is_imported
    False
    >>> print nl_message.potmsgset.msgid_singular.msgid
    My goose is undercooked.
    >>> nl_message.origin == RosettaTranslationOrigin.ROSETTAWEB
    True

    >>> de_message = set_translation(
    ...     message, de_pofile, "Und jetzt auf deutsch.")
    >>> spare_message = factory.makePOTMsgSet(
    ...     potemplate, "Unrelated notice #931")
    >>> nl_spare = set_translation(spare_message, nl_pofile, "Bericht 931")
    >>> de_spare = set_translation(spare_message, de_pofile, "Nachricht 931")

    >>> print_pofile_contents(nl_pofile)
    Bericht 931
    Maar dan in het Nederlands.

    >>> print_pofile_contents(de_pofile)
    Nachricht 931
    Und jetzt auf deutsch.

    >>> options = [
    ...     '-vvv',
    ...     '--submitter', nl_message.submitter.name,
    ...     '--reviewer', nl_message.reviewer.name,
    ...     '--id', str(1),
    ...     '--id', str(nl_message.id),
    ...     '--id', str(2),
    ...     '--potemplate', str(potemplate.id),
    ...     '--not-language',
    ...     '--language', 'de',
    ...     '--is-current', 'true',
    ...     '--is-imported', 'false',
    ...     '--msgid', "My goose is undercooked.",
    ...     '--origin', str(RosettaTranslationOrigin.ROSETTAWEB.value),
    ...     '--force',
    ...     ]

    >>> Store.of(potemplate).commit()
    >>> (returncode, out, err) = run_script(script, args=options)

    # We're going to inspect these POFiles later; make sure we're not
    # gazing at an old cached copy from before the removal.
    >>> from canonical.launchpad.ftests import sync
    >>> sync(nl_pofile)
    >>> sync(de_pofile)

    >>> returncode
    0

The long list of matching options we gave above indicated exactly 1
message.

    >>> print err
    DEBUG '...' has id ...
    DEBUG '...' has id ...
    DEBUG Executing SQL: ...
    INFO Deleting 1 message(s).

Combining the --language-code option with --not-language inverts the
language match: delete messages in any language except the given one.
This can be useful in cases where files with the same translator are
uploaded for several incorrect languages.

In this case, the only other language to delete from is Dutch.  We see
the same messages as before, minus one Dutch one.

    >>> print_pofile_contents(nl_pofile)
    Bericht 931

    >>> print_pofile_contents(de_pofile)
    Nachricht 931
    Und jetzt auf deutsch.


== Safety net ==

There is one drawback to the way the matching options work: it's easy
to match too many translations.  In the extreme case, running the script
without arguments would mean "delete all translation messages in the
entire database."  Probably not what you want.

For that reason the script has a built-in safety net.  It refuses to run
if it doesn't think its arguments are specific enough.

    >>> (returncode, out, err) = run_script(script)
    >>> returncode == 0
    False

    >>> print "Output was: %s" % err
    Output was: ... Refusing unsafe deletion...
