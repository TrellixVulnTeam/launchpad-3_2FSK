= The macro: TALES namespace =

Launchpad has a 'macro:' TALES namespace that offers controls over the
layout of the page.

    >>> class FakeView(object):
    ...     pass

Templates will start by specifying the kind of layout they use. That's
done by using the 'macro:page' traversal. That expression returns the
master macro from the main_template.pt and sets on the view the layout
it's using. It will be usually be used with following METAL fragment:

    <html metal:use-macro="view/macro:page/default" />


    >>> from canonical.launchpad.ftests import test_tales
    >>> view = FakeView()

    # Return value is the compiled macro expression.
    >>> test_tales('view/macro:page/default', view=view)
    [('version', ...]

The pagetype is registered in the __pagetype__ attribute.

    >>> view.__pagetype__
    'default'

If the pagetype isn't defined, a TraversalError is raised.

    >>> test_tales('view/macro:page/not-defined', view=FakeView())
    Traceback (most recent call last):
      ...
    TraversalError: 'unknown pagetype: not-defined'

The 'macro:pagehas' can then be used to test for features that should be
rendered in the layout.

    >>> test_tales('view/macro:pagehas/applicationtabs', view=view)
    True

    >>> test_tales('view/macro:pagehas/portlets', view=view)
    True

    >>> test_tales('view/macro:pagehas/actionsmenu', view=view)
    True

    >>> test_tales('view/macro:pagehas/heading', view=view)
    False

For the transition to the new 2.0 inline navigation, there is also a
macro:show_actions_menu expression that determines if the actions
portlet navigation layout should be used. That expression is True when
running in development mode and the pagetype has 'navigationtabs'.

So for the 'default' page type, the actions portlet will always be
shown:

    >>> from canonical.config import config
    >>> config.devmode
    True

    >>> test_tales('view/macro:pagehas/actionsmenu', view=view)
    True

    >>> test_tales('view/macro:pagehas/navigationtabs', view=view)
    False

    >>> test_tales('view/macro:show_actions_menu', view=view)
    True

The 'default2.0' pagetype will show the actions menu only when not in
development mode:

    >>> macro = test_tales('view/macro:page/default2.0', view=view)

    >>> test_tales('view/macro:pagehas/actionsmenu', view=view)
    True
    >>> test_tales('view/macro:pagehas/navigationtabs', view=view)
    True

    >>> test_tales('view/macro:show_actions_menu', view=view)
    False

    >>> config.devmode = False
    >>> test_tales('view/macro:show_actions_menu', view=view)
    True

    >>> config.devmode = True

But if the layout doesn't require the actions menu, that expression will
be False.

    >>> macro = test_tales('view/macro:page/defaultnomenu', view=view)

    >>> test_tales('view/macro:pagehas/actionsmenu', view=view)
    False
    >>> test_tales('view/macro:pagehas/navigationtabs', view=view)
    False

    >>> test_tales('view/macro:show_actions_menu', view=view)
    False

