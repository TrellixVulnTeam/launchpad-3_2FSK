========================================
Logging in using the TestOpenID provider
========================================

A user with an existing account may log into Launchpad using the OpenID
provider available on testopenid.launchpad.dev.

First we will set up the helper view that lets us test the final
portion of the authentication process:

    >>> from openid.consumer.consumer import Consumer
    >>> from openid.fetchers import setDefaultFetcher
    >>> from openid.store.memstore import MemoryStore
    >>> from lp.testopenid.testing.helpers import (
    ...     complete_from_browser, make_identifier_select_endpoint,
    ...     PublisherFetcher)
    >>> setDefaultFetcher(PublisherFetcher())

The authentication process is started by the relying party issuing a
checkid_setup request, sending the user to Launchpad:

    >>> openid_store = MemoryStore()
    >>> consumer = Consumer(session={}, store=openid_store)

    >>> request = consumer.beginWithoutDiscovery(
    ...     make_identifier_select_endpoint())
    >>> browser.open(request.redirectURL(
    ...     'http://testopenid.launchpad.dev/',
    ...     'http://testopenid.launchpad.dev/+echo'))

At this point, the user is presented with a login form:

    >>> print browser.title
    Login

As the user already has an account, they can enter their email address and
password.  If the password does not match the given email address, an error is
shown:

    >>> browser.getControl(name='field.email').value = 'mark@example.com'
    >>> browser.getControl(name='field.password').value = 'not the password'
    >>> browser.getControl('Continue').click()
    >>> print browser.title
    Login
    >>> for tag in find_tags_by_class(browser.contents, 'error'):
    ...     print extract_text(tag)
    There is 1 error.
    Incorrect password for the provided email address.

If the email address and password match, the user is logged in and returned to
the relying party, with the user's identity URL:

    >>> browser.getControl(name='field.password').value = 'test'
    >>> browser.getControl('Continue').click()
    >>> print browser.url
    http://testopenid.launchpad.dev/+echo?...
    >>> info = complete_from_browser(consumer, browser)
    >>> print info.status
    success
    >>> print info.endpoint.claimed_id
    http://testopenid.launchpad.dev/+id/mark_oid

    # Clean up the changes we did to the openid module.
    >>> setDefaultFetcher(None)
