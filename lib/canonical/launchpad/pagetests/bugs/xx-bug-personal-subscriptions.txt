= Personal Subscriptions =

Users can subscribe to bugs reported in Launchpad, via the "Subscribe" link
in the actions portlet.

  >>> from canonical.launchpad.ftests.bug import (
  ...     print_direct_subscribers, print_indirect_subscribers)

  >>> browser = setupBrowser(auth='Basic foo.bar@canonical.com:test')
  >>> browser.open('http://bugs.launchpad.dev/firefox/+bug/1')
  >>> browser.url
  'http://bugs.launchpad.dev/firefox/+bug/1'

  >>> subscribe_link = browser.getLink('Subscribe')
  >>> subscribe_link.text
  'Subscribe'

Clicking the link brings you to the subscription page, from which the
subscription link is also visible.

  >>> subscribe_link.click()

  >>> subscription_widget = browser.getControl(name='field.subscription')
  >>> subscription_widget.options
  ['name16']
  >>> subscription_widget.value
  ['name16']

  >>> submit = browser.getControl('Continue')

Clicking "Continue" subscribes the user to the bug, and tells the user
this.

  >>> submit.click()

  >>> browser.url
  'http://bugs.launchpad.dev/firefox/+bug/1/'

  >>> for tag in find_tags_by_class(browser.contents, "informational message"):
  ...   print tag.renderContents()
  You have been subscribed to this bug.

  >>> print_direct_subscribers(browser.contents)
  Foo Bar (Subscribed themselves)
  Sample Person (Subscribed by Launchpad Janitor)
  Steve Alexander (Subscribed by Launchpad Janitor)

The "Subscribe" link now says "Unsubscribe".

  >>> subscribe_link = browser.getLink('Unsubscribe')
  >>> subscribe_link.text
  'Unsubscribe'
  >>> subscribe_link.click()
  >>> print browser.title
  Bug #1 - Subscription options
  >>> browser.url
  'http://bugs.launchpad.dev/firefox/+bug/1/+subscribe'

Clicking the "Continue" button from the +subscribe page will unsubscribe
the user this time, and inform the user.

  >>> subscription_widget.value
  ['name16']
  >>> submit = browser.getControl('Continue')
  >>> submit.click()

  >>> browser.url
  'http://bugs.launchpad.dev/firefox/+bug/1/'

  >>> for tag in find_tags_by_class(browser.contents, 'informational message'):
  ...   print tag.renderContents()
  You have been unsubscribed from this bug.

  >>> subscribe_link = browser.getLink('Subscribe')
  >>> subscribe_link.text
  'Subscribe'

Users can unsubscribe teams to which they belong. Let's demonstrate by
first subscribing one of Foo Bar's teams.

  >>> browser.getLink('Subscribe someone else').click()
  >>> browser.url
  'http://bugs.launchpad.dev/firefox/+bug/1/+addsubscriber'

  >>> browser.getControl('Person').value = 'launchpad'
  >>> browser.getControl('Add').click()
  >>> browser.url
  'http://bugs.launchpad.dev/firefox/+bug/1'

  >>> print_direct_subscribers(browser.contents)
  Launchpad Developers (Subscribed by Foo Bar)
  Sample Person (Subscribed by Launchpad Janitor)
  Steve Alexander (Subscribed by Launchpad Janitor)

Now the subscribe link says 'Subscribe/Unsubscribe'.

  >>> subscribe_link = browser.getLink('Subscribe')
  >>> subscribe_link.text
  'Subscribe/Unsubscribe'

Clicking it gives us the option of both subscribing Foo Bar, and
unsubscribing the Launchpad team.

  >>> subscribe_link.click()
  >>> browser.url
  'http://bugs.launchpad.dev/firefox/+bug/1/+subscribe'

  >>> subscription_widget = browser.getControl(name='field.subscription')
  >>> subscription_widget.options
  ['name16', 'launchpad']

Let's unsubscribe the Launchpad team.

  >>> subscription_widget.value = ['launchpad']
  >>> browser.getControl('Continue').click()

  >>> browser.url
  'http://bugs.launchpad.dev/firefox/+bug/1/'

  >>> for tag in find_tags_by_class(browser.contents, 'informational message'):
  ...   print tag.renderContents()
  Launchpad Developers has been unsubscribed from this bug.

  >>> print_direct_subscribers(browser.contents)
  Sample Person (Subscribed by Launchpad Janitor)
  Steve Alexander (Subscribed by Launchpad Janitor)

On the subscribe page there's a Cancel button as well, so if we go to
that page and press the Cancel button, we will return to the bug page.

  >>> subscribe_link = browser.getLink('Subscribe')
  >>> subscribe_link.text
  'Subscribe'

  >>> subscribe_link.click()
  >>> browser.url
  'http://bugs.launchpad.dev/firefox/+bug/1/+subscribe'

  >>> subscription_widget = browser.getControl(name='field.subscription')
  >>> subscription_widget.value
  ['name16']
  >>> cancel_button = browser.getControl('Cancel')
  >>> cancel_button.click()
  >>> browser.url
  'http://bugs.launchpad.dev/firefox/+bug/1/'

Foo Bar wasn't subscribed to the bug.

  >>> len(find_tags_by_class(browser.contents, 'informational message'))
  0
  >>> print_direct_subscribers(browser.contents)
  Sample Person (Subscribed by Launchpad Janitor)
  Steve Alexander (Subscribed by Launchpad Janitor)


== Subscriptions and Duplicate Bugs ==

Because we auto-subscribe users that are directly subscribed to dupes of
a bug, we give the option to unsubscribe from dupe target bugs. Behind
the scenes, this is just unsubscribing the user from the duplicate(s) of
this bug that caused us to auto-subscribe them.

For example, Steve Alexander can currently subscribe to bug #3.

  >>> stevea_browser = setupBrowser(
  ...   auth="Basic steve.alexander@ubuntulinux.com:test")
  >>> stevea_browser.open("http://launchpad.dev/bugs/3")
  >>> subscribe_link = stevea_browser.getLink("Subscribe")

  >>> subscribe_link.text
  'Subscribe'

But if bug #2, a bug that Steve is directly subscribed to, is marked as
a dupe of bug #3, then Steve gets indirectly subscribed to bug #3, and
is presented with the Unsubscribe link instead.

  >>> stevea_browser.open(
  ...     "http://launchpad.dev/tomcat/+bug/2/+duplicate")

  >>> stevea_browser.getControl("Duplicate Of").value = "3"
  >>> stevea_browser.getControl("Change").click()

  >>> stevea_browser.open("http://launchpad.dev/bugs/3")

  >>> print_indirect_subscribers(stevea_browser.contents)
  Steve Alexander (Subscribed by Launchpad Janitor)

  >>> unsubscribe_link = stevea_browser.getLink("Unsubscribe")

  >>> unsubscribe_link.text
  'Unsubscribe'

When he chooses to unsubscribe, he will be unsubscribed from bug #2, the
dupe of bug #3, so he'll no longer get mail from bug #3.

  >>> unsubscribe_link.click()

  >>> stevea_browser.getControl("Continue").click()

XXX, Brad Bollenbach, 2006-09-27: Printing the tag here, instead of
tag.string, due to https://launchpad.net/bugs/62634

  >>> for tag in find_tags_by_class(
  ...     stevea_browser.contents, 'informational message'):
  ...   print tag.renderContents()
  You have been unsubscribed from this bug and 1 duplicate (<a...#2</a>)...

(There are no longer any indirect subscribers, because Steve was
unsubscribed from the dupes and thus is no longer indirectly subscribed
to bug #3.)

  >>> print_indirect_subscribers(stevea_browser.contents)

Let's repeat this example, with Steve subscribed to two different dupes,
to see how the unsubscribe notification changes slightly, because he
gets unsubscribed from more than one duplicate.

  >>> stevea_browser.open(
  ...     "http://launchpad.dev/firefox/+bug/1/+duplicate")
  >>> stevea_browser.getControl("Duplicate Of").value = "3"
  >>> stevea_browser.getControl("Change").click()

(Resubscribe Steve to bug #2, because he was unsubscribed in the
previous example.)

  >>> stevea_browser.open(
  ...     "http://launchpad.dev/tomcat/+bug/2/+subscribe")
  >>> stevea_browser.getControl("Continue").click()

  >>> stevea_browser.open("http://launchpad.dev/bugs/3")

  >>> print_indirect_subscribers(stevea_browser.contents)
  Sample Person (Subscribed ...)
  Steve Alexander (Subscribed ...)

  >>> stevea_browser.getLink("Unsubscribe").click()
  >>> stevea_browser.getControl("Continue").click()

  >>> for tag in find_tags_by_class(
  ...     stevea_browser.contents, 'informational message'):
  ...   print tag.renderContents()
  You have been unsubscribed from this bug and 2 duplicates (<a...#1</a>, <a...#2</a>)...
  This bug has 2 duplicates

(Let's undupe bug #1 from bug #3, since it's unneeded for the examples
that follow.)

  >>> stevea_browser.open(
  ...     "http://launchpad.dev/firefox/+bug/1/+duplicate")
  >>> stevea_browser.getControl("Duplicate Of").value = ""
  >>> stevea_browser.getControl("Change").click()

This unsubscribe behaviour is team-aware too, so you can unsubscribe
your teams from a bug, even when the team's subscription comes from a
duplicate. For example, let's login as Foo Bar, subscribe ubuntu-team to
bug #2, and notice how bug #3's indirect subscriptions are update to
include that team.

  >>> foobar_browser = setupBrowser(auth="Basic foo.bar@canonical.com:test")
  >>> foobar_browser.open("http://launchpad.dev/bugs/2")
  >>> foobar_browser.getLink("Subscribe someone else").click()
  >>> foobar_browser.getControl("Person").value = "ubuntu-team"
  >>> foobar_browser.getControl("Add").click()

  >>> foobar_browser.open("http://launchpad.dev/bugs/3")

  >>> print_indirect_subscribers(foobar_browser.contents)
  Ubuntu Team (Subscribed by Foo Bar)

The subscribe link for Foo Bar now says "Subscribe/Unsubscribe", because
Foo Bar can subscribe himself directly to this bug, or unsubscribe
ubuntu-team.

  >>> subscribe_link = foobar_browser.getLink("Subscribe/Unsubscribe")
  >>> subscribe_link.click()

Foo Bar can unsubscribe ubuntu-team, and ubuntu-team will no longer show
up in the indirect subscriptions.

  >>> subscription_field = foobar_browser.getControl(name="field.subscription")
  >>> subscription_field.value = ["ubuntu-team"]
  >>> foobar_browser.getControl("Continue").click()

  >>> for tag in find_tags_by_class(
  ...     foobar_browser.contents, 'informational message'):
  ...   print tag.renderContents()
  Ubuntu Team has been unsubscribed from this bug and 1 duplicate (<a...#2</a>)...
  This bug has 1 duplicate

(ubuntu-team is no longer an indirect subscriber.)

  >>> print_indirect_subscribers(foobar_browser.contents)
