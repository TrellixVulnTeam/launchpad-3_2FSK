The PPA packages page
=====================

The PPA packages page is accessible from the PPA page.
NOTE: The PPA page will be updated in a following branch.

    >> anon_browser.open('http://launchpad.dev/~cprov/+archive/ppa')
    >> anon_browser.getLink('View package details').click()
    >> anon_browser.url
    'http://launchpad.dev/~cprov/+archive/ppa/+packages'

    >>> anon_browser.open('http://launchpad.dev/~cprov/+archive/ppa/+packages')

    >>> print anon_browser.title
    Packages in ...PPA for Celso Providelo...

While navigating around the PPA the "structural location" includes a PPA:

    >>> print_location(anon_browser.contents)
    Hierarchy: Celso Providelo > PPA for Celso Providelo
    Tabs:
    * Overview (selected) - http://launchpad.dev/~cprov
    * Code - http://code.launchpad.dev/~cprov
    * Bugs - http://bugs.launchpad.dev/~cprov
    * Blueprints - http://blueprints.launchpad.dev/~cprov
    * Translations - http://translations.launchpad.dev/~cprov
    * Answers - http://answers.launchpad.dev/~cprov
    Main heading: Packages in ...PPA for Celso Providelo...

You can see the build details of the packages in the archive by using
the 'View all builds' link.

    >>> anon_browser.getLink('View all builds').click()
    >>> print anon_browser.title
    Builds for PPA for Celso Providelo

    >>> anon_browser.url
    'http://launchpad.dev/~cprov/+archive/ppa/+builds'

The user can return to the 'PPA' overview by using the breadcrumb link.

    >>> anon_browser.getLink('PPA for Celso Providelo').click()
    >>> print anon_browser.url
    http://launchpad.dev/~cprov/+archive/ppa

The rest of the builds page functionality is tested generically at
in xx-builds-pages.txt.


Package totals
--------------

A summary of the package totals is presented in a portlet.

    >>> package_totals = find_portlet(
    ...     anon_browser.contents, "Package totals")
    >>> print extract_text(package_totals)
