Reactivate the subscription for 'name16', on team 'myemail', which we
just deactivated.

Go to the member's page.

  >>> browser.addHeader("Authorization", "Basic test@canonical.com:test")
  >>> browser.open("http://launchpad.dev/~myemail/+member/name16")
  >>> print browser.contents
  <...
  <BLANKLINE>
  ...
  ...Inactive member...
  ...

Open a second Browser on the same page:

  >>> from zope.testbrowser.testing import Browser
  >>> browser2 = Browser()
  >>> browser2.addHeader("Authorization", "Basic test@canonical.com:test")
  >>> browser2.open("http://launchpad.dev/~myemail/+member/name16")

XXX: See test 27's comment on bug 68655.

Reactivate the subscription:

  >>> browser.getControl(name="expires").value = ["date"]
  >>> browser.getControl(name="day").value = ["16"]
  >>> browser.getControl(name="month").value = ["4"]
  >>> browser.getControl(name="year").value = ["2049"]
  >>> browser.getControl("Reactivate").click()

And check the results:

  >>> browser.url
  'http://launchpad.dev/~myemail/+members'

  >>> print browser.contents
  <...
  <BLANKLINE>
  ...
  ...Active members...
  ...
  ...Foo Bar...
  ...
  ...Approved...
  ...

A second submission for reactivation should not crash but will print an
error message:

  >>> browser2.handleErrors = False
  >>> browser2.getControl(name="expires").value = ["date"]
  >>> browser2.getControl(name="day").value = ["16"]
  >>> browser2.getControl(name="month").value = ["4"]
  >>> browser2.getControl(name="year").value = ["2049"]
  >>> browser2.getControl("Reactivate").click()
  >>> browser2.url
  'http://launchpad.dev/%7Emyemail/+member/name16/+index'
  >>> print browser2.contents
  <BLANKLINE>
  ...
  ...The membership request for Foo Bar has already been processed...
  ...

Let's make sure that 'name16' is now an APPROVED member of this team.

  >>> from canonical.launchpad.database import Person, TeamMembership
  >>> foobar = Person.byName('name16')
  >>> team = Person.byName('myemail')
  >>> tm = TeamMembership.selectOneBy(personID=foobar.id, teamID=team.id)
  >>> tm.statusname
  'Approved'
  >>> foobar.inTeam(team)
  True

