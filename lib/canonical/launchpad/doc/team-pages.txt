= Team pages =

== Home page ==

    >>> from canonical.launchpad.interfaces import (
    ...     IPersonSet, ITeamMembershipSet)
    >>> from zope.component import getMultiAdapter
    >>> from zope.publisher.browser import TestRequest
    >>> personset = getUtility(IPersonSet)
    >>> def create_view(context, name, form=None):
    ...     view = getMultiAdapter(
    ...         (context, TestRequest(form=form)), name=name)
    ...     view.initialize()
    ...     return view

On a team home page, we show up to the latest five members who were approved
as well as the up to five latest members who proposed themselves.

    >>> ubuntu_team = personset.getByName('name18')
    >>> team_home = create_view(ubuntu_team, '+index')
    >>> membershipset = getUtility(ITeamMembershipSet)
    >>> for member in team_home.recently_approved_members:
    ...     membership = membershipset.getByPersonAndTeam(member, ubuntu_team)
    ...     print "%s: %s" % (member.name, membership.status.title)
    ...            
    name20: Approved
    spiv: Approved
    limi: Approved

    >>> for member in team_home.recently_proposed_members:
    ...     membership = membershipset.getByPersonAndTeam(member, ubuntu_team)
    ...     print "%s: %s" % (member.name, membership.status.title)
    justdave: Proposed

If new members are added/proposed, they'll show up at the top of the lists.

    >>> sample_person = personset.getByName('name12')
    >>> login_person(sample_person)
    >>> sample_person.join(ubuntu_team)
    >>> salgado = personset.getByName('salgado')
    >>> sabdfl = personset.getByName('sabdfl')
    >>> login('foo.bar@canonical.com')
    >>> ubuntu_team.addMember(salgado, reviewer=sabdfl)

    >>> team_home = create_view(ubuntu_team, '+index')
    >>> for member in team_home.recently_approved_members:
    ...     membership = membershipset.getByPersonAndTeam(member, ubuntu_team)
    ...     print "%s: %s" % (member.name, membership.status.title)
    salgado: Approved
    name20: Approved
    spiv: Approved
    limi: Approved

    >>> for member in team_home.recently_proposed_members:
    ...     membership = membershipset.getByPersonAndTeam(member, ubuntu_team)
    ...     print "%s: %s" % (member.name, membership.status.title)
    name12: Proposed
    justdave: Proposed

Posting malformed data to the team home page raises an error.

    >>> from canonical.launchpad.webapp.servers import LaunchpadTestRequest
    >>> broken_request = LaunchpadTestRequest(
    ...     form={})
    >>> broken_request.method = 'POST'
    >>> team_home = getMultiAdapter(
    ...     (ubuntu_team, broken_request), name='+index')
    >>> team_home.initialize()
    Traceback (most recent call last):
    ...
    UnexpectedFormData: The mailing list form did not receive the expected
    form fields.


== +map ==

A team's +map page will show a map with markers on the location of all
members of that team.  That page also lists the local times of members.

    >>> factory = LaunchpadObjectFactory()
    >>> context = factory.makeTeam(salgado)
    >>> len(context.mapped_participants)
    0
    >>> view = getMultiAdapter((context, TestRequest()), name='+map')
    >>> view.times
    []

    >>> london_member = factory.makePerson(
    ...     latitude=51.49, longitude=-0.13, time_zone='Europe/London')
    >>> context.addMember(london_member, sabdfl)
    >>> len(context.mapped_participants)
    1
    >>> view = getMultiAdapter((context, TestRequest()), name='+map')
    >>> len(view.times)
    1

    >>> brazil_member = factory.makePerson(
    ...     latitude=-23.60, longitude=-46.64, time_zone='America/Sao_Paulo')
    >>> context.addMember(brazil_member, sabdfl)
    >>> len(context.mapped_participants)
    2
    >>> view = getMultiAdapter((context, TestRequest()), name='+map')
    >>> len(view.times)
    2

If we had two members in london, though, we wouldn't list london's time
twice, for obvious reasons.

    >>> london_member2 = factory.makePerson(
    ...     latitude=51.49, longitude=-0.13, time_zone='Europe/London')
    >>> context.addMember(london_member2, sabdfl)
    >>> len(context.mapped_participants)
    3
    >>> view = getMultiAdapter((context, TestRequest()), name='+map')
    >>> len(view.times)
    2
