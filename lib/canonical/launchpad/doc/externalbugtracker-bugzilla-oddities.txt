ExternalBugTracker: Issuezilla and other Freaks
===============================================

Bugzilla has a few variants out there in the wild, and we work hard to
support them all.

Issuezilla
----------

We support Issuezilla-style trackers. These trackers are essentially
modified (ancient) versions of Bugzilla; their XML elements have
slightly different names. We pretend Mozilla's Bugzilla is an Issuezilla
instance here:

    >>> from canonical.launchpad.interfaces import IBugTrackerSet
    >>> from canonical.launchpad.components.externalbugtracker import Bugzilla

    >>> from canonical.launchpad.ftests.externalbugtracker import TestIssuezilla
    >>> from canonical.testing import LaunchpadZopelessLayer
    >>> txn = LaunchpadZopelessLayer.txn
    >>> mozilla_bugzilla = getUtility(IBugTrackerSet).getByName('mozilla.org')
    >>> issuezilla = TestIssuezilla(txn, mozilla_bugzilla)
    >>> issuezilla._probe_version()
    (2, 11)
    >>> for bug_watch in mozilla_bugzilla.watches:
    ...     print "%s: %s" % (bug_watch.remotebug, bug_watch.remotestatus)
    2000:
    123543:
    42: FUBAR
    42: FUBAR
    >>> issuezilla.updateBugWatches(mozilla_bugzilla.watches)
    INFO:...:Updating 4 watches on https://bugzilla.mozilla.org
    WARNING:...:Didn't find bug u'42' on https://bugzilla.mozilla.org
    (local bugs: 1, 2).
    >>> for bug_watch in mozilla_bugzilla.watches:
    ...     print "%s: %s" % (bug_watch.remotebug, bug_watch.remotestatus)
    2000: RESOLVED FIXED
    123543: ASSIGNED
    42: FUBAR
    42: FUBAR


Bugzilla prior to 2.11
----------------------

Old-style Bugzillas are quite similar to Issuezilla. Again we pretend
Mozilla.org's using this old version. Here's the scoop:

    >>> from canonical.launchpad.ftests.externalbugtracker import TestOldBugzilla
    >>> old_bugzilla = TestOldBugzilla(txn, mozilla_bugzilla)

  a) The version is way old:

    >>> old_bugzilla._probe_version()
    (2, 10)

  b) The tags are not prefixed with the bz: namespace:

    >>> bug_item_file = old_bugzilla._readBugItemFile()
    >>> "<bug_status>" in bug_item_file
    True
    >>> "<bug_id>" in bug_item_file
    True

We support them just fine:

    >>> old_bugzilla.updateBugWatches(mozilla_bugzilla.watches)
    INFO:...:Updating 4 watches on https://bugzilla.mozilla.org
    WARNING:...:Didn't find bug u'2000' on https://bugzilla.mozilla.org
    (local bugs: 1).
    >>> for bug_watch in mozilla_bugzilla.watches:
    ...     print "%s: %s" % (bug_watch.remotebug, bug_watch.remotestatus)
    2000: RESOLVED FIXED
    123543: ASSIGNED
    42: RESOLVED FIXED
    42: RESOLVED FIXED


Bugzilla oddities
-----------------

Some Bugzillas have some weird properties that we need to cater for:

    >>> from canonical.launchpad.ftests.externalbugtracker import (
    ...     TestWeirdBugzilla)
    >>> weird_bugzilla = TestWeirdBugzilla(txn, mozilla_bugzilla)
    >>> weird_bugzilla._probe_version()
    (2, 20)

  a) The bug status tag is <bz:status> and not <bz:bug_status>

    >>> bug_item_file = weird_bugzilla._readBugItemFile()
    >>> "<bz:status>" in bug_item_file
    True

  b) The content is non-ascii:

    >>> bug_item_file.decode("ascii")
    Traceback (most recent call last):
    ...
    UnicodeDecodeError: 'ascii' codec can't decode byte...

Yet everything still works as expected:

    >>> weird_bugzilla.updateBugWatches(mozilla_bugzilla.watches)
    INFO:...:Updating 4 watches on https://bugzilla.mozilla.org
    WARNING:...:Didn't find bug u'42' on https://bugzilla.mozilla.org
    (local bugs: 1, 2).
    >>> for bug_watch in mozilla_bugzilla.watches:
    ...     print "%s: %s" % (bug_watch.remotebug, bug_watch.remotestatus)
    2000: ASSIGNED
    123543: RESOLVED FIXED
    42: RESOLVED FIXED
    42: RESOLVED FIXED


Broken Bugzillas
----------------

What does /not/ work as expected is parsing Bugzillas which produce
invalid XML:

    >>> from canonical.launchpad.ftests.externalbugtracker import (
    ...     TestBrokenBugzilla)
    >>> broken_bugzilla = TestBrokenBugzilla(txn, mozilla_bugzilla)
    >>> broken_bugzilla._probe_version()
    (2, 20)
    >>> "</foobar>" in broken_bugzilla._readBugItemFile()
    True
    >>> broken_bugzilla.updateBugWatches(mozilla_bugzilla.watches)
    Traceback (most recent call last):
    ...
    UnparseableBugData: Failed to parse XML description...

