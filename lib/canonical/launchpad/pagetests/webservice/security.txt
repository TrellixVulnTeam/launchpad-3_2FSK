= Security =

A few tests illustrating how the security model works with the
Launchpad data model objects.


== Visibility ==

A user without permission to see items in a collection will, of
course, not see those items. The 'salgado' user can see all bugs on the
site.

  >>> salgado_output = webservice.get("/bugs?ws.size=50").jsonBody()
  >>> salgado_output['total_size']
  15
  >>> len(salgado_output['entries'])
  15

But the 'no-priv' user can't see bug number 14, which is private.

  >>> nopriv_output = user_webservice.get(
  ...     "/bugs?ws.size=100").jsonBody()
  >>> nopriv_output['total_size']
  14
  >>> len(nopriv_output['entries'])
  14

Things are a little different for a user who has permission to see
private data, but is using an OAuth key that restricts the client to
operating on public data.

  >>> public_output = public_webservice.get(
  ...     "/bugs?ws.size=50").jsonBody()
  >>> public_output['total_size']
  15
  >>> len(public_output['entries'])
  14

What happened there? This web service request was made by a user who
can see all 15 bugs, but the user used an OAuth token that only allows
access to public data. The actual bugs are filtered against the OAuth
token at a fairly high level, but the number of visible bugs comes
from database-level code that only respects the user who made the
request. The user can see 15 bugs, but their token can only see the 14
public bugs.
