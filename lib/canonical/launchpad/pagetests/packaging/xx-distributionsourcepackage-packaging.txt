== Distribution Packaging ==

The packaging records for a source package in a given distribution are
displayed on the page of the distribution source package.

    >>> anon_browser.open('http://launchpad.dev/ubuntu/+source/alsa-utils')

This page includes a table that lists all the releases of this source
package in this distribution, and the packaging associations for this
source package in each series of this distribution.

When there are multiple releases for a package in a given distribution
series, most columns are not duplicated.
 
    >>> content = anon_browser.contents
    >>> print extract_text(find_tag_by_id(content, 'packaging'))
    Ubuntu version                  Upstream version
    hoary   development   release   1.0.9a-4ubuntu1   None defined
    warty   current       release   1.0.9a-4          alsa-utils Series: trunk
                                    1.0.8-1ubuntu1

A button is displayed to authenticated users to delete existing
packaging links.

    >>> user_browser.open('http://launchpad.dev/ubuntu/+source/alsa-utils')
    >>> print user_browser.getControl("Delete Link")
    <SubmitControl name='field.actions.delete_packaging' type='submit'>

XXX: When there are multiple "Delete Link" controls, they have the same
name and id attributes, which makes the document not well-formed XHTML.
-- David Allouche 2007-12-02

This button is not displayed to anonymous users.

    >>> print anon_browser.getControl("Delete Link")
    Traceback (most recent call last):
    ...
    LookupError: label 'Delete Link'

Clicking this button deletes the corresponding packaging association.

    >>> user_browser.getControl("Delete Link").click()
    >>> content = user_browser.contents
    >>> print extract_text(find_tag_by_id(content, 'packaging'))
    Ubuntu version                  Upstream version
    hoary   development   release   1.0.9a-4ubuntu1   None defined
    warty   current       release   1.0.9a-4          None defined
                                    1.0.8-1ubuntu1

The packaging association is persistently deleted. It does not reappear
if the page is reloaded.

XXX: user_browser.reload() does not expose the incorrect behaviour if it
occurs. -- David Allouche 2007-12-02

    >>> user_browser.open(user_browser.url)
    >>> content = user_browser.contents
    >>> print extract_text(find_tag_by_id(content, 'packaging'))
    Ubuntu version                  Upstream version
    hoary   development   release   1.0.9a-4ubuntu1   None defined
    warty   current       release   1.0.9a-4          None defined
                                    1.0.8-1ubuntu1
