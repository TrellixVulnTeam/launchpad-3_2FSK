= Creating Specification Branch Links =

It is possible to create a link between a specification with the "Link
Branch" menu item on the specification page:

  >>> user_browser.open('http://blueprints.launchpad.dev/ubuntu/'
  ...                   '+spec/media-integrity-check')
  >>> user_browser.getLink('Link branch').click()
  >>> print user_browser.url
  http://blueprints.launchpad.dev/ubuntu/+spec/media-integrity-check/+linkbranch

When creating a link to a branch, the link must not already exist.
There exists a link between the media-integrity-check branch and the
junk.dev branch, so we get an error:

  >>> user_browser.getControl('Branch').value = '~name12/+junk/junk.dev'
  >>> user_browser.getControl('Summary').value = 'Summary text'
  >>> user_browser.getControl('Link to Specification').click()
  >>> print user_browser.url
  http://blueprints.launchpad.dev/ubuntu/+spec/media-integrity-check/+linkbranch

  >>> for tag in find_tags_by_class(user_browser.contents, 'message'):
  ...     print tag.renderContents()
  There is 1 error.
  <BLANKLINE>
  This branch has already been linked to the specification

If we pick a different branch, the we can successfully create the
link:

  >>> user_browser.getControl('Branch').value = '~name12/+junk/junk.contrib'
  >>> user_browser.getControl('Link to Specification').click()
  >>> print user_browser.url
  http://blueprints.launchpad.dev/ubuntu/+spec/media-integrity-check


== Linked Branches Portlet ==

If there are any branches linked to the specification, then a branches
portlet will be visible:

  >>> print find_portlet(user_browser.contents, 'Branches')
  <...
  <ul class="branch">
  <li>
  <a href="http://code.launchpad.dev/~name12/+junk/junk.dev">Ubuntu Junk Code</a>
  <a href="/ubuntu/+spec/media-integrity-check/+branch/name12/+junk/junk.dev"><img src="/@@/edit" title="Change this branch link" /></a><br />
  <i>This branch should fix the issue</i>
  </li>
  <li>
  <a href="http://code.launchpad.dev/~name12/+junk/junk.contrib">Junk Code Contributions</a>
  <a href="/ubuntu/+spec/media-integrity-check/+branch/name12/+junk/junk.contrib"><img src="/@@/edit" title="Change this branch link" /></a><br />
  <i>Summary text</i>
  </li>
  </ul>
  ...

Note that the edit links are not displayed if the user is not logged
in:

  >>> anon_browser.open('http://blueprints.launchpad.dev/ubuntu/'
  ...                   '+spec/media-integrity-check')
  >>> print find_portlet(anon_browser.contents, 'Branches')
  <...
  <li>
  <a href="http://code.launchpad.dev/~name12/+junk/junk.contrib">Junk Code Contributions</a>
  <br />
  <i>Summary text</i>
  </li>
  ...


Similar to the portlet on the specification page, there is a list of
linked specifications on the branch page:

  >>> user_browser.open('http://launchpad.dev/~name12/+junk/junk.contrib')
  >>> print find_portlet(user_browser.contents, 'Blueprints')
  <...
  <li>
  <a href="http://blueprints.launchpad.dev/ubuntu/+spec/media-integrity-check">CD Media Integrity Check</a>
  <a href="/ubuntu/+spec/media-integrity-check/+branch/name12/+junk/junk.contrib"><img src="/@@/edit" title="Change this blueprint link" /></a><br />
  <i>Summary text</i>
  </li>
  ...


== Editing a Branch Link ==

The edit link in the branches portlet takes us to a form that can be
used to edit the summary of the branch link:

  >>> user_browser.open('http://blueprints.launchpad.dev/ubuntu/'
  ...                   '+spec/media-integrity-check/+branch/name12/'
  ...                   '+junk/junk.contrib')
  >>> user_browser.getControl('Summary', index=0).value = 'New summary'
  >>> user_browser.getControl('Change Summary').click()
  >>> print user_browser.url
  http://blueprints.launchpad.dev/ubuntu/+spec/media-integrity-check

The new summary now appears in the branches portlet:

  >>> print find_portlet(user_browser.contents, 'Branches')
  <...
  <li>
  <a href="http://code.launchpad.dev/~name12/+junk/junk.contrib">Junk Code Contributions</a>
  <a href="/ubuntu/+spec/media-integrity-check/+branch/name12/+junk/junk.contrib"><img src="/@@/edit" title="Change this branch link" /></a><br />
  <i>New summary</i>
  </li>
  ...
  

== Deleting a Branch Link ==

Users can delete the branch link from the branch link page:

  >>> user_browser.open('http://blueprints.launchpad.dev/ubuntu/'
  ...                   '+spec/media-integrity-check/+branch/name12/'
  ...                   '+junk/junk.contrib')
  >>> user_browser.getControl('Delete Link').click()
  >>> print user_browser.url
  http://blueprints.launchpad.dev/ubuntu/+spec/media-integrity-check


The branch is now no longer listed in the portlet:

  >>> portlet = str(find_portlet(user_browser.contents, 'Branches'))
  >>> '~name12/+junk/junk.contrib' in portlet
  False
