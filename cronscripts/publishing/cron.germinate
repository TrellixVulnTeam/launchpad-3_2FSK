#! /bin/sh

set -e
set -u

ARCHIVEROOT=/srv/launchpad.net/ubuntu-archive/ubuntu
MISCROOT=$ARCHIVEROOT/../ubuntu-misc
LOCKROOT=$ARCHIVEROOT/..
GERMINATEROOT=$ARCHIVEROOT/../ubuntu-germinate
SEEDS=http://people.ubuntu.com/~cjwatson/seeds

## Check to see if another germinate run is in progress

LOCKFILE=$LOCKROOT/cron.germinate.lock
if lockfile -! -l 43200 -r 0 "${LOCKFILE}"; then
  echo Another cron.germinate appears to be running
  exit 1
fi

cleanup () {
  rm -f "$LOCKFILE"
}

trap cleanup EXIT

## XXX cprov 20060609: We need to retrieve 'development' distrorelease
## from helper script. See bug # 49174
suite=edgy

echo -n "Running germinate... "
cd $GERMINATEROOT

# Clean up temporary files
rm -f germinate.output ALL ALL.sources UBUNTU-* KUBUNTU-* EDUBUNTU-* XUBUNTU-*
rm -f all_* all.sources_*

# Grab a local copy of Sources files
for component in main universe restricted; do 
  zcat $ARCHIVEROOT/dists/"$suite"/"$component"/source/Sources.gz > "$suite"_"$component"_Sources;
done

for distro in ubuntu kubuntu edubuntu xubuntu; do
  DISTRO="$(echo $distro | tr a-z A-Z)"
  case "$distro" in 
      ubuntu)
	  germinate_suite="$suite"
	  ;;
      kubuntu|edubuntu|xubuntu)
	  germinate_suite="$distro"-"$suite"
	  ;;
      *)
	  echo "Unknown distro $distro";
	  exit 1
	  ;;
  esac
  # We use the STRUCTURE file to figure out which tasks to generate.
  wget -q -O "$DISTRO-STRUCTURE" "$SEEDS/$germinate_suite/STRUCTURE"
  for arch in i386 amd64 powerpc hppa sparc ia64; do
    # Grab local copy of Packages and InstallerPackages files
    for component in main universe restricted; do
      zcat $ARCHIVEROOT/dists/"$suite"/"$component"/binary-$arch/Packages.gz > "$suite"_"$component"_Packages
      zcat $ARCHIVEROOT/dists/"$suite"/"$component"/debian-installer/binary-$arch/Packages.gz > "$suite"_"$component"_InstallerPackages
    done

    # Run germinate
    echo " **************** $distro/$suite/$arch ********************* " >> germinate.output
    germinate --no-rdepends -s "$germinate_suite" -d "$suite" -c main,universe,restricted -a $arch >> germinate.output 2>&1

    # Keep per distro/suite/arch copies of 'all' and 'all.sources' for anastacia
    cp all all_"$distro"_"$suite"_"$arch"
    cp all.sources all.sources_"$distro"_"$suite"_"$arch"

    # Keep per distro/suite/arch copies of 'minimal' and 'standard' for jessica
    cp minimal minimal_"$distro"_"$suite"_"$arch"
    cp standard standard_"$distro"_"$suite"_"$arch"

    # Keep amalagmated copies of 'all', 'all.sources' and 'desktop' and 'standard'
    # [These are used for generation of 'Task: lines']
    cat all >> ALL; cat all.sources >> ALL.sources
    # We need to generate Task fields for everything in the ship/server-ship
    # seeds (which includes standard, desktop, and server tasks) except for
    # boot and minimal.
    for seed in $(egrep '^(ship|server-ship):' "$DISTRO-STRUCTURE" | cut -d' ' -f2- | xargs -n1 | sort -u); do
      wget -q -O "$DISTRO-$seed.seedtext" "$SEEDS/$germinate_suite/$seed"
      cat "$seed" >> "$DISTRO-$seed"
    done
    echo " ********************************************************************** " >> germinate.output
    echo "" >> germinate.output
    echo -n "."
  done
done
echo " done."

## Generate apt-ftparchive 'extra' overrides for Task: $distro-{desktop,standard}
> "$MISCROOT/more-extra.override.$suite.main.new"
for distro in ubuntu kubuntu edubuntu xubuntu; do
  DISTRO=$(echo $distro | tr a-z A-Z)
  for seed in $(egrep '^(ship|server-ship):' "$DISTRO-STRUCTURE" | cut -d' ' -f2- | xargs -n1 | sort -u); do
    if ! grep -iq '^Task-' "$DISTRO-$seed.seedtext"; then
      continue
    fi
    if grep -iq '^Task-Per-Derivative:' "$DISTRO-$seed.seedtext"; then
      task="$distro-$seed"
    else
      # If a seed is not per-derivative, then we only honour it for Ubuntu,
      # and its task name is archive-global.
      if [ "$distro" = ubuntu ]; then
        task="$seed"
      else
        continue
      fi
    fi
    egrep -v -- "^(-|Package| )" "$DISTRO-$seed" | awk '{print $1}' | sed -e "s/$/  Task  $task/" | sort -u >> "$MISCROOT/more-extra.override.$suite.main.new"
  done
done
mv -f "$MISCROOT/more-extra.override.$suite.main.new" "$MISCROOT/more-extra.override.$suite.main"
