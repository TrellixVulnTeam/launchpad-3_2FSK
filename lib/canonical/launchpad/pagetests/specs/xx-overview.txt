
Let's take a tour of the Launchpad specification management system.

First, we should be able to see a list of latest specs on any product or
distribution in Launchpad. This should take the form of a portlet on the
product or distribution home page, showing latest specs.

    >>> user_browser.open('http://launchpad.dev/firefox')
    >>> main = find_main_content(user_browser.contents)
    >>> print extract_text(main).encode('ascii', 'backslashreplace')
    Mozilla Firefox...
    Latest blueprints
        Merge Open Browser Windows with "Consolidate Windows"
        Support E4X in EcmaScript
        Support Native SVG Objects
        Support &lt;canvas&gt; Objects
        Extension Manager Upgrades...

If there are no specifications, then we should not see the "latest
specifications" portlet.

    >>> user_browser.open('http://launchpad.dev/debian')
    >>> main = find_main_content(user_browser.contents)
    >>> text = extract_text(main).encode('ascii', 'backslashreplace')
    >>> print text
    Debian GNU/Linux...
    Uses Launchpad for:
    Nothing...
    >>> 'Latest blueprints' not in text
    True

On both product and distribution we should be able to see a list of
specifications, at +specs.

First, let's check on product.

    >>> user_browser.open('http://launchpad.dev/firefox/+specs')
    >>> main = find_main_content(user_browser.contents)  
    >>> print extract_text(main).encode('ascii', 'backslashreplace')
    Blueprints for Mozilla Firefox...
    Priority...Specification...Design  ...Delivery      ...
    High    ...svg-support  ...Approved...Beta Available...
    Medium  ...canvas       ...New     ...Unknown       ...
    Medium  ...extension-man...New     ...Informational ...
    Medium  ...mergewin     ...New     ...Unknown       ...
    Not     ...e4x          ...Review  ...Unknown       ...

Now, on a product series.

First target to a series:

    >>> browser = admin_browser
    >>> browser.open('http://launchpad.dev/firefox/+specs')
    >>> browser.getLink('svg-support').click()
    >>> print extract_text(find_main_content(browser.contents))
    Blueprint overview...
    >>> browser.getLink('Propose as goal').click()
    >>> print extract_text(find_main_content(browser.contents))
    Target to a product series...
    >>> series = browser.getControl('Series Goal')
    >>> series.displayValue = ['firefox 1.0']
    >>> browser.getControl('Continue').click()
    >>> print extract_text(find_main_content(browser.contents))
    Blueprint overview...
    Series goal: Accepted for 1.0...

Next target to a milestone:
    
    >>> browser.getLink('Target milestone').click()
    >>> print extract_text(find_main_content(browser.contents))
    Target to a milestone...
    >>> milestones = browser.getControl('Milestone')
    >>> milestones.displayValue = ['Mozilla Firefox: 1.0']
    >>> browser.getControl('Change').click()
    >>> print extract_text(find_main_content(browser.contents))
    Blueprint overview...
    Milestone target:...1.0...
 
Now list the blueprints for the 1.0 series:

    >>> user_browser.open('http://launchpad.dev/firefox/1.0/+specs')
    >>> main = find_main_content(user_browser.contents)  
    >>> print extract_text(main).encode('ascii', 'backslashreplace')
    Blueprints for 1.0...
    Priority...Specification...Design  ...Delivery...Assignee...Milestone...
    High    ...svg-support  ...Approved...Beta    ...Carlos  ...1.0      ...

Now, on distribution.

    >>> user_browser.open('http://launchpad.dev/ubuntu/+specs')
    >>> main = find_main_content(user_browser.contents)
    >>> print extract_text(main).encode('ascii', 'backslashreplace')
    Blueprints for Ubuntu...
    Priority ...Specification        ...Design    ...Delivery...Assignee...
    Undefined...media-integrity-check...Discussion...Unknown...
