= Menu pages =

Launchpad often uses views to render menus instead of working with
them directly in the template. The views ensure that the menus
are rendered in a consistent manner.

Menu testing requires a request object that provides the traversed
objects, and a view that knows what facet it belongs to. This work
is normally done by the publisher and publication modules in webapp.
For this test, a helper function will simulate the request process.

    >>> from zope.component import getMultiAdapter
    >>> from zope.security.management import endInteraction, newInteraction
    >>> from canonical.launchpad.webapp.servers import LaunchpadTestRequest

    >>> def make_request_for_obj(server_url, path_info, obj, view_name):
    ...     """Return a 2-tuple of the request and view of the object."""
    ...     request = LaunchpadTestRequest(
    ...         SERVER_URL=server_url,
    ...         PATH_INFO=path_info)
    ...     # The publication setups a new interaction.
    ...     endInteraction()
    ...     newInteraction(request)
    ...     # The publisher traverses the url to create the objects.
    ...     request._traversed_names = path_info.split('/')[1:]
    ...     request.traversed_objects = None
    ...     view = getMultiAdapter((obj, request), name=view_name)
    ...     request._last_obj_traversed = view
    ...     # The page facet directive in ZCML adds the facet to the view.
    ...     # Use the host that provides the requests layer.
    ...     facet = server_url.split('.')[0].split('/')[-1]
    ...     if facet == 'launchpad':
    ...         facet = 'overview'
    ...     view.__launchpad_facetname__ = facet
    ...     return (request, view)


== The navigation menu view ==

The navigation menu for an object is determined by the request's facet.
A navigation menu is available the requested Spanish PO file, which has
a translations facet. The navigation menu has a view that is used to
render the menu: +navigationmenutabs.

    >>> from lp.translations.interfaces.potemplate import IPOTemplateSet
    >>> from lp.registry.interfaces.product import IProductSet

    >>> productset = getUtility(IProductSet)
    >>> evolution = productset['evolution']
    >>> evolution_trunk = evolution.getSeries('trunk')
    >>> potemplateset = getUtility(IPOTemplateSet)
    >>> potemplatesubset = potemplateset.getSubset(
    ...     productseries=evolution_trunk)
    >>> potemplate = potemplatesubset['evolution-2.2']
    >>> pofile_es = potemplate.getPOFileByLang('es')

    >>> request, nav_menu_view = make_request_for_obj(
    ...     'http://translations.launchpad.dev',
    ...     '/evolution/trunk/+pots/evolution-2.2/es',
    ...     pofile_es, '+navigationmenutabs')
    >>> request.getURL()
    'http://translations.launchpad.dev/evolution/trunk/+pots/evolution-2.2/es'
    >>> nav_menu_view
    <...launchpad-navigation-menutabs.pt ...>

The view exposes the menu's links and optional title attributes when
the view is initialized.

    >>> nav_menu_view.initialize()
    >>> len(nav_menu_view.links)
    4
    >>> print nav_menu_view.title
    None

A link's linked attribute is determined by the requested URL. The
description link is not linked because its URL matches the request's
URL.

    >>> def print_menu_view_links(menu_view):
    ...     for link in menu_view.links:
    ...         print link.url
    ...         print '  name:', link.name
    ...         print '  enabled:', link.enabled
    ...         print '  linked:', link.linked

    >>> request.getURL()
    'http://translations.../evolution/trunk/+pots/evolution-2.2/es'

    >>> print_menu_view_links(nav_menu_view)
    http://translations.../evolution/trunk/+pots/evolution-2.2/es/+details
      name: details
      enabled: True
      linked: True
    http://translations.../evolution/trunk/+pots/evolution-2.2/es/+translate
      name: translate
      enabled: True
      linked: True
    http://translations.../evolution/trunk/+pots/evolution-2.2/es/+upload
      name: upload
      enabled: False
      linked: True
    http://translations.../evolution/trunk/+pots/evolution-2.2/es/+export
      name: download
      enabled: True
      linked: True

The download link is not linked when the +export view for a PO file
is requested.

    >>> request, nav_menu_view = make_request_for_obj(
    ...     'http://translations.launchpad.dev',
    ...     '/evolution/trunk/+pots/evolution-2.2/es/+export',
    ...     pofile_es, '+navigationmenutabs')

    >>> request.getURL()
    'http://translations.../evolution/trunk/+pots/evolution-2.2/es/+export'

    >>> nav_menu_view.initialize()
    >>> print_menu_view_links(nav_menu_view)
    http://translations.../evolution/trunk/+pots/evolution-2.2/es/+details
      name: details
      enabled: True
      linked: True
    http://translations.../evolution/trunk/+pots/evolution-2.2/es/+translate
      name: translate
      enabled: True
      linked: True
    http://translations.../evolution/trunk/+pots/evolution-2.2/es/+upload
      name: upload
      enabled: False
      linked: True
    http://translations.../evolution/trunk/+pots/evolution-2.2/es/+export
      name: download
      enabled: True
      linked: False


Disabled links are only included in the view's links if the server is
in devmode.

    >>> from canonical.config import config
    >>> from lp.translations.browser.pofile import POFileNavigationMenu

    >>> original_enable_only = POFileNavigationMenu.enable_only
    >>> POFileNavigationMenu.enable_only = ['details', 'translate']
    >>> config.devmode
    True

    >>> nav_menu_view.initialize()
    >>> print_menu_view_links(nav_menu_view)
    http://translations.../evolution/trunk/+pots/evolution-2.2/es/+details
      name: details
      enabled: True
      linked: True
    http://translations.../evolution/trunk/+pots/evolution-2.2/es/+translate
      name: translate
      enabled: True
      linked: True
    http://translations.../evolution/trunk/+pots/evolution-2.2/es/+upload
      name: upload
      enabled: False
      linked: True
    http://translations.../evolution/trunk/+pots/evolution-2.2/es/+export
      name: download
      enabled: False
      linked: False

When devmode is False, the links are not included.

    # The devmode attribute is a real config attribute (not lazr.config).
    >>> config.devmode = False

    >>> nav_menu_view.initialize()
    >>> print_menu_view_links(nav_menu_view)
    http://translations.../evolution/trunk/+pots/evolution-2.2/es/+details
      name: details
      enabled: True
      linked: True
    http://translations.../evolution/trunk/+pots/evolution-2.2/es/+translate
      name: translate
      enabled: True
      linked: True

    # Restore the real config attribute and the enabled links.
    >>> config.devmode = True
    >>> POFileNavigationMenu.enable_only = original_enable_only

The view renders the html for the navigation menu when there are links.

    >>> print nav_menu_view.render()
    <div class="navigation menu">
     ...
    </div>...

If there are no links (because they are not enabled for the user) then
an empty string is rendered.

    # Force the links to be an empty list like when there are no links.
    >>> nav_menu_view.links = []
    >>> nav_menu_view.render()
    ''

== ProductTranslationsMenu ==

    >>> request, translations_nav_menu_view = make_request_for_obj(
    ...     'http://translations.launchpad.dev',
    ...     '/evolution',
    ...     evolution, '+navigationmenutabs')

    >>> request.getURL()
    'http://translations.../evolution'

    >>> translations_nav_menu_view.initialize()
    >>> print_menu_view_links(translations_nav_menu_view)
    http://translations.../evolution
      name: overview
      enabled: True
      linked: False
    http://translations.../evolution/+changetranslators
      name: settings
      enabled: False
      linked: True
    http://translations.../evolution/trunk/+export
      name: translationdownload
      enabled: False
      linked: True
    http://translations.../evolution/+imports
      name: imports
      enabled: True
      linked: True
