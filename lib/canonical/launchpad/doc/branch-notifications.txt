Email Notifications for Branches
================================

Only subscribers get email notifications.  If the owner/author
of the branch want to receive emails, then they need to subscribe
to the branch.

There are two situations where emails are sent out for branches:
 - when a user modifies the state of the branch object using the UI
 - when the branch scanner notices a change in the tip revision

Firstly lets just make sure that the emails that'll be sent out
have the appropriate information.

Email Format
------------

It is the form infrastructure that fires off the SQLObjectModifedEvent,
so we'll fake that bit here.  The page tests will check the emails
sent.

    >>> from zope.event import notify
    >>> from canonical.launchpad.event import SQLObjectModifiedEvent
    >>> from canonical.launchpad.interfaces import IBranch, IBranchSet, IPersonSet
    >>> from canonical.launchpad.webapp.snapshot import Snapshot
    >>> from canonical.lp.dbschema import (
    ...     BranchSubscriptionNotificationLevel, BranchSubscriptionDiffSize)

    >>> login('test@canonical.com')
    >>> test_user = getUtility(IPersonSet).getByEmail('test@canonical.com')
    >>> branch = getUtility(IBranchSet).getByUniqueName('~name12/firefox/main')
    >>> branch.subscribe(
    ...     test_user,
    ...     BranchSubscriptionNotificationLevel.ATTRIBUTEONLY,
    ...     BranchSubscriptionDiffSize.NODIFF)
    <BranchSubscription ...> 
    >>> before_modification = Snapshot(branch, providing=IBranch)

    >>> branch.whiteboard = 'This is the new whiteboard'

Even though the branch notification emails don't use the field
names just now, we'll pass them through anyway

    >>> notify(SQLObjectModifiedEvent(branch,
    ...                               before_modification,
    ...                               ['whiteboard']))

    >>> import transaction
    >>> from canonical.launchpad.mail import stub
    >>> transaction.commit()
    >>> len(stub.test_emails)
    1
    >>> from_address, recipients, body = stub.test_emails.pop()
    >>> print body
    Content-Type: text/plain; charset="utf-8"
    ...
    To: test@canonical.com
    From: Sample Person <test@canonical.com>
    Subject: [Branch ~name12/firefox/main] Mozilla Firefox Mainline
    ...
    Whiteboard changed to:
    <BLANKLINE>
    This is the new whiteboard
    <BLANKLINE>
    --
    Mozilla Firefox Mainline
    http://launchpad.dev/~name12/+branch/firefox/main
    <BLANKLINE>
    You received this email because you are subscribed to this branch.
    To unsubscribe from this branch use go to http://launchpad.dev/~name12/+bra=
    nch/firefox/main/+edit-subscription.
    

The fields that are currently tracked with the delta, and cause
an email to be sent out are:
  * name
  * title
  * summary
  * url
  * whiteboard
  * lifecycle_status

So, if all the UI fields are changed, you should get an email that looks
something like this:

    >>> branch = getUtility(IBranchSet).getByUniqueName('~name12/firefox/main')

    >>> before_modification = Snapshot(branch, providing=IBranch)

    >>> branch.name = 'new-name'
    >>> branch.title = 'New title'
    >>> branch.summary = 'A new summary'
    >>> branch.url = 'http://example.com/foo'
    >>> branch.whiteboard = 'This is a multiline whiteboard\n' \
    ...  'with a really long line that should invoke the splitting ' \
    ...  'algorithm in the mail wrapper to make sure that the line ' \
    ...  'is not too long'
    >>> from canonical.lp.dbschema import BranchLifecycleStatus
    >>> branch.lifecycle_status = BranchLifecycleStatus.DEVELOPMENT
    >>> updated_fields = ['name','title','summary','url','whiteboard','lifecycle_status']
    >>> notify(SQLObjectModifiedEvent(
    ...     branch, before_modification, updated_fields))

    >>> transaction.commit()
    >>> len(stub.test_emails)
    1
    >>> from_address, recipients, body = stub.test_emails.pop()
    >>> print body
    Content-Type: text/plain; charset="utf-8"
    ...
    To: test@canonical.com
    From: Sample Person <test@canonical.com>
    Subject: [Branch ~name12/firefox/new-name] New title
    ...
        Name: main =3D> new-name
        Title: Mozilla Firefox Mainline =3D> New title
        Branch URL: http://bazaar.example.com/mozilla@arch.ubuntu.com/mozilla--=
    MAIN--0 =3D> http://example.com/foo
        Status: New =3D> Development
    <BLANKLINE>
    Summary changed to:
    <BLANKLINE>
    A new summary
    <BLANKLINE>
    Whiteboard changed to:
    <BLANKLINE>
    This is a multiline whiteboard
    with a really long line that should invoke the splitting algorithm in the m=
    ail wrapper to make sure that the line is not too long
    <BLANKLINE>
    --
    New title
    http://launchpad.dev/~name12/+branch/firefox/new-name
    <BLANKLINE>
    You received this email because you are subscribed to this branch.
    To unsubscribe from this branch use go to http://launchpad.dev/~name12/+bra=
    nch/firefox/new-name/+edit-subscription.
