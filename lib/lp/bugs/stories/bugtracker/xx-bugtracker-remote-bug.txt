Remote Bug Information Pages
============================

Launchpad provides the ability for bugs to "watch" remote bugs.  You
can easily see which remote bugs a Launchpad bug watches by looking at
the "Remote Bug Watches" portlet on the bug's page.

To see what Launchpad bugs are watching a particular remote bug, we
use a URL of the form /bugs/bugtrackers/$bugtrackername/$remotebug.

If there are multiple Launchpad bugs watching a particular remote bug,
then a list of the relevant Launchpad bugs:

  >>> browser.open('http://launchpad.dev/bugs/bugtrackers/mozilla.org/42')
  >>> print browser.contents
  <!DOCTYPE...
  <title>Remote Bug #42 in The Mozilla.org Bug Tracker</title>
  ...
  <h1>Remote Bug #42 in The Mozilla.org Bug Tracker</h1>
  ...
  <a href=".../bugs/1">#1: Firefox does not support SVG</a>
  ...
  <a href=".../bugs/2">#2: Blackhole Trash folder</a>
  ...


If there is only a single bug watching the remote bug, then we skip
the list page and redirect the user directly to that bug's page:

  >>> browser.open('http://launchpad.dev/bugs/bugtrackers/mozilla.org/2000')
  >>> print browser.url
  http://bugs.launchpad.dev/firefox/+bug/1

If there are no bug watches for a particular remote bug, then a Not
Found page is generated:

  >>> browser.handleErrors = True
  >>> browser.open('http://launchpad.dev/bugs/bugtrackers/mozilla.org/99999')
  Traceback (most recent call last):
  ...
  httperror_seek_wrapper: HTTP Error 404: Not Found
  >>> browser.handleErrors = False


Private Bugs
------------

If a bug is marked private, and multiple Launchpad bugs are watching a
particular remote bug, we do not expose the title of the remote bug.

Mark bug 1 as private:

  >>> browser.addHeader('Authorization', 'Basic test@canonical.com:test')
  >>> browser.open('http://launchpad.dev/firefox/+bug/1')
  >>> browser.getLink('This report is public').click()
  >>> browser.url
  'http://bugs.launchpad.dev/firefox/+bug/1/+secrecy'
  >>> browser.getControl('This bug report should be private').selected = True
  >>> browser.getControl('Change').click()
  >>> browser.url
  'http://bugs.launchpad.dev/firefox/+bug/1'


List Launchpad bugs watching Mozilla bug 42:

  >>> anon_browser.open('http://launchpad.dev/bugs/bugtrackers/mozilla.org/42')
  >>> print anon_browser.contents
  <!DOCTYPE...
  ...
  <title>Remote Bug #42 in The Mozilla.org Bug Tracker</title>
  ...
  <a href=".../bugs/1">#1: Private Bug</a>
  ...
  <a href=".../bugs/2">#2: Blackhole Trash folder</a>
  ...


The bug title is still provided if the user can view the private bug:

  >>> browser.open('http://launchpad.dev/bugs/bugtrackers/mozilla.org/42')
  >>> print browser.contents
  <!DOCTYPE...
  ...
  <title>Remote Bug #42 in The Mozilla.org Bug Tracker</title>
  ...
  <a href=".../bugs/1">#1: Firefox does not support SVG</a>
  ...
  <a href=".../bugs/2">#2: Blackhole Trash folder</a>
  ...


For the case where the private bug is the only one watching the given
remote bug, we don't perform the redirect ahead of time:

  >>> anon_browser.handleErrors = True
  >>> anon_browser.open('http://bugs.launchpad.dev/bugs/bugtrackers/mozilla.org/2000')
  >>> print anon_browser.contents
  <!DOCTYPE...
  ...To continue, you must log in to Launchpad...
  ...<input type="hidden" name="redirection_url"
  value="http://bugs.launchpad.dev/bugs/1" />...
  

Set the bug back to public:

  >>> browser.open('http://bugs.launchpad.dev/firefox/+bug/1')
  >>> browser.getLink('This report is private').click()
  >>> browser.url
  'http://bugs.launchpad.dev/firefox/+bug/1/+secrecy'
  >>> browser.getControl('This bug report should be private').selected = False
  >>> browser.getControl('Change').click()
  >>> browser.url
  'http://bugs.launchpad.dev/firefox/+bug/1'
