With this test we are going to test the entries filtering on the translation
import queue form.

Let's add 100 files to the queue so we have enough entries to play with.

  >>> import canonical.launchpad
  >>> import os.path
  >>> test_file_name = os.path.join(
  ...     os.path.dirname(canonical.launchpad.__file__),
  ...     'pagetests/standalone/xx-translation-import-queue-filtering.tar.gz')
  >>> tarball = open(test_file_name)
  >>> print http(r"""
  ... POST /products/evolution/trunk/+translations-upload HTTP/1.1
  ... Authorization: Basic Y2FybG9zQGNhbm9uaWNhbC5jb206dGVzdA==
  ... Content-Length: 1689
  ... Content-Type: multipart/form-data; boundary=---------------------------1154239704143730702744913602
  ... 
  ... -----------------------------1154239704143730702744913602
  ... Content-Disposition: form-data; name="file"; filename="foo.tar.gz"
  ... Content-Type: application/x-gzip
  ... 
  ... %s
  ... -----------------------------1154239704143730702744913602
  ... Content-Disposition: form-data; name="translations_upload"
  ... 
  ... Request Upload
  ... -----------------------------1154239704143730702744913602--
  ... """ % tarball.read(), handle_errors=False)
  HTTP/1.1 200 Ok
  Content-Length: ...
  ...Thank you for your upload. 100 files from the tarball will be reviewed...

Check that the import queue has the needed entries to do filtering and that
we have all the entries we just imported.

  >>> browser.addHeader('Authorization', 'Basic carlos@canonical.com:test')
  >>> browser.open('http://localhost/rosetta/imports')
  >>> browser.url
  'http://localhost/rosetta/imports'
  >>> browser.getLink('Next')
  <Link text='Next\xa0\xbb' url='http://localhost/rosetta/imports/+index?start=50&batch=50'>
  >>> print browser.contents
  <!DOCTYPE...
  ...Choose which status to show...
  ...All...
  ...Approved...
  ...Imported...
  ...Deleted...
  ...Failed...
  ...Needs Review...
  ...Blocked...
  ...Choose which kind of files to show...
  ...Files of any type...
  ...Only .po files...
  ...Only .pot files...
  ...1...50...of...100 results...

The entries that need review, as we can see, initially, are all entries.

  >>> browser.open('http://localhost/rosetta/imports?status=NEEDS_REVIEW&type=all')
  >>> browser.url
  'http://localhost/rosetta/imports?status=NEEDS_REVIEW&type=all'
  >>> browser.getControl(name='status').value
  ['NEEDS_REVIEW']
  >>> browser.getControl(name='type').value
  ['all']
  >>> print browser.contents
  <!DOCTYPE...
  ...1...50...of...100 results...

Let's select only the .po files, we get now only 95 entries.

  >>> browser.open('http://localhost/rosetta/imports?status=all&type=po')
  >>> browser.url
  'http://localhost/rosetta/imports?status=all&type=po'
  >>> browser.getControl(name='status').value
  ['all']
  >>> browser.getControl(name='type').value
  ['po']
  >>> print browser.contents
  <!DOCTYPE...
  ...1...50...of...95 results...

And now, all entries that are .pot files, we should get just 5.

  >>> browser.open('http://localhost/rosetta/imports?status=all&type=pot')
  >>> browser.url
  'http://localhost/rosetta/imports?status=all&type=pot'
  >>> browser.getControl(name='status').value
  ['all']
  >>> browser.getControl(name='type').value
  ['pot']
  >>> print browser.contents
  <!DOCTYPE...
  ...1...5...of...5 results...

Now, we want the approved entries. But we have None.

  >>> browser.open('http://localhost/rosetta/imports?status=APPROVED&type=all')
  >>> browser.url
  'http://localhost/rosetta/imports?status=APPROVED&type=all'
  >>> browser.getControl(name='status').value
  ['APPROVED']
  >>> browser.getControl(name='type').value
  ['all']
  >>> print browser.contents
  <!DOCTYPE...
  ...There are no entries that match this filtering...

Let's change the status of the first entry on the queue to be blocked.

  >>> browser.open('http://localhost/rosetta/imports')
  >>> browser.url
  'http://localhost/rosetta/imports'
  >>> browser.getControl(name='status-1').value
  ['NEEDS_REVIEW']
  >>> browser.getControl(name='status-1').value = ['BLOCKED']
  >>> browser.getControl(name='handle_queue').click()
  >>> browser.url
  'http://localhost/rosetta/imports/+index'

We can see now an entry blocked.

  >>> browser.open('http://localhost/rosetta/imports?status=BLOCKED&type=all')
  >>> browser.url
  'http://localhost/rosetta/imports?status=BLOCKED&type=all'
  >>> browser.getControl(name='status-1').value
  ['BLOCKED']
  >>> print browser.contents
  <!DOCTYPE...
  ...1...1...of...1 result...

And the entries that need review are only 99

  >>> browser.open('http://localhost/rosetta/imports?status=NEEDS_REVIEW&type=all')
  >>> browser.url
  'http://localhost/rosetta/imports?status=NEEDS_REVIEW&type=all'
  >>> browser.getControl(name='status').value
  ['NEEDS_REVIEW']
  >>> browser.getControl(name='type').value
  ['all']
  >>> print browser.contents
  <!DOCTYPE...
  ...1...50...of...99 results...

Let's delete the second entry.

  >>> browser.open('http://localhost/rosetta/imports')
  >>> browser.url
  'http://localhost/rosetta/imports'
  >>> browser.getControl(name='status-2').value
  ['NEEDS_REVIEW']
  >>> browser.getControl(name='status-2').value = ['DELETED']
  >>> browser.getControl(name='handle_queue').click()
  >>> browser.url
  'http://localhost/rosetta/imports/+index'

And see that we have one deleted.

  >>> browser.open('http://localhost/rosetta/imports?status=DELETED&type=all')
  >>> browser.url
  'http://localhost/rosetta/imports?status=DELETED&type=all'
  >>> browser.getControl(name='status-2').value
  ['DELETED']
  >>> print browser.contents
  <!DOCTYPE...
  ...1...1...of...1 result...

And now, we only have 98 entries that need review.

  >>> browser.open('http://localhost/rosetta/imports?status=NEEDS_REVIEW&type=all')
  >>> browser.url
  'http://localhost/rosetta/imports?status=NEEDS_REVIEW&type=all'
  >>> browser.getControl(name='status').value
  ['NEEDS_REVIEW']
  >>> browser.getControl(name='type').value
  ['all']
  >>> print browser.contents
  <!DOCTYPE...
  ...1...50...of...98 results...

Let's check the products/distros filter.

We get the list of pending imports for distributions.

  >>> browser.open('http://localhost/rosetta/imports?kind=distros')
  >>> browser.url
  'http://localhost/rosetta/imports?kind=distros'
  >>> browser.getControl(name='kind').value
  ['distros']

It's empty because we only have entries for products.

  >>> print browser.contents
  <!DOCTYPE...
  ...There are no entries that match this filtering...

And for products.

  >>> browser.open('http://localhost/rosetta/imports?kind=products')
  >>> browser.url
  'http://localhost/rosetta/imports?kind=products'
  >>> browser.getControl(name='kind').value
  ['products']
  >>> print browser.contents
  <!DOCTYPE...
  ...1...50...of...100 results...
