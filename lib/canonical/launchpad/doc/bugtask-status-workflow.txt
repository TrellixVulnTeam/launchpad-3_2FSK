BugTask Status Workflow
=======================

BugTasks have a natural status workflow: Unconfirmed => Confirmed => In
Progress => Fix Committed => Fix Released, etc. Some state transitions
have "side effects".

Currently, the only side effect is that we record the date on which some
status transitions occurred.

Here are examples of each transition that we record. First, let's create
a new bug to work with:

    >>> from zope.component import getUtility
    >>> from canonical.launchpad.interfaces import (
    ...     IDistributionSet, ILaunchBag)

    >>> login("foo.bar@canonical.com")
    >>> foobar = getUtility(ILaunchBag).user

    >>> ubuntu = getUtility(IDistributionSet).get(1)
    >>> ubuntu_mozilla_firefox = ubuntu.getSourcePackage("mozilla-firefox")

    >>> new_bug = ubuntu_mozilla_firefox.createBug(
    ...     owner=foobar, title="a new bug", comment="a test comment")

    >>> ubuntu_firefox_task = new_bug.bugtasks[0]

    >>> print ubuntu_firefox_task.distribution.name
    ubuntu
    >>> print ubuntu_firefox_task.sourcepackagename.name
    mozilla-firefox

Only its datecreated value will be set. All other dates will be None.

    >>> ubuntu_firefox_task.datecreated
    datetime.datetime...

    >>> ubuntu_firefox_task.date_confirmed is None
    True

    >>> ubuntu_firefox_task.date_assigned is None
    True

    >>> ubuntu_firefox_task.date_inprogress is None
    True

    >>> ubuntu_firefox_task.date_closed is None
    True

The bug status cannot be set directly, but the value can be retrieved
directly.

    >>> from canonical.lp.dbschema import BugTaskStatus

    >>> ubuntu_firefox_task.status = BugTaskStatus.CONFIRMED
    Traceback (most recent call last):
      ...
    ForbiddenAttribute: ...

    >>> print ubuntu_firefox_task.status.title
    Unconfirmed

Confirming the bug will set IBugTask.date_confirmed. As with all the
dates we track on bug tasks, this date value is set/changed only when
the task enters that state from another state. Setting an already
CONFIRMED task to CONFIRMED again will not alter the date_confirmed
value.

    >>> ubuntu_firefox_task.transitionToStatus(BugTaskStatus.CONFIRMED)

    >>> print ubuntu_firefox_task.status.title
    Confirmed
    >>> ubuntu_firefox_task.date_confirmed
    datetime.datetime...

    >>> prev_date_confirmed = ubuntu_firefox_task.date_confirmed

    >>> ubuntu_firefox_task.transitionToStatus(BugTaskStatus.CONFIRMED)

    >>> ubuntu_firefox_task.date_confirmed == prev_date_confirmed
    True

If the status regresses to an earlier workflow state, the date_confirmed
is set to None, because it wouldn't make sense to have a date_confirmed
on a bug that's Unconfirmed.

    >>> ubuntu_firefox_task.transitionToStatus(BugTaskStatus.UNCONFIRMED)

    >>> ubuntu_firefox_task.date_confirmed is None
    True

Marking the bug In Progress sets IBugTask.date_inprogress. This is
like an "implicit" confirmation of the bug, so date_confirmed will be
set too.

    >>> ubuntu_firefox_task.transitionToStatus(BugTaskStatus.INPROGRESS)

    >>> print ubuntu_firefox_task.status.title
    In Progress
    >>> ubuntu_firefox_task.date_inprogress
    datetime.datetime...
    >>> ubuntu_firefox_task.date_confirmed
    datetime.datetime...

    >>> prev_date_inprogress = ubuntu_firefox_task.date_inprogress

    >>> ubuntu_firefox_task.transitionToStatus(BugTaskStatus.INPROGRESS)

    >>> ubuntu_firefox_task.date_inprogress == prev_date_inprogress
    True

If the status regresses to an earlier workflow state, then
date_inprogress is set to None, similar to the logic behind date_confirmed:

    >>> ubuntu_firefox_task.transitionToStatus(BugTaskStatus.CONFIRMED)

    >>> ubuntu_firefox_task.date_inprogress is None
    True

If the status is changed from any unresolved status to any resolved
status (Rejected or Fix Released), the date_closed property is
set. The date_closed is always set to None when the task's status is
set to an open status. Note in the transition to FIXRELEASED the
date_inprogress is also set, when it had previously been None.

    >>> ubuntu_firefox_task.transitionToStatus(BugTaskStatus.REJECTED)

    >>> ubuntu_firefox_task.date_closed
    datetime.datetime...

    >>> ubuntu_firefox_task.transitionToStatus(BugTaskStatus.CONFIRMED)
    >>> ubuntu_firefox_task.date_closed is None
    True

    >>> ubuntu_firefox_task.date_inprogress is None
    True
    >>> ubuntu_firefox_task.transitionToStatus(BugTaskStatus.FIXRELEASED)
    >>> ubuntu_firefox_task.date_closed
    datetime.datetime...
    >>> ubuntu_firefox_task.date_inprogress
    datetime.datetime...

Changing from one closed status to another does not change the
date_closed.

    >>> print ubuntu_firefox_task.status.title
    Fix Released
    >>> prev_date_closed = ubuntu_firefox_task.date_closed
    >>> ubuntu_firefox_task.transitionToStatus(BugTaskStatus.REJECTED)

    >>> print ubuntu_firefox_task.status.title
    Rejected
    >>> ubuntu_firefox_task.date_closed == prev_date_closed
    True

Lastly, IBugTask.date_assigned is set when a bugtask goes from being
unassigned, to assigned, but not if the assignee changes from one person
to another. Like status, assignee cannot be set directly, because
setting an assignee has "side effects".

    >>> from canonical.launchpad.interfaces import IPersonSet
    >>> sample_person = getUtility(IPersonSet).get(12)

    >>> ubuntu_firefox_task.assignee = foobar
    Traceback (most recent call last):
      ...
    ForbiddenAttribute: ...

    >>> ubuntu_firefox_task.transitionToAssignee(foobar)

    >>> ubuntu_firefox_task.date_assigned
    datetime.datetime...

    >>> prev_date_assigned = ubuntu_firefox_task.date_assigned
    >>> ubuntu_firefox_task.transitionToAssignee(sample_person)
    >>> ubuntu_firefox_task.date_assigned == prev_date_assigned
    True

    >>> ubuntu_firefox_task.transitionToAssignee(None)
    >>> ubuntu_firefox_task.date_assigned is None
    True

date_xxx and the UNKNOWN status
-------------------------------

When an IBugTask is set to status UNKNOWN, the date_confirmed,
date_closed, and date_inprogress fields are all set to None.

    >>> ubuntu_firefox_task.transitionToStatus(BugTaskStatus.FIXRELEASED)

    >>> ubuntu_firefox_task.date_confirmed
    datetime.datetime...

    >>> ubuntu_firefox_task.date_inprogress
    datetime.datetime...

    >>> ubuntu_firefox_task.date_closed
    datetime.datetime...

    >>> ubuntu_firefox_task.transitionToStatus(BugTaskStatus.UNKNOWN)

    >>> ubuntu_firefox_task.date_confirmed is None
    True

    >>> ubuntu_firefox_task.date_inprogress is None
    True

    >>> ubuntu_firefox_task.date_closed is None
    True