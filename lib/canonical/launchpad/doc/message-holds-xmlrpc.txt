= XMLRPC interface for holding messages =

Messages posted to Launchpad mailing lists can be held for team owner
approval, for any of several reasons.  See `message-hold.txt` for details.

When a message is held for approval, Mailman will send the message text to
Launchpad to be eventually displayed in Launchpad's u/i.

    >>> from canonical.launchpad.ftests.mailinglists_helper import (
    ...     new_person, new_team)
    >>> team_one, list_one = new_team('team-one', True)
    >>> anne = new_person('Anne')

Anne posts a message to the Team One list, but because she is not a member of
the list, Mailman will hold the message for the team's administrators to
approve or reject.

    >>> from email import message_from_string
    >>> message_anne = message_from_string("""\
    ... From: anne.person@example.com
    ... To: team-one@lists.launchpad.dev
    ... Subject: A question
    ... Message-ID: <first-post>
    ... Date: Fri, 01 Aug 2000 01:08:59 -0000
    ...
    ... I have a question about this team.
    ... """)

    >>> from canonical.launchpad.ftests import login
    >>> login('foo.bar@canonical.com')
    >>> mailinglist_api.holdMessage('team-one', message_anne.as_string())
    True

    >>> import transaction
    >>> transaction.commit()

This message is now in Launchpad's librarian and accessible through the
IMessageApprovalSet interface.

    >>> from canonical.launchpad.interfaces import IMessageApprovalSet
    >>> message_set = getUtility(IMessageApprovalSet)
    >>> held_message_anne = message_set.getMessageByMessageID('<first-post>')
    >>> print held_message_anne.message_id
    <first-post>
    >>> print held_message_anne.posted_by.displayname
    Anne Person
    >>> held_message_anne.posted_message.open()
    >>> try:
    ...     print held_message_anne.posted_message.read()
    ... finally:
    ...     held_message_anne.posted_message.close()
    From: anne.person@example.com
    To: team-one@lists.launchpad.dev
    Subject: A question
    Message-ID: <first-post>
    Date: ...
    <BLANKLINE>
    I have a question about this team.
    <BLANKLINE>
    >>> held_message_anne.status
     <DBItem PostedMessageStatus.NEW, (0) New status>

There are no messages waiting to be handled by Mailman yet.

    >>> mailinglist_api.getMessageDispositions()
    {}

Anne's message is on-topic so the list administrator approves it.

    >>> held_message_anne.approve(team_one.teamowner)
    >>> from canonical.launchpad.ftests import syncUpdate
    >>> syncUpdate(held_message_anne)
    >>> held_message_anne.status
    <DBItem PostedMessageStatus.APPROVAL_PENDING, (20) Approval pending>

However, Bart also sends a message to the team, but this one is off-topic so
the list administrator rejects it.

    >>> bart = new_person('Bart')
    >>> message_bart = message_from_string("""\
    ... From: bart.person@example.com
    ... To: team-one@lists.launchpad.dev
    ... Subject: What do Python's eat?
    ... Message-ID: <second-post>
    ... Date: Fri, 01 Aug 2000 01:08:59 -0000
    ...
    ... My snake is hungry and doesn't like the crickets!
    ... """)

    >>> mailinglist_api.holdMessage('team-one', message_bart.as_string())
    True
    >>> held_message_bart = message_set.getMessageByMessageID('<second-post>')
    >>> held_message_bart.reject(team_one.teamowner)
    >>> syncUpdate(held_message_bart)
    >>> held_message_bart.status
    <DBItem PostedMessageStatus.REJECTION_PENDING, (30) Decline pending>

Now there are two messages waiting for Mailman to handle.

    >>> waiting = mailinglist_api.getMessageDispositions()
    >>> for message_id in sorted(waiting):
    ...     list_name, action = waiting[message_id]
    ...     print message_id, list_name, action
    <first-post>  team-one accept
    <second-post> team-one decline

Now that Mailman's received the dispositions, the messages have been
transitioned to their permanent states.

    >>> held_message_anne = message_set.getMessageByMessageID('<first-post>')
    >>> held_message_anne.status
    <DBItem PostedMessageStatus.APPROVED, (40) Approved>
    >>> held_message_bart.status
    <DBItem PostedMessageStatus.REJECTED, (50) Rejected>
