Code imports
============

For now, there is no link to the page that lists all code imports, so
we browse there directly:

    >>> browser.open('http://code.launchpad.dev/+code-imports')
    >>> print browser.title
    Code Imports

Any user can look at the current list of imports.

    >>> anon_browser.open('http://code.launchpad.dev/+code-imports')
    >>> print anon_browser.title
    Code Imports

There are two CodeImports in the sample data and they both show up in
the page:

    >>> table = find_tag_by_id(browser.contents, 'code-import-listing')
    >>> names = [extract_text(tr.td) for tr in table.tbody('tr')]
    >>> for name in names:
    ...     print name
    gnome-terminal/import
    evolution/import

If we click on the code import's name, we go to the associated branch
for that import:

    >>> browser.getLink('gnome-terminal/import').click()
    >>> browser.url
    'http://code.launchpad.dev/~vcs-imports/gnome-terminal/import'


Filtering the code import list
==============================

The code import listing is filterable, on review status and type.
There are no invalid imports in the sample data, so if we filter just
on them we'll see the "no imports found" message.  It is worth
ensuring that the control for filtering on review status reads "Any"
by default, as the code that ensures this is poking at Zope 3
internals a bit.

    >>> browser.open('http://code.launchpad.dev/+code-imports')
    >>> control = browser.getControl(name="field.status")
    >>> control.displayValue
    ['Any']
    >>> control.displayValue = ["Invalid"]
    >>> browser.getControl(name="submit").click()
    >>> print extract_text(
    ...     find_tag_by_id(browser.contents, 'no-imports'))
    No matching code imports found.

Of course selecting the "Any" filtering option ensures that all
imports appear again.

    >>> browser.getControl(name="field.status").displayValue = ["Any"]
    >>> browser.getControl(name="submit").click()
    >>> table = find_tag_by_id(browser.contents, 'code-import-listing')
    >>> names = [extract_text(tr.td) for tr in table.tbody('tr')]
    >>> for name in names:
    ...     print name
    gnome-terminal/import
    evolution/import

We can also filter by type.

    >>> browser.getControl(name="field.type").displayValue = ["Concurrent Versions System"]
    >>> browser.getControl(name="submit").click()
    >>> table = find_tag_by_id(browser.contents, 'code-import-listing')
    >>> names = [extract_text(tr.td) for tr in table.tbody('tr')]
    >>> for name in names:
    ...     print name
    evolution/import

If we create a lot of imports, the listing view will be batched.

    >>> from canonical.launchpad.ftests import login, logout
    >>> login('test@canonical.com')
    >>> for i in range(10):
    ...     new_import = factory.makeCodeImport()

    >>> logout()

    >>> browser.open('http://code.launchpad.dev/+code-imports')
    >>> browser.getLink('Next').click()
    >>> browser.url
    'http://code.launchpad.dev/+code-imports/+index?...start=5...'
