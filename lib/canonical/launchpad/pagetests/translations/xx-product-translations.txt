= Product Translations =

Each product in Launchpad has a Translations page.

    >>> anon_browser.open('http://translations.launchpad.dev/evolution')
    >>> print anon_browser.contents
    <...
    ...Translations of The Evolution Groupware Application...
    ...
    ...Translation overview...
    ...Translation for trunk...
    ...

A helper method to print out language chart.

    >>> def print_language_stats(browser):
    ...     table = find_tag_by_id(browser.contents, 'languagestats')
    ...     if table is None:
    ...         print "No translations."
    ...         return
    ...     language_rows = find_tags_by_class(str(table), 'stats')
    ...     print "%-25s %13s %13s %13s" % (
    ...         "Language", "Untranslated", "Unreviewed", "Changed")
    ...     for row in language_rows:
    ...         cols = row.findAll('td')
    ...         language = extract_text(cols[0])
    ...         untranslated = extract_text(cols[2])
    ...         unreviewed = extract_text(cols[3])
    ...         changed = extract_text(cols[4])
    ...         print "%-25s %13d %13d %13d" % (
    ...             language,
    ...             int(untranslated), int(unreviewed), int(changed))

We even have a language chart table.

    >>> print_language_stats(anon_browser)
    Language                   Untranslated    Unreviewed       Changed
    Portuguese (Brazil)                  25             0             0
    Spanish                              22             2             0

If a product is not set up for translations in Launchpad, and you are its
registrant or an admin, the Translations page suggests that you set it up for
translation, or link the product to a translatable package.

    >>> registrant = setupBrowser(auth='Basic mark@hbd.com:test')
    >>> registrant.open(
    ...     'http://translations.launchpad.dev/gnomebaker')
    >>> print find_main_content(registrant.contents)
    <...How to start using Launchpad Translations...
    This project is not configured to use Launchpad for translations...
    You can change this in the <a ...>project settings</a>.
    ...
    To set up gnomebaker for translation in Launchpad, you need to upload a
    translation template for one of its release series.
    ...
    >>> registrant.getLink(
    ...     url=('/gnomebaker/trunk/'
    ...          '+translations-upload')) is not None
    True
    >>> registrant.getLink(
    ...     url='/gnomebaker/+packages'
    ...     ) is not None
    True

The instructions for the registrant link to the settings page, where they can
configure the project to use Launchpad for translations if desired.

    >>> registrant.getLink('project settings').click()
    >>> print registrant.url
    http://.../gnomebaker/+edit

(The template upload process is tested in xx-translation-import-queue.txt.)


If you're logged in as someone else, the Translations page suggests that you
contact the product's registrant.

    >>> unprivileged = setupBrowser(auth='Basic no-priv@canonical.com:test')
    >>> unprivileged.open('http://translations.launchpad.dev/gnomebaker')
    >>> print extract_text(find_main_content(unprivileged.contents))
    Overview / Import queue
    Translation setup needed
    ...
    This project is not configured to use Launchpad for translations.
    The gnomebaker project is not set up for translation in Launchpad.
    You might want to talk with Foo Bar, the project registrant, about
    using Launchpad for translations.

It omits the registrant-only links ...

    >>> unprivileged.getLink(url='/gnomebaker/trunk/+translations-upload')
    Traceback (most recent call last):
    ...
    LinkNotFoundError
    >>> unprivileged.getLink(url='/gnomebaker/+packages')
    Traceback (most recent call last):
    ...
    LinkNotFoundError

... because you can't do those things.

    >>> unprivileged.open(
    ...     'http://translations.launchpad.dev/gnomebaker/trunk/'
    ...     '+translations-upload')
    Traceback (most recent call last):
    ...
    Unauthorized:...

(In the packages case, you can look at the packages, but you can't link any.)

    >>> unprivileged.open(
    ...     'http://translations.launchpad.dev/gnomebaker/trunk/+addpackage')
    Traceback (most recent call last):
    ...
    Unauthorized:...


Meanwhile, if you're not logged in at all, you might or might not be the
registrant, so the text reflects both possibilities.

    >>> anon_browser.open('http://translations.launchpad.dev/gnomebaker')
    >>> print extract_text(find_main_content(anon_browser.contents))
    Overview / Import queue
    Translation setup needed
    ...
    This project is not configured to use Launchpad for translations.
    The gnomebaker project is not set up for translation in Launchpad.
    If you are Foo Bar, log in to begin the setup process.
    Otherwise, you might want to talk with Foo Bar, the project registrant,
    about using Launchpad for translations.

Finally, if a product states that is not officially using Launchpad
Translations...

    >>> anon_browser.open('http://launchpad.dev/netapplet')
    >>> content = find_tag_by_id(anon_browser.contents, 'uses')
    >>> print extract_text(content)
    Does not use Launchpad for development.

... it doesn't show any translation template:

    >>> anon_browser.getLink('Translations').click()
    >>> print anon_browser.title
    Translations of Network Applet in Launchpad
    >>> print find_main_content(anon_browser.contents)
    <...
    ...Translation setup needed...

And since the Network Applet isn't currently using Launchpad for
Translations, there is no language chart shown.

    >>> print find_tag_by_id(anon_browser.contents, 'language-chart')
    None

When browsing it as an admin, we can see that it has some 'obsolete'
translation templates, which is just that the product is not using
them anymore.

    >>> admin_browser.open('http://translations.launchpad.dev/netapplet')
    >>> print extract_text(
    ...     find_tag_by_id(admin_browser.contents,
    ...                    'portlet-obsolete-translatable-series'))
    All product series with obsolete templates
    NetApplet Series: trunk

While we can see that anonymous people are not getting such information:

    >>> print find_tag_by_id(anon_browser.contents,
    ...                'portlet-obsolete-translatable-series')
    None

If the netapplet project is updated to use Launchpad for translations...

    >>> admin_browser.getLink('Overview').click()
    >>> print admin_browser.title
    Network Applet in Launchpad
    >>> admin_browser.getLink('Change details').click()
    >>> admin_browser.getControl(
    ...     'Translations for this project are done in Launchpad').selected
    False
    >>> admin_browser.getControl(
    ...     'Translations for this project are done in Launchpad'
    ...     ).selected = True
    >>> admin_browser.getControl('Change').click()

...there are no longer any obsolete entires.

    >>> admin_browser.getLink('Translations').click()
    >>> print admin_browser.title
    Translations of Network Applet in Launchpad
    >>> print find_tag_by_id(admin_browser.contents,
    ...                'portlet-obsolete-translatable-series')
    None

Also, we will get some translation status for network applet.

    >>> anon_browser.open('http://translations.launchpad.dev/netapplet')
    >>> print find_main_content(anon_browser.contents)
    <...
    ...Translation overview...
    >>> print_language_stats(anon_browser)
    Language                   Untranslated    Unreviewed       Changed
