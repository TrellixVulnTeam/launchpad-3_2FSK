= Question Subscriptions =

Users can subscribe to specific questions. When they are subscribed they
will receive notifications for any changes to the question.

== Subscribing ==

To subscribe, users use the 'Subscribe' link and then confirm that
they want to subscribe by clicking on the 'Subscribe' button.

    >>> user_browser.open(
    ...     'http://launchpad.dev/firefox/+question/2')
    >>> link = user_browser.getLink('Subscribe')
    >>> link.url
    '.../+question/2/+subscribe'
    >>> link.click()
    >>> print user_browser.title
    Subscription to question #2

    >>> from BeautifulSoup import BeautifulSoup
    >>> soup = BeautifulSoup(user_browser.contents)
    >>> soup.first('h1')
    <h1>Subscribe to question</h1>
    >>> user_browser.getControl('Subscribe').click()

A message confirming that he was subscribed is displayed and the user
name appears in the 'Subscribers' portlet:

    >>> soup = BeautifulSoup(user_browser.contents)
    >>> print soup.first('div', 'informational message').renderContents()
    You have subscribed to this question.

    >>> portlet = soup.first('div', id='question-subscribers')
    >>> portlet.first('h2')
    <h2>Subscribers to question #2</h2>
    >>> portlet.first('ul')
    <ul class="person">
      <li>
        <a href="/~no-priv">No Privileges
            Person</a>
      </li>
    </ul>

== Unsubscribing ==

When the user is subscribed to the question, the 'Subscribe' link
becomes an 'Unsubscribe' link. To unsubscribe, the user follows that
link and then click on the 'Unsubscribe' button.

    >>> link = user_browser.getLink('Unsubscribe')
    >>> link.url
    '.../+question/2/+subscribe'
    >>> link.click()

    >>> soup = BeautifulSoup(user_browser.contents)
    >>> soup.first('h1')
    <h1>Unsubscribe from question</h1>
    >>> user_browser.getControl('Unsubscribe').click()

A confirmation is displayed and the user, which was unsubscribed from
the question, doesn't appear anymore in the subscribers portlet:

    >>> soup = BeautifulSoup(user_browser.contents)
    >>> print soup.first('div', 'informational message').renderContents()
    You have unsubscribed from this question.

    >>> portlet = soup.first('div', id='question-subscribers')
    >>> portlet.first('p')
    <p>
      <i>No subscribers.</i>
    </p>

== Subscribing While Posting A Message ==

It is also possible to subscribe at the same time than posting a message
on an existing question. The user can simply check the 'E-mail me future
discussion about this question' checkbox:

    >>> user_browser.open('http://launchpad.dev/firefox/+question/6')
    >>> user_browser.getControl('Message').value = (
    ...     "Try starting firefox from the command-line. Are there any "
    ...     "messages appearing?")
    >>> user_browser.getControl(
    ...     'E-mail me future discussion about this question').selected = True
    >>> user_browser.getControl("Add Information Request").click()

A notification message is displayed notifying of the subscription:

    >>> for message in find_tags_by_class(user_browser.contents, 'message'):
    ...     print message.renderContents()
    Thanks for your information request.
    You have subscribed to this question.

    >>> soup = BeautifulSoup(user_browser.contents)
    >>> portlet = soup.first('div', id='question-subscribers')
    >>> for subscriber_link in portlet.findAll('a'):
    ...     print subscriber_link.renderContents()
    No Privileges Person

When the person is already subscribed to the question, the checkbox
doesn't appear on the page:

    >>> user_browser.getControl('E-mail me future')
    Traceback (most recent call last):
      ...
    LookupError: ...
