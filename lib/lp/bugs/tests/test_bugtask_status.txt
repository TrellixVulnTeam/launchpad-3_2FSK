= Setting Bug Statuses =

    >>> from lp.bugs.interfaces.bug import CreateBugParams
    >>> from lp.registry.interfaces.person import IPersonSet
    >>> from lp.registry.interfaces.product import IProductSet
    >>> from lp.bugs.interfaces.bugtask import BugTaskStatus

    >>> firefox = getUtility(IProductSet).getByName('firefox')
    >>> nopriv_user = getUtility(IPersonSet).getByName('no-priv')
    >>> login('foo.bar@canonical.com')
    >>> firefox.setBugSupervisor(nopriv_user, nopriv_user)
    >>> login('no-priv@canonical.com')
    >>> bug_params = CreateBugParams(
    ...     nopriv_user, 'Test bug', 'Something')
    >>> firefox_bug = firefox.createBug(bug_params)

Bug Supervisors can transition bugs to the Won't Fix and Triaged
statuses.

    >>> [firefox_bugtask] = firefox_bug.bugtasks
    >>> firefox_bugtask.transitionToStatus(
    ...     BugTaskStatus.WONTFIX, nopriv_user)
    >>> print firefox_bugtask.status.title
    Won't Fix

    >>> firefox_bugtask.transitionToStatus(
    ...     BugTaskStatus.TRIAGED, nopriv_user)
    >>> print firefox_bugtask.status.title
    Triaged

The product registrant can transition to the Won't Fix and Triaged
statuses too.

    >>> firefox_bugtask.transitionToStatus(
    ...     BugTaskStatus.CONFIRMED, nopriv_user)
    >>> print firefox_bugtask.status.title
    Confirmed

    >>> firefox.owner.inTeam(firefox.bug_supervisor)
    False

    >>> firefox_bugtask.transitionToStatus(
    ...     BugTaskStatus.WONTFIX, firefox.owner)
    >>> print firefox_bugtask.status.title
    Won't Fix

    >>> firefox_bugtask.transitionToStatus(
    ...     BugTaskStatus.TRIAGED, firefox.owner)
    >>> print firefox_bugtask.status.title
    Triaged

Users who are not bug supervisors or product registrants cannot
transition the status to Won't Fix or Triaged. The option is not
exposed in the UI, but we also enforce this rule at the database level
to ensure that all call sites adhere to this.

    >>> login('foo.bar@canonical.com')
    >>> firefox.setBugSupervisor(None, None)

    >>> login('no-priv@canonical.com')

    >>> firefox_bugtask.transitionToStatus(
    ...     BugTaskStatus.WONTFIX, nopriv_user)
    Traceback (most recent call last):
    ...
    UserCannotEditBugTaskStatus: Only Bug Supervisors may change status to Won't Fix.

    >>> firefox_bugtask.transitionToStatus(
    ...     BugTaskStatus.TRIAGED, nopriv_user)
    Traceback (most recent call last):
    ...
    UserCannotEditBugTaskStatus: Only Bug Supervisors may change status to Triaged.

The method IBugTask.canTransitionToStatus comes in handy here. It
tells us if a transition to a status is permitted. It is *not* a
dry-run of transitionToStatus, but is good enough and fast enough to
be used by UI code, e.g. to display only those statuses to which a
user can transition a particular bugtask.

    >>> firefox_bugtask.canTransitionToStatus(
    ...     BugTaskStatus.WONTFIX, nopriv_user)
    False

    >>> firefox_bugtask.canTransitionToStatus(
    ...     BugTaskStatus.TRIAGED, nopriv_user)
    False

    >>> firefox_bugtask.canTransitionToStatus(
    ...     BugTaskStatus.INCOMPLETE, nopriv_user)
    True
