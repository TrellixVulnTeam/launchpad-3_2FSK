= Showing a duplicate of a private bug =

When showing a duplicate of a private bug, the title of the private
bug should not be included in the page if the user does not have
permission to view the private bug.

First we mark a bug as private:

    >>> admin_browser.open(
    ...     'http://bugs.launchpad.dev/'
    ...         'debian/+source/mozilla-firefox/+bug/8/+secrecy')
    >>> admin_browser.getControl('Keep bug confidential').selected = True
    >>> admin_browser.getControl('Change').click()
    >>> print admin_browser.url
    http://bugs.launchpad.dev/debian/+source/mozilla-firefox/+bug/8

    >>> from BeautifulSoup import BeautifulSoup
    >>> page_soup = BeautifulSoup(admin_browser.contents)

    >>> print page_soup.h1.string
    Printing doesn't work
    >>> print page_soup.find(attrs={'id': 'bug-properties'}).img['title']
    Private

Next we mark another bug as a duplicate of the private bug:

    >>> admin_browser.open(
    ...     'http://bugs.launchpad.dev/'
    ...         'ubuntu/+source/linux-source-2.6.15/+bug/10/+duplicate')
    >>> admin_browser.getControl('Duplicate Of').value = '8'
    >>> admin_browser.getControl('Change').click()

As a privileged user the title of the private bug can be found in the
duplicate bug page:

    >>> for tag in find_tags_by_class(admin_browser.contents, 'message'):
    ...     print tag.renderContents()
    This report is a duplicate of ...Printing doesn't work...

But when accessing it as an unprivileged user the title of the private
bug cannot be found in the duplicate bug page:

    >>> user_browser.open(admin_browser.url)
    >>> "Printing doesn't work" in user_browser.contents
    False

The same is true when viewing the duplicate bug anonymously:

    >>> anon_browser.open(admin_browser.url)
    >>> "Printing doesn't work" in anon_browser.contents
    False
