Test that Mailman and Launchpad are all nice and integrated like.
Specifically test that Mailman can import Launchpad stuff and that Launchpad
can import Mailman stuff.  This test does not perform any checks that require
Mailman to actually be running.  Those are for other functional tests.

First, test to make sure that Launchpad can import Mailman stuff.

    >>> from Mailman import mm_cfg

Now, check to make sure that the dynamically calculate values match what's in
Launchpad's configuration file.  Because these won't necessarily have known
values, just check that they agree with what's in the launchpad.conf
configuration file.  The are several different forms that the 'smtp' variable
could take.

    >>> if ':' in config.mailman.smtp:
    ...     hostname, port = config.mailman.smtp.split(':', 1)
    ...     port = int(port)
    ... else:
    ...     hostname = config.mailman.smtp
    ...     port = 25
    >>> if not hostname:
    ...     hostname = 'localhost'
    >>> hostname == mm_cfg.SMTPHOST
    True
    >>> port == mm_cfg.SMTPPORT
    True

Check static Mailman configuration variables.

    >>> mm_cfg.MTA
    >>> mm_cfg.ARCHIVE_TO_MBOX
    -1
    >>> mm_cfg.DEFAULT_GENERIC_NONMEMBER_ACTION
    3
    >>> mm_cfg.DEFAULT_SEND_REMINDERS
    False
    >>> mm_cfg.DEFAULT_SEND_WELCOME_MSG
    False
    >>> mm_cfg.DEFAULT_SEND_GOODBYE_MSG
    False
    >>> mm_cfg.DEFAULT_DIGESTABLE
    False
    >>> mm_cfg.DEFAULT_BOUNCE_NOTIFY_OWNER_ON_DISABLE
    False
    >>> mm_cfg.DEFAULT_BOUNCE_NOTIFY_OWNER_ON_REMOVAL
    False

Check that only the set of qrunners we need will be started.

    >>> qrunners = [runnername for (runnername, slices) in mm_cfg.QRUNNERS]
    >>> sorted(qrunners)
    ['BounceRunner', 'OutgoingRunner', 'RetryRunner', 'VirginRunner']

Testing that Mailman can import Launchpad stuff is a bit trickier because we
have to invoke Mailman's command line scripts and check the side-effects of
that.  The best way to do that is to run a bin/withlist script and check the
return code.

XXX BarryWarsaw 04-Apr-2007 This requires a bug fix to upstream Mailman 2.1
that is not yet committed.  Remove this XXX when it is.

    >>> callable = 'canonical.mailman.tests.launchpad.launchpad'
    >>> call('./withlist -q -r %s mailman', callable)
    99
