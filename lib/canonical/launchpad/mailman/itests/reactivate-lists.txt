= Re-activating mailing lists =

A team administrator may re-activate a previously deactivated mailing list
without the need for approval from a Launchpad administrator.  When the
mailing list is re-activated, all previous settings and subscriptions are
restored.

First, No Privileges Person will create a new team and its mailing list.

    >>> import itest_helper
    >>> browser = itest_helper.make_browser()
    >>> browser.open('http://launchpad.dev/people/+newteam')
    >>> browser.getControl(name='field.name').value = 'itest-one'
    >>> browser.getControl('Display Name').value = 'ITest One'
    >>> browser.getControl(name='field.subscriptionpolicy').displayValue = [
    ...     'Open Team']
    >>> browser.getControl('Create').click()
    >>> browser.getLink('Change contact address').click()
    >>> browser.getControl('Apply for Mailing List').click()

    >>> from zope.component import getUtility
    >>> from canonical.launchpad.interfaces import (
    ...     ILaunchpadCelebrities, IMailingListSet, MailingListStatus)

    >>> list_set = getUtility(IMailingListSet)
    >>> experts = getUtility(ILaunchpadCelebrities).mailing_list_experts
    >>> lpadmin = list(experts.allmembers)[0]
    >>> list_one = list_set.get('itest-one')
    >>> list_one.welcome_message = 'Greetings team one members!'
    >>> list_one.review(lpadmin, MailingListStatus.APPROVED)
    >>> from canonical.database.sqlbase import commit
    >>> commit()

    >>> itest_helper.wait_for_mailman()
    >>> from Mailman.Utils import list_names
    >>> sorted(name for name in list_names() if name.startswith('itest-'))
    ['itest-one']

The mailing list now has the expected welcome message.

    >>> from Mailman.MailList import MailList
    >>> mlist = MailList('itest-one', lock=False)
    >>> mlist.welcome_msg
    'Greetings team one members!'

Subscribe Anne to the mailing list so that she can post to after
re-activation.

    >>> from canonical.launchpad.ftests.mailinglists_helper import new_person
    >>> anne = new_person('Anne')
    >>> from canonical.launchpad.interfaces import IPersonSet
    >>> from zope.component import getUtility
    >>> team_one = getUtility(IPersonSet).getByName('itest-one')
    >>> anne.join(team_one)
    >>> from canonical.launchpad.ftests import sync
    >>> sync(list_one)
    >>> list_one.subscribe(anne)
    >>> commit()
    >>> itest_helper.wait_for_mailman()
    >>> mlist.Load()
    >>> sorted(mlist.getMembers())
    ['anne.person@example.com']

Deactivation is not yet exposed in the web interface, so we'll simulate what
that would do.

    >>> list_one.deactivate()
    >>> commit()
    >>> itest_helper.wait_for_mailman()

As far as Mailman is concerned, the mailing list no longer exists.

    >>> sorted(name for name in list_names() if name.startswith('itest-'))
    []

Re-activation is not yet exposed through the web, so simulate what that would
do under the hood.

    >>> from canonical.launchpad.ftests import sync
    >>> sync(list_one)
    >>> list_one.reactivate()
    >>> commit()
    >>> itest_helper.wait_for_mailman()

Now, Mailman reports that the mailing list exists again.

    >>> itest_helper.wait_for_mailman()
    >>> sorted(name for name in list_names() if name.startswith('itest-'))
    ['itest-one']

The archive file has been removed.

    >>> from Mailman import mm_cfg
    >>> import os
    >>> backup_file = os.path.join(mm_cfg.VAR_PREFIX,
    ...                            'backups', 'itest-one.tgz')
    >>> os.path.exists(backup_file)
    False

On the Mailman side, the mailing list has the expected welcome message.

    >>> mlist.Load()
    >>> mlist.welcome_msg
    'Greetings team one members!'

Anne is a member of the re-activated mailing list.

    >>> sorted(mlist.getMembers())
    ['anne.person@example.com']

Anne can still post messages to the reactivated mailing list.

    # This test requires a us to start an SMTP server that accepts messages
    # sent by Mailman's outgoing qrunner and stores these in a Unix mbox.
    >>> import os
    >>> import tempfile
    >>> descriptor, mbox_filename = tempfile.mkstemp()
    >>> os.close(descriptor)
    >>> smtpd = itest_helper.SMTPServer(mbox_filename)
    >>> smtpd.start()

    >>> smtp_watcher = itest_helper.LogWatcher('smtp')
    >>> from Mailman.Post import inject
    >>> inject('itest-one', """\
    ... From: anne.person@example.com
    ... To: itest-one@lists.launchpad.dev
    ... Subject: Hello everybody
    ... Message-ID: <first-injection>
    ...
    ... Hi, I am a member of this team's list.
    ... """)
    >>> smtp_watcher.wait_for_growth()

    >>> messages = list(itest_helper.mbox_iterator(mbox_filename))
    >>> len(messages)
    1
    >>> print messages[0].as_string()
    From: anne.person@example.com
    To: itest-one@lists.launchpad.dev
    Message-ID: <first-injection>
    Subject: [Itest-one] Hello everybody
    ...
    <BLANKLINE>
    Hi, I am a member of this team's list.
    _______________________________________________
    Itest-one mailing list
    Itest-one@launchpad.dev
    http://.../mailman/listinfo/itest-one


== Clean up ==

    >>> smtpd.stop()
