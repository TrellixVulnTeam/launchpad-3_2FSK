= Downloading Product Series Translations =

Products and product series that use Translations offer complete
translation downloads.

    >>> user_browser.open('http://translations.launchpad.dev/evolution')
    >>> download = user_browser.getLink('Download translations')

For products, that option downloads translations for the series that is
currently the preferred translation target.

    >>> download.url
    'http://translations.launchpad.dev/evolution/trunk/+export'

Another way of getting that same export would be to browse to the series
first and requesting a download there.

    >>> user_browser.open('http://translations.launchpad.dev/evolution/trunk')
    >>> user_browser.getLink('Download translations').click()
    >>> user_browser.url
    'http://translations.launchpad.dev/evolution/trunk/+export'

The translations export is implemented by the same machinery that does
it for source packages (tested and documented separately).

    >>> print user_browser.title
    Download translations for "Evolution Series: trunk"

    >>> user_browser.getControl('Request Download').click()
    >>> for message in get_feedback_messages(user_browser.contents):
    ...     print message
    Your request has been received.  Expect to receive an email shortly.


== Use of Launchpad Translations ==

The Download link is not shown if the product does not use Launchpad
Translations.

    >>> from canonical.launchpad.database import ProductSet
    >>> product = ProductSet().getByName('evolution')
    >>> product.official_rosetta = False
    >>> product.sync()
    >>> user_browser.open('http://translations.launchpad.dev/evolution')
    >>> user_browser.getLink('Download translations')
    Traceback (most recent call last):
    ...
    LinkNotFoundError

    >>> # Restore previous state for subsequent tests, and verify
    >>> product.official_rosetta = True
    >>> product.sync()
    >>> user_browser.open('http://translations.launchpad.dev/evolution')
    >>> user_browser.getLink('Download translations') is not None
    True


== Authorization ==

Only logged-in users can request downloads.

    >>> anon_browser.open('http://translations.launchpad.dev/ubuntu/hoary/+source/mozilla/')
    >>> anon_browser.getLink('Download translations').click()
    Traceback (most recent call last):
    ...
    Unauthorized:...


